[
    {
        "id": "d859e56188e62434",
        "type": "tab",
        "label": "PackML",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ddcb12a8b7e6e572",
        "type": "tab",
        "label": "Get Position",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "916a7dcd57334d97",
        "type": "tab",
        "label": "Documentation",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "b2e534a9a5491881",
        "type": "tab",
        "label": "Your First Node Here !",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ab5dcf8839791074",
        "type": "tab",
        "label": "To Python",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "ee49250e48b1cd6d",
        "type": "group",
        "z": "ddcb12a8b7e6e572",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "baf771171c7930ff",
            "f4adb9a16b156a98",
            "022c623acf6b8b9f",
            "50cf4a19ad01a7ed",
            "b6eb76b67f9af184",
            "a5577a1364d09ec7",
            "9662e314c1cd2a6d",
            "c0de5fedc20aedd7",
            "3378dd5ccea45261",
            "73713aa137ca615a",
            "9ea4372ed4ec2b34",
            "a1134de19ac8b756",
            "52cea7b4c0906e94"
        ],
        "x": 84,
        "y": 159,
        "w": 832,
        "h": 422
    },
    {
        "id": "999bf785b0e12d8c",
        "type": "group",
        "z": "d859e56188e62434",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "eb94346aef730bbb",
            "1217d45b76e312b1",
            "2e485f6ff2357209",
            "1f152c2c26ab124c",
            "628c9b295fafc3d8",
            "87a833fb11ba224a",
            "71609b616a4774db"
        ],
        "x": 44,
        "y": 599,
        "w": 982,
        "h": 222
    },
    {
        "id": "265bdfe8d4b41753",
        "type": "group",
        "z": "d859e56188e62434",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "c6cb529ab164eb4b",
            "280154f2769bf290",
            "d8fc42ced454e966",
            "d05d38a1f67a6225",
            "8766102f7fe474f4",
            "0ee5b57d5ed01f48",
            "1e5a951427e248cf",
            "129851a2963b5a58",
            "6a7670a281d74bfc",
            "9ae518ba14682f23",
            "24d9fb6f716b6dac"
        ],
        "x": 14,
        "y": 19,
        "w": 992,
        "h": 242
    },
    {
        "id": "7d9ad1b30a1a1593",
        "type": "group",
        "z": "ddcb12a8b7e6e572",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "130f961586dfe970",
            "d0f7918eb3b846ad",
            "1a808b3d54924894",
            "d1a92b6dc043720e",
            "9bc08b874819c2fb",
            "ee5e815cbbd358a7",
            "5549db7ca9eab5eb",
            "5ff195e51e8649df",
            "9d102ad46f08bc13",
            "c548587a52119711",
            "d265fbdc017837e8"
        ],
        "x": 74,
        "y": 619,
        "w": 878,
        "h": 522
    },
    {
        "id": "55f560f139a6c5b5",
        "type": "group",
        "z": "d859e56188e62434",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "7288558c6ec81ff0",
            "5590e3ff9cc61d31",
            "2ae655fb5597ed5d"
        ],
        "x": 44,
        "y": 859,
        "w": 762,
        "h": 142
    },
    {
        "id": "d6d35040f860a3cf",
        "type": "group",
        "z": "ab5dcf8839791074",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "662d744927a7778b",
            "9ee675a5cbaf0ba6",
            "c4b1e68767269f40",
            "55f789ada00e43cc",
            "2e26b84c0ce17312",
            "739e08c1ec77c2a1",
            "89589c56117004e0",
            "7fdb901b144749c2",
            "3f49b49308941782",
            "2df2dc1e8cb58f18",
            "74b1f1ed583b7b23"
        ],
        "x": 54,
        "y": 59,
        "w": 852,
        "h": 382
    },
    {
        "id": "92d44b9a0ccc0d5d",
        "type": "group",
        "z": "ab5dcf8839791074",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "726e5d0bcaa88af6",
            "423797eee4db58f3",
            "637e8d5dfe0629ef",
            "b14bf409d3cb4c23",
            "c30bc7f3c65ff458",
            "425d3673e09ce310",
            "e7372df9bda2e116",
            "921dd69c2483a6e3",
            "4a7403fe7019f30f",
            "48372f31472ff0fa",
            "90a5c9d02b055a8b"
        ],
        "x": 54,
        "y": 479,
        "w": 852,
        "h": 382
    },
    {
        "id": "0146b7185c7cf9ab",
        "type": "group",
        "z": "ab5dcf8839791074",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "b118cbf616bd714e",
            "1b7ce46ad317f6f0",
            "6095d9b8ee82eac3",
            "72eb1f6120a42d0d",
            "30b4365688cb911a",
            "bce1d31a9d302deb",
            "df2544818a655259",
            "1d02e24dc7bbcaa3",
            "82f9d7b17bbf6e1c",
            "cf39ce5b39b0a1bf",
            "c5dd7376ae2cf232",
            "d23aeaf6299ead54",
            "d53b8510282e63d7"
        ],
        "x": 54,
        "y": 899,
        "w": 912,
        "h": 482
    },
    {
        "id": "5ff195e51e8649df",
        "type": "group",
        "z": "ddcb12a8b7e6e572",
        "g": "7d9ad1b30a1a1593",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "f75c9f6a9a966daf",
            "4ab52d0d783c556e",
            "87c646f96598e6f6"
        ],
        "x": 354,
        "y": 719,
        "w": 572,
        "h": 82
    },
    {
        "id": "9d102ad46f08bc13",
        "type": "group",
        "z": "ddcb12a8b7e6e572",
        "g": "7d9ad1b30a1a1593",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "155b4f8e9f77c0b0",
            "c6ae183f1f1a4247",
            "53d16897975c5bcf"
        ],
        "x": 354,
        "y": 839,
        "w": 572,
        "h": 82
    },
    {
        "id": "c548587a52119711",
        "type": "group",
        "z": "ddcb12a8b7e6e572",
        "g": "7d9ad1b30a1a1593",
        "style": {
            "stroke": "#999999",
            "stroke-opacity": "1",
            "fill": "none",
            "fill-opacity": "1",
            "label": true,
            "label-position": "nw",
            "color": "#a4a4a4"
        },
        "nodes": [
            "eb705f0d4cec4559",
            "7ff9ee80161415e2",
            "885228457da4849e"
        ],
        "x": 354,
        "y": 979,
        "w": 572,
        "h": 82
    },
    {
        "id": "2fc0336def1d763c",
        "type": "ui-base",
        "name": "My Dashboard",
        "path": "/dashboard",
        "appIcon": "robot",
        "includeClientData": true,
        "acceptsClientConfig": [
            "ui-notification",
            "ui-control"
        ],
        "showPathInSidebar": false,
        "showPageTitle": true,
        "navigationStyle": "default",
        "titleBarStyle": "fixed",
        "info": "# HES-SO Valais//Wallis"
    },
    {
        "id": "8966a7b403a8fb88",
        "type": "ui-theme",
        "name": "Default Theme",
        "colors": {
            "surface": "#ffffff",
            "primary": "#0094ce",
            "bgPage": "#8080ff",
            "groupBg": "#ffffff",
            "groupOutline": "#cccccc"
        },
        "sizes": {
            "density": "default",
            "pagePadding": "12px",
            "groupGap": "12px",
            "groupBorderRadius": "4px",
            "widgetGap": "12px"
        }
    },
    {
        "id": "66c6923e3822666a",
        "type": "ui-page",
        "name": "CtrlX Data Layer Test",
        "ui": "2fc0336def1d763c",
        "path": "/robot",
        "icon": "robot-happy-outline",
        "layout": "grid",
        "theme": "8966a7b403a8fb88",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 1,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "166995c74f30a0c3",
        "type": "ui-group",
        "name": "First Chart (Not Used)",
        "page": "66c6923e3822666a",
        "width": "6",
        "height": "1",
        "order": 4,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "e45e312c80fc001e",
        "type": "ctrlx-config",
        "name": "Nodered",
        "hostname": "192.168.0.200",
        "debug": false
    },
    {
        "id": "c5b0190b901ecb86",
        "type": "ctrlx-config-subscription",
        "device": "e45e312c80fc001e",
        "name": "Subscribe",
        "publishIntervalMs": "",
        "publishIntervalUnits": "seconds",
        "samplingInterval": "",
        "samplingIntervalUnits": "seconds",
        "errorInterval": "",
        "errorIntervalUnits": "seconds",
        "keepaliveInterval": "",
        "keepaliveIntervalUnits": "minutes",
        "queueSize": "",
        "queueBehaviour": "DiscardOldest",
        "deadbandValue": ""
    },
    {
        "id": "bb97738361048557",
        "type": "ui-group",
        "name": "Robot Position",
        "page": "66c6923e3822666a",
        "width": "6",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "5e3f352f60d7af69",
        "type": "ui-page",
        "name": "Documentations",
        "ui": "2fc0336def1d763c",
        "path": "/page3",
        "icon": "home",
        "layout": "notebook",
        "theme": "8966a7b403a8fb88",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 2,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "6b2222aa7324c02b",
        "type": "ui-group",
        "name": "Base",
        "page": "5e3f352f60d7af69",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "f52f774838673224",
        "type": "ui-group",
        "name": "Commands and Read",
        "page": "66c6923e3822666a",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "7f4c57d8b5dec895",
        "type": "OpcUa-Endpoint",
        "endpoint": "opc.tcp://192.168.0.200:4840",
        "secpol": "Basic256Sha256",
        "secmode": "SignAndEncrypt",
        "none": false,
        "login": true,
        "usercert": false,
        "usercertificate": "",
        "userprivatekey": ""
    },
    {
        "id": "6f4d4cc842955c98",
        "type": "ui-group",
        "name": "CPU",
        "page": "66c6923e3822666a",
        "width": "6",
        "height": "1",
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "3c78dec33d077414",
        "type": "ui-page",
        "name": "Your First UI",
        "ui": "2fc0336def1d763c",
        "path": "/MyUI",
        "icon": "account-school",
        "layout": "grid",
        "theme": "8966a7b403a8fb88",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 4,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "f30382f0310ff310",
        "type": "ui-page",
        "name": "Alarms",
        "ui": "2fc0336def1d763c",
        "path": "/page2",
        "icon": "alarm",
        "layout": "tabs",
        "theme": "8966a7b403a8fb88",
        "breakpoints": [
            {
                "name": "Default",
                "px": "0",
                "cols": "3"
            },
            {
                "name": "Tablet",
                "px": "576",
                "cols": "6"
            },
            {
                "name": "Small Desktop",
                "px": "768",
                "cols": "9"
            },
            {
                "name": "Desktop",
                "px": "1024",
                "cols": "12"
            }
        ],
        "order": 3,
        "className": "",
        "visible": "true",
        "disabled": "false"
    },
    {
        "id": "dc05feda9ccd5569",
        "type": "ui-group",
        "name": "Alarms",
        "page": "f30382f0310ff310",
        "width": "6",
        "height": "1",
        "order": 1,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "e92068c7487785f2",
        "type": "ui-group",
        "name": "Alarms History",
        "page": "f30382f0310ff310",
        "width": "6",
        "height": "1",
        "order": 2,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "4ebbedd6cabf60b5",
        "type": "ui-group",
        "name": "Warnings",
        "page": "f30382f0310ff310",
        "width": "6",
        "height": "1",
        "order": 3,
        "showTitle": true,
        "className": "",
        "visible": "true",
        "disabled": "false",
        "groupType": "default"
    },
    {
        "id": "c6cb529ab164eb4b",
        "type": "ui-button",
        "z": "d859e56188e62434",
        "g": "265bdfe8d4b41753",
        "group": "f52f774838673224",
        "name": "",
        "label": "Stop",
        "order": 8,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "stop",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "true",
        "topicType": "msg",
        "buttonColor": "red",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 90,
        "y": 220,
        "wires": [
            [
                "d8fc42ced454e966"
            ]
        ]
    },
    {
        "id": "280154f2769bf290",
        "type": "ctrlx-datalayer-request",
        "z": "d859e56188e62434",
        "g": "265bdfe8d4b41753",
        "device": "e45e312c80fc001e",
        "method": "WRITE",
        "path": "plc/app/Application/sym/PackTag/hevsUI/uiCmdStop",
        "payloadFormat": "value_type",
        "name": "Stop",
        "pendingWarnLevel": 50,
        "pendingErrorLevel": 100,
        "x": 510,
        "y": 220,
        "wires": [
            [
                "1e5a951427e248cf"
            ]
        ]
    },
    {
        "id": "628c9b295fafc3d8",
        "type": "ctrlx-datalayer-subscribe",
        "z": "d859e56188e62434",
        "g": "999bf785b0e12d8c",
        "subscription": "c5b0190b901ecb86",
        "path": "plc/app/Application/sym/PackTag/hevsUI/uiStateMasterCurrent",
        "name": "",
        "inputs": 0,
        "x": 260,
        "y": 780,
        "wires": [
            [
                "87a833fb11ba224a"
            ]
        ]
    },
    {
        "id": "87a833fb11ba224a",
        "type": "ui-text",
        "z": "d859e56188e62434",
        "g": "999bf785b0e12d8c",
        "group": "f52f774838673224",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "PackML State : ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 590,
        "y": 780,
        "wires": []
    },
    {
        "id": "1f152c2c26ab124c",
        "type": "ctrlx-datalayer-subscribe",
        "z": "d859e56188e62434",
        "g": "999bf785b0e12d8c",
        "subscription": "c5b0190b901ecb86",
        "path": "plc/app/Application/sym/PackTag/hevsPackTime/Date_and_time_string",
        "name": "",
        "inputs": 0,
        "x": 270,
        "y": 720,
        "wires": [
            [
                "71609b616a4774db"
            ]
        ]
    },
    {
        "id": "71609b616a4774db",
        "type": "ui-text",
        "z": "d859e56188e62434",
        "g": "999bf785b0e12d8c",
        "group": "f52f774838673224",
        "order": 2,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "PLC Time: ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 620,
        "y": 720,
        "wires": []
    },
    {
        "id": "a1060673e2be3a2c",
        "type": "ui-switch",
        "z": "d859e56188e62434",
        "name": "",
        "label": "Alarm 0",
        "group": "f52f774838673224",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": false,
        "decouple": false,
        "topic": "topic",
        "topicType": "msg",
        "style": "",
        "className": "",
        "layout": "row-left",
        "clickableArea": "switch",
        "onvalue": "true",
        "onvalueType": "bool",
        "onicon": "",
        "oncolor": "",
        "offvalue": "false",
        "offvalueType": "bool",
        "officon": "",
        "offcolor": "",
        "x": 140,
        "y": 540,
        "wires": [
            [
                "3f4b455dbd3b8431",
                "f1cf51eaaf3698b4"
            ]
        ]
    },
    {
        "id": "3f4b455dbd3b8431",
        "type": "function",
        "z": "d859e56188e62434",
        "name": "bool8",
        "func": "let msgValue = msg.payload;\n\nmsg.payload = {type:\"bool8\",value:msgValue};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 540,
        "wires": [
            [
                "f67bbd742a35c341"
            ]
        ]
    },
    {
        "id": "f1cf51eaaf3698b4",
        "type": "debug",
        "z": "d859e56188e62434",
        "name": "debug 8",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 340,
        "y": 480,
        "wires": []
    },
    {
        "id": "f67bbd742a35c341",
        "type": "ctrlx-datalayer-request",
        "z": "d859e56188e62434",
        "device": "e45e312c80fc001e",
        "method": "WRITE",
        "path": "plc/app/Application/sym/PackTag/hevsPackAlarm_UI/uiSetAlarm_0",
        "payloadFormat": "value_type",
        "name": "Alarm 0",
        "pendingWarnLevel": 50,
        "pendingErrorLevel": 100,
        "x": 540,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "7c6cf4ac6891125c",
        "type": "ui-button",
        "z": "d859e56188e62434",
        "group": "f52f774838673224",
        "name": "",
        "label": "Start",
        "order": 4,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "restart",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "true",
        "topicType": "msg",
        "buttonColor": "green",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 90,
        "y": 320,
        "wires": [
            [
                "bbc1514fd96b465a"
            ]
        ]
    },
    {
        "id": "bbc1514fd96b465a",
        "type": "function",
        "z": "d859e56188e62434",
        "name": "bool8 TRUE",
        "func": "msg.payload = {type:\"bool8\",value:true};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 320,
        "wires": [
            [
                "fc77d16e676698b4"
            ]
        ]
    },
    {
        "id": "fc77d16e676698b4",
        "type": "ctrlx-datalayer-request",
        "z": "d859e56188e62434",
        "device": "e45e312c80fc001e",
        "method": "WRITE",
        "path": "plc/app/Application/sym/PackTag/hevsUI/uiCmdStart",
        "payloadFormat": "value_type",
        "name": "Start",
        "pendingWarnLevel": 50,
        "pendingErrorLevel": 100,
        "x": 570,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "27b17999284e0525",
        "type": "ctrlx-datalayer-request",
        "z": "d859e56188e62434",
        "device": "e45e312c80fc001e",
        "method": "WRITE",
        "path": "plc/app/Application/sym/PackTag/hevsUI/uiCmdClear",
        "payloadFormat": "value_type",
        "name": "Clear",
        "pendingWarnLevel": 50,
        "pendingErrorLevel": 100,
        "x": 570,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "277dfe0df818b263",
        "type": "ui-button",
        "z": "d859e56188e62434",
        "group": "f52f774838673224",
        "name": "",
        "label": "Clear",
        "order": 5,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "power-plug",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "true",
        "topicType": "msg",
        "buttonColor": "blue",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 90,
        "y": 400,
        "wires": [
            [
                "7d98294381bffb03"
            ]
        ]
    },
    {
        "id": "7d98294381bffb03",
        "type": "function",
        "z": "d859e56188e62434",
        "name": "bool8 TRUE",
        "func": "msg.payload = {type:\"bool8\",value:true};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 400,
        "wires": [
            [
                "27b17999284e0525"
            ]
        ]
    },
    {
        "id": "d8fc42ced454e966",
        "type": "function",
        "z": "d859e56188e62434",
        "g": "265bdfe8d4b41753",
        "name": "bool8 TRUE",
        "func": "msg.payload = {type:\"bool8\",value:true};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 270,
        "y": 220,
        "wires": [
            [
                "280154f2769bf290"
            ]
        ]
    },
    {
        "id": "d05d38a1f67a6225",
        "type": "ctrlx-datalayer-request",
        "z": "d859e56188e62434",
        "g": "265bdfe8d4b41753",
        "device": "e45e312c80fc001e",
        "method": "WRITE",
        "path": "plc/app/Application/sym/PRG_DeviceManager/SetOpenGripper",
        "payloadFormat": "value_type",
        "name": "Open Gripper",
        "pendingWarnLevel": 50,
        "pendingErrorLevel": 100,
        "x": 540,
        "y": 60,
        "wires": [
            [
                "1e5a951427e248cf"
            ]
        ]
    },
    {
        "id": "8766102f7fe474f4",
        "type": "ui-button",
        "z": "d859e56188e62434",
        "g": "265bdfe8d4b41753",
        "group": "bb97738361048557",
        "name": "Close Gripper",
        "label": "Close",
        "order": 2,
        "width": "2",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "true",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 120,
        "y": 120,
        "wires": [
            [
                "6a7670a281d74bfc"
            ]
        ]
    },
    {
        "id": "0ee5b57d5ed01f48",
        "type": "ctrlx-datalayer-request",
        "z": "d859e56188e62434",
        "g": "265bdfe8d4b41753",
        "device": "e45e312c80fc001e",
        "method": "WRITE",
        "path": "plc/app/Application/sym/PRG_DeviceManager/SetCloseGripper",
        "payloadFormat": "value_type",
        "name": "Close Gripper",
        "pendingWarnLevel": 50,
        "pendingErrorLevel": 100,
        "x": 540,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "1e5a951427e248cf",
        "type": "debug",
        "z": "d859e56188e62434",
        "g": "265bdfe8d4b41753",
        "name": "Open Gripper",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 820,
        "y": 100,
        "wires": []
    },
    {
        "id": "129851a2963b5a58",
        "type": "function",
        "z": "d859e56188e62434",
        "g": "265bdfe8d4b41753",
        "name": "bool8 TRUE",
        "func": "msg.payload = {type:\"bool8\",value:true};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 335.8833312988281,
        "y": 60,
        "wires": [
            [
                "d05d38a1f67a6225"
            ]
        ]
    },
    {
        "id": "6a7670a281d74bfc",
        "type": "function",
        "z": "d859e56188e62434",
        "g": "265bdfe8d4b41753",
        "name": "bool8 TRUE",
        "func": "msg.payload = {type:\"bool8\",value:true};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 330,
        "y": 120,
        "wires": [
            [
                "0ee5b57d5ed01f48"
            ]
        ]
    },
    {
        "id": "9ae518ba14682f23",
        "type": "ui-button",
        "z": "d859e56188e62434",
        "g": "265bdfe8d4b41753",
        "group": "bb97738361048557",
        "name": "Open Gripper",
        "label": "Open",
        "order": 1,
        "width": "2",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "true",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 120,
        "y": 60,
        "wires": [
            [
                "129851a2963b5a58"
            ]
        ]
    },
    {
        "id": "eb94346aef730bbb",
        "type": "ctrlx-datalayer-subscribe",
        "z": "d859e56188e62434",
        "g": "999bf785b0e12d8c",
        "subscription": "c5b0190b901ecb86",
        "path": "plc/app/Application/sym/PackTag/hevsUI/uiModeMasterCurrent",
        "name": "",
        "inputs": 0,
        "x": 240,
        "y": 640,
        "wires": [
            [
                "1217d45b76e312b1"
            ]
        ]
    },
    {
        "id": "1217d45b76e312b1",
        "type": "ui-text",
        "z": "d859e56188e62434",
        "g": "999bf785b0e12d8c",
        "group": "f52f774838673224",
        "order": 3,
        "width": 0,
        "height": 0,
        "name": "",
        "label": "PackML Mode : ",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 710,
        "y": 640,
        "wires": []
    },
    {
        "id": "2e485f6ff2357209",
        "type": "comment",
        "z": "d859e56188e62434",
        "g": "999bf785b0e12d8c",
        "name": "Get Current Mode, State and Time",
        "info": "",
        "x": 860,
        "y": 780,
        "wires": []
    },
    {
        "id": "24d9fb6f716b6dac",
        "type": "comment",
        "z": "d859e56188e62434",
        "g": "265bdfe8d4b41753",
        "name": "Manage Gripper Manually",
        "info": "",
        "x": 870,
        "y": 200,
        "wires": []
    },
    {
        "id": "7288558c6ec81ff0",
        "type": "ctrlx-datalayer-subscribe",
        "z": "d859e56188e62434",
        "g": "55f560f139a6c5b5",
        "subscription": "c5b0190b901ecb86",
        "path": "framework/metrics/system/cpu-utilisation-percent",
        "name": "",
        "inputs": 0,
        "x": 250,
        "y": 900,
        "wires": [
            [
                "5590e3ff9cc61d31"
            ]
        ]
    },
    {
        "id": "5590e3ff9cc61d31",
        "type": "ui-gauge",
        "z": "d859e56188e62434",
        "g": "55f560f139a6c5b5",
        "name": "CPU Usage",
        "group": "6f4d4cc842955c98",
        "order": 1,
        "width": 3,
        "height": 3,
        "gtype": "gauge-half",
        "gstyle": "needle",
        "title": "CPU Usage",
        "units": "%",
        "icon": "cpu-64-bit",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#5cd65c"
            },
            {
                "from": "20",
                "color": "#ffc800"
            },
            {
                "from": "90",
                "color": "#ea5353"
            }
        ],
        "min": 0,
        "max": "100",
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 600,
        "y": 900,
        "wires": []
    },
    {
        "id": "2ae655fb5597ed5d",
        "type": "comment",
        "z": "d859e56188e62434",
        "g": "55f560f139a6c5b5",
        "name": "Get CPU Usage from DataLayer",
        "info": "",
        "x": 650,
        "y": 960,
        "wires": []
    },
    {
        "id": "ecbfc16b8319141d",
        "type": "ctrlx-datalayer-request",
        "z": "d859e56188e62434",
        "device": "e45e312c80fc001e",
        "method": "WRITE",
        "path": "plc/app/Application/sym/PRG_Process/xEnableStepByStep",
        "payloadFormat": "value_type",
        "name": "Enable Step",
        "pendingWarnLevel": 50,
        "pendingErrorLevel": 100,
        "x": 750,
        "y": 1060,
        "wires": [
            []
        ]
    },
    {
        "id": "07b152f020a401be",
        "type": "ui-button",
        "z": "d859e56188e62434",
        "group": "bb97738361048557",
        "name": "Next Step",
        "label": "Next Step",
        "order": 15,
        "width": "2",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "true",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 140,
        "y": 1140,
        "wires": [
            [
                "92f85ccad115e6fd"
            ]
        ]
    },
    {
        "id": "c1159b7a59dc5820",
        "type": "ctrlx-datalayer-request",
        "z": "d859e56188e62434",
        "device": "e45e312c80fc001e",
        "method": "WRITE",
        "path": "plc/app/Application/sym/PRG_Process/xOneStep",
        "payloadFormat": "value_type",
        "name": "Close Gripper",
        "pendingWarnLevel": 50,
        "pendingErrorLevel": 100,
        "x": 760,
        "y": 1140,
        "wires": [
            []
        ]
    },
    {
        "id": "17dffc12a500a27c",
        "type": "function",
        "z": "d859e56188e62434",
        "name": "bool8 TRUE",
        "func": "msg.payload = {type:\"bool8\",value:true};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 375.8833312988281,
        "y": 1060,
        "wires": [
            [
                "ecbfc16b8319141d"
            ]
        ]
    },
    {
        "id": "92f85ccad115e6fd",
        "type": "function",
        "z": "d859e56188e62434",
        "name": "bool8 TRUE",
        "func": "msg.payload = {type:\"bool8\",value:true};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 1140,
        "wires": [
            [
                "c1159b7a59dc5820"
            ]
        ]
    },
    {
        "id": "c5e2bcf273895019",
        "type": "ui-button",
        "z": "d859e56188e62434",
        "group": "bb97738361048557",
        "name": "Enable Step",
        "label": "Step Mode",
        "order": 14,
        "width": "2",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "true",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 150,
        "y": 1060,
        "wires": [
            [
                "17dffc12a500a27c"
            ]
        ]
    },
    {
        "id": "08c701e9cca69545",
        "type": "ctrlx-datalayer-request",
        "z": "d859e56188e62434",
        "device": "e45e312c80fc001e",
        "method": "WRITE",
        "path": "plc/app/Application/sym/PRG_Process/xDisableStepByStop",
        "payloadFormat": "value_type",
        "name": "Disable Step",
        "pendingWarnLevel": 50,
        "pendingErrorLevel": 100,
        "x": 570,
        "y": 1100,
        "wires": [
            []
        ]
    },
    {
        "id": "75099c74e074ebe2",
        "type": "function",
        "z": "d859e56188e62434",
        "name": "bool8 TRUE",
        "func": "msg.payload = {type:\"bool8\",value:true};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 375.8833312988281,
        "y": 1100,
        "wires": [
            [
                "08c701e9cca69545"
            ]
        ]
    },
    {
        "id": "53df9826991463c5",
        "type": "ui-button",
        "z": "d859e56188e62434",
        "group": "bb97738361048557",
        "name": "Disable Step",
        "label": "Run Mode",
        "order": 13,
        "width": "2",
        "height": "1",
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "true",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 150,
        "y": 1100,
        "wires": [
            [
                "75099c74e074ebe2"
            ]
        ]
    },
    {
        "id": "baf771171c7930ff",
        "type": "ctrlx-datalayer-subscribe",
        "z": "ddcb12a8b7e6e572",
        "g": "ee49250e48b1cd6d",
        "subscription": "c5b0190b901ecb86",
        "path": "motion/axs/Axis_x/state/values/actual/pos/mm",
        "name": "",
        "inputs": 0,
        "x": 280,
        "y": 260,
        "wires": [
            [
                "9662e314c1cd2a6d",
                "c0de5fedc20aedd7"
            ]
        ]
    },
    {
        "id": "f4adb9a16b156a98",
        "type": "ui-text",
        "z": "ddcb12a8b7e6e572",
        "g": "ee49250e48b1cd6d",
        "group": "bb97738361048557",
        "order": 4,
        "width": 0,
        "height": 0,
        "name": "X",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 820,
        "y": 260,
        "wires": []
    },
    {
        "id": "022c623acf6b8b9f",
        "type": "ctrlx-datalayer-subscribe",
        "z": "ddcb12a8b7e6e572",
        "g": "ee49250e48b1cd6d",
        "subscription": "c5b0190b901ecb86",
        "path": "motion/axs/Axis_y/state/values/actual/pos/mm",
        "name": "",
        "inputs": 0,
        "x": 280,
        "y": 340,
        "wires": [
            [
                "3378dd5ccea45261"
            ]
        ]
    },
    {
        "id": "50cf4a19ad01a7ed",
        "type": "ui-text",
        "z": "ddcb12a8b7e6e572",
        "g": "ee49250e48b1cd6d",
        "group": "bb97738361048557",
        "order": 6,
        "width": 0,
        "height": 0,
        "name": "Y",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 820,
        "y": 340,
        "wires": []
    },
    {
        "id": "b6eb76b67f9af184",
        "type": "ctrlx-datalayer-subscribe",
        "z": "ddcb12a8b7e6e572",
        "g": "ee49250e48b1cd6d",
        "subscription": "c5b0190b901ecb86",
        "path": "motion/axs/Axis_z/state/values/actual/pos/mm",
        "name": "",
        "inputs": 0,
        "x": 280,
        "y": 440,
        "wires": [
            [
                "73713aa137ca615a",
                "9ea4372ed4ec2b34"
            ]
        ]
    },
    {
        "id": "a5577a1364d09ec7",
        "type": "ui-text",
        "z": "ddcb12a8b7e6e572",
        "g": "ee49250e48b1cd6d",
        "group": "bb97738361048557",
        "order": 8,
        "width": 0,
        "height": 0,
        "name": "Z",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "className": "",
        "x": 820,
        "y": 440,
        "wires": []
    },
    {
        "id": "9662e314c1cd2a6d",
        "type": "debug",
        "z": "ddcb12a8b7e6e572",
        "g": "ee49250e48b1cd6d",
        "name": "debug 2",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 200,
        "wires": []
    },
    {
        "id": "c0de5fedc20aedd7",
        "type": "function",
        "z": "ddcb12a8b7e6e572",
        "g": "ee49250e48b1cd6d",
        "name": "Round 0.01",
        "func": "let position = Math.round(msg.payload * 100) / 100;\n\nglobal.set('X_Position', position);\n\nlet postion_mm = 'Axis X : ';\n\npostion_mm = postion_mm.concat(position,' [mm]');\n\nmsg.payload = postion_mm;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 260,
        "wires": [
            [
                "f4adb9a16b156a98"
            ]
        ]
    },
    {
        "id": "3378dd5ccea45261",
        "type": "function",
        "z": "ddcb12a8b7e6e572",
        "g": "ee49250e48b1cd6d",
        "name": "Round 0.01",
        "func": "let position = Math.round(msg.payload * 100) / 100;\n\nglobal.set('Y_Position', position);\n\nlet postion_mm = 'Axis Y : ';\n\npostion_mm = postion_mm.concat(position,' [mm]');\n\nmsg.payload = postion_mm;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 340,
        "wires": [
            [
                "50cf4a19ad01a7ed"
            ]
        ]
    },
    {
        "id": "73713aa137ca615a",
        "type": "function",
        "z": "ddcb12a8b7e6e572",
        "g": "ee49250e48b1cd6d",
        "name": "Round 0.01",
        "func": "let position = Math.round(msg.payload * 100) / 100;\n\nglobal.set('Z_Position', position);\n\nlet postion_mm = 'Axis Z : ';\n\npostion_mm = postion_mm.concat(position,' [mm]');\n\nmsg.payload = postion_mm;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 440,
        "wires": [
            [
                "a5577a1364d09ec7"
            ]
        ]
    },
    {
        "id": "9ea4372ed4ec2b34",
        "type": "function",
        "z": "ddcb12a8b7e6e572",
        "g": "ee49250e48b1cd6d",
        "name": "function 2",
        "func": "let newMsg = msg;\n\nnewMsg.payload.logDate = Date();\n\nmsg = newMsg;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 490,
        "y": 540,
        "wires": [
            [
                "a1134de19ac8b756"
            ]
        ]
    },
    {
        "id": "a1134de19ac8b756",
        "type": "debug",
        "z": "ddcb12a8b7e6e572",
        "g": "ee49250e48b1cd6d",
        "name": "debug 6",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 540,
        "wires": []
    },
    {
        "id": "52cea7b4c0906e94",
        "type": "comment",
        "z": "ddcb12a8b7e6e572",
        "g": "ee49250e48b1cd6d",
        "name": "Axes Position",
        "info": "",
        "x": 180,
        "y": 200,
        "wires": []
    },
    {
        "id": "051050a420f86c31",
        "type": "ui-text",
        "z": "ddcb12a8b7e6e572",
        "group": "bb97738361048557",
        "order": 3,
        "width": "2",
        "height": "1",
        "name": "Gripper",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "row-left",
        "style": false,
        "font": "",
        "fontSize": 16,
        "color": "#717171",
        "wrapText": false,
        "className": "",
        "x": 800,
        "y": 100,
        "wires": []
    },
    {
        "id": "b95fac2dfb2ed145",
        "type": "function",
        "z": "ddcb12a8b7e6e572",
        "name": "Round 0.01",
        "func": "let position = Math.round(msg.payload * 100) / 100;\n\nglobal.set('Gripper_State', position);\n\nlet postion_mm = 'Gripper : ';\n\npostion_mm = postion_mm.concat(position,' [mm]');\n\nmsg.payload = postion_mm;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 610,
        "y": 100,
        "wires": [
            [
                "051050a420f86c31"
            ]
        ]
    },
    {
        "id": "63ba909bc2320dd5",
        "type": "ctrlx-datalayer-subscribe",
        "z": "ddcb12a8b7e6e572",
        "subscription": "c5b0190b901ecb86",
        "path": "plc/app/Application/sym/PRG_DeviceManager/GetGripperSensor_mm",
        "name": "",
        "inputs": 0,
        "x": 260,
        "y": 100,
        "wires": [
            [
                "b95fac2dfb2ed145"
            ]
        ]
    },
    {
        "id": "130f961586dfe970",
        "type": "function",
        "z": "ddcb12a8b7e6e572",
        "g": "7d9ad1b30a1a1593",
        "name": "bool8 TRUE",
        "func": "msg.payload = {type:\"bool8\",value:true};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 660,
        "wires": [
            [
                "d0f7918eb3b846ad"
            ]
        ]
    },
    {
        "id": "d0f7918eb3b846ad",
        "type": "ctrlx-datalayer-request",
        "z": "ddcb12a8b7e6e572",
        "g": "7d9ad1b30a1a1593",
        "device": "e45e312c80fc001e",
        "method": "WRITE",
        "path": "plc/app/Application/sym/PackTag/hevsUI/uiCmdReset",
        "payloadFormat": "value_type",
        "name": "Reset",
        "pendingWarnLevel": 50,
        "pendingErrorLevel": 100,
        "x": 570,
        "y": 660,
        "wires": [
            []
        ]
    },
    {
        "id": "1a808b3d54924894",
        "type": "ui-button",
        "z": "ddcb12a8b7e6e572",
        "g": "7d9ad1b30a1a1593",
        "group": "f52f774838673224",
        "name": "",
        "label": "Reset",
        "order": 7,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "lock-reset",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "true",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 170,
        "y": 660,
        "wires": [
            [
                "130f961586dfe970",
                "d1a92b6dc043720e"
            ]
        ]
    },
    {
        "id": "d1a92b6dc043720e",
        "type": "function",
        "z": "ddcb12a8b7e6e572",
        "g": "7d9ad1b30a1a1593",
        "name": "Reset X Y Z Slider",
        "func": "const msg1 = {payload:-199};\nconst msg2 = {payload:-78};\nconst msg3 = {payload:0};\n\n\nreturn [msg1, msg2, msg3];",
        "outputs": 3,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 230,
        "y": 840,
        "wires": [
            [
                "f75c9f6a9a966daf"
            ],
            [
                "155b4f8e9f77c0b0"
            ],
            [
                "eb705f0d4cec4559"
            ]
        ]
    },
    {
        "id": "9bc08b874819c2fb",
        "type": "ui-button",
        "z": "ddcb12a8b7e6e572",
        "g": "7d9ad1b30a1a1593",
        "group": "166995c74f30a0c3",
        "name": "",
        "label": "Reset",
        "order": 3,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "iconPosition": "left",
        "payload": "1",
        "payloadType": "num",
        "topic": "topic",
        "topicType": "msg",
        "buttonColor": "",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 150,
        "y": 1100,
        "wires": [
            [
                "ee5e815cbbd358a7",
                "d1a92b6dc043720e"
            ]
        ]
    },
    {
        "id": "ee5e815cbbd358a7",
        "type": "ui-slider",
        "z": "ddcb12a8b7e6e572",
        "g": "7d9ad1b30a1a1593",
        "group": "166995c74f30a0c3",
        "name": "",
        "label": "slider",
        "tooltip": "",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": true,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "thumbLabel": "true",
        "showTicks": "always",
        "min": 0,
        "max": 10,
        "step": 1,
        "className": "",
        "iconPrepend": "",
        "iconAppend": "",
        "color": "",
        "colorTrack": "",
        "colorThumb": "",
        "showTextField": false,
        "x": 290,
        "y": 1100,
        "wires": [
            [
                "5549db7ca9eab5eb"
            ]
        ]
    },
    {
        "id": "5549db7ca9eab5eb",
        "type": "ui-gauge",
        "z": "ddcb12a8b7e6e572",
        "g": "7d9ad1b30a1a1593",
        "name": "",
        "group": "166995c74f30a0c3",
        "order": 1,
        "width": 3,
        "height": 3,
        "gtype": "gauge-34",
        "gstyle": "rounded",
        "title": "gauge",
        "units": "units",
        "icon": "",
        "prefix": "",
        "suffix": "",
        "segments": [
            {
                "from": "0",
                "color": "#5cd65c"
            },
            {
                "from": "4",
                "color": "#ffc800"
            },
            {
                "from": "7",
                "color": "#ea5353"
            }
        ],
        "min": 0,
        "max": 10,
        "sizeThickness": 16,
        "sizeGap": 4,
        "sizeKeyThickness": 8,
        "styleRounded": true,
        "styleGlow": false,
        "className": "",
        "x": 470,
        "y": 1100,
        "wires": []
    },
    {
        "id": "f75c9f6a9a966daf",
        "type": "ui-slider",
        "z": "ddcb12a8b7e6e572",
        "g": "5ff195e51e8649df",
        "group": "bb97738361048557",
        "name": "",
        "label": "X Abs. Position",
        "tooltip": "",
        "order": 5,
        "width": "0",
        "height": "0",
        "passthru": false,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "thumbLabel": "true",
        "showTicks": "always",
        "min": "-220",
        "max": "220",
        "step": 1,
        "className": "",
        "iconPrepend": "",
        "iconAppend": "",
        "color": "",
        "colorTrack": "",
        "colorThumb": "",
        "showTextField": false,
        "x": 460,
        "y": 760,
        "wires": [
            [
                "87c646f96598e6f6"
            ]
        ]
    },
    {
        "id": "4ab52d0d783c556e",
        "type": "ctrlx-datalayer-request",
        "z": "ddcb12a8b7e6e572",
        "g": "5ff195e51e8649df",
        "device": "e45e312c80fc001e",
        "method": "WRITE",
        "path": "plc/app/Application/sym/PRG_Process/lrMoveAbs_X",
        "payloadFormat": "value_type",
        "name": "X Abs",
        "pendingWarnLevel": 50,
        "pendingErrorLevel": 100,
        "x": 850,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "87c646f96598e6f6",
        "type": "function",
        "z": "ddcb12a8b7e6e572",
        "g": "5ff195e51e8649df",
        "name": "Double",
        "func": "let position = msg.payload;\n\nmsg.payload = {type:\"double\",value:position};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 760,
        "wires": [
            [
                "4ab52d0d783c556e"
            ]
        ]
    },
    {
        "id": "155b4f8e9f77c0b0",
        "type": "ui-slider",
        "z": "ddcb12a8b7e6e572",
        "g": "9d102ad46f08bc13",
        "group": "bb97738361048557",
        "name": "",
        "label": "Y Abs. Position",
        "tooltip": "",
        "order": 7,
        "width": "0",
        "height": "0",
        "passthru": false,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "thumbLabel": "true",
        "showTicks": "always",
        "min": "-100",
        "max": "100",
        "step": 1,
        "className": "",
        "iconPrepend": "",
        "iconAppend": "",
        "color": "",
        "colorTrack": "",
        "colorThumb": "",
        "x": 460,
        "y": 880,
        "wires": [
            [
                "53d16897975c5bcf"
            ]
        ]
    },
    {
        "id": "c6ae183f1f1a4247",
        "type": "ctrlx-datalayer-request",
        "z": "ddcb12a8b7e6e572",
        "g": "9d102ad46f08bc13",
        "device": "e45e312c80fc001e",
        "method": "WRITE",
        "path": "plc/app/Application/sym/PRG_Process/lrMoveAbs_Y",
        "payloadFormat": "value_type",
        "name": "Y Abs",
        "pendingWarnLevel": 50,
        "pendingErrorLevel": 100,
        "x": 850,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "53d16897975c5bcf",
        "type": "function",
        "z": "ddcb12a8b7e6e572",
        "g": "9d102ad46f08bc13",
        "name": "Double",
        "func": "let position = msg.payload;\n\nmsg.payload = {type:\"double\",value:position};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 880,
        "wires": [
            [
                "c6ae183f1f1a4247"
            ]
        ]
    },
    {
        "id": "eb705f0d4cec4559",
        "type": "ui-slider",
        "z": "ddcb12a8b7e6e572",
        "g": "c548587a52119711",
        "group": "bb97738361048557",
        "name": "",
        "label": "Z Abs. Position",
        "tooltip": "",
        "order": 9,
        "width": "0",
        "height": "0",
        "passthru": false,
        "outs": "all",
        "topic": "topic",
        "topicType": "msg",
        "thumbLabel": "true",
        "showTicks": "always",
        "min": "-149",
        "max": "150",
        "step": 1,
        "className": "",
        "iconPrepend": "",
        "iconAppend": "",
        "color": "",
        "colorTrack": "",
        "colorThumb": "",
        "showTextField": false,
        "x": 460,
        "y": 1020,
        "wires": [
            [
                "885228457da4849e"
            ]
        ]
    },
    {
        "id": "7ff9ee80161415e2",
        "type": "ctrlx-datalayer-request",
        "z": "ddcb12a8b7e6e572",
        "g": "c548587a52119711",
        "device": "e45e312c80fc001e",
        "method": "WRITE",
        "path": "plc/app/Application/sym/PRG_Process/lrMoveAbs_Z",
        "payloadFormat": "value_type",
        "name": "Z Abs",
        "pendingWarnLevel": 50,
        "pendingErrorLevel": 100,
        "x": 850,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "885228457da4849e",
        "type": "function",
        "z": "ddcb12a8b7e6e572",
        "g": "c548587a52119711",
        "name": "Double",
        "func": "let position = msg.payload;\n\nmsg.payload = {type:\"double\",value:position};\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1020,
        "wires": [
            [
                "7ff9ee80161415e2"
            ]
        ]
    },
    {
        "id": "d265fbdc017837e8",
        "type": "comment",
        "z": "ddcb12a8b7e6e572",
        "g": "7d9ad1b30a1a1593",
        "name": "Manage and Init Axes Sliders",
        "info": "",
        "x": 780,
        "y": 1100,
        "wires": []
    },
    {
        "id": "335a3d74571cbab5",
        "type": "ui-markdown",
        "z": "916a7dcd57334d97",
        "group": "6b2222aa7324c02b",
        "name": "",
        "order": 1,
        "width": 0,
        "height": 0,
        "content": "![HEVS](hei-en.png \"alt text when you hover the image\")\n\n# Camera information\n\n## Basler ace 2 R a2A4096-9gmPRO\n[Basler product information](https://www.baslerweb.com/de-de/shop/a2a4096-9gmpro/?utm_source=google&utm_medium=cpc&utm_campaign=DE+-+B+-+Basler+Brand+%26+CoreBiz&utm_term=Basler+ace+2+Models&utm_id=6637978737&gad_source=1&gclid=EAIaIQobChMI4Z6XtcyQigMV8ZWDBx1gGxSBEAAYASAAEgKu6vD_BwE)\n\n[Basler Lens C11-1220-12M f12mm information](https://docs.baslerweb.com/c11-1220-12m-p?_gl=1*pnlb7t*_gcl_aw*R0NMLjE3MzM0MDA2MDAuRUFJYUlRb2JDaE1JNFo2WHRjeVFpZ01WOFpXREJ4MWdHeFNCRUFBWUFTQUFFZ0t1NnZEX0J3RQ..*_gcl_au*MTMyNTYzOTg3MS4xNzMzNDAwNzY5*_ga*MTk4MjU1NDczMC4xNzIzODAzMTI3*_ga_5KSFYEQ7CY*MTczMzQwMDU5OC42LjEuMTczMzQwMDgxOS42LjAuMA..)\n\n\n# Markdown Content\n\n[link to mermaid](.#Mermaid_flowchart)\n\n## Subtitle\nAxis X: {{msg.payload}}\n\n|Table One|Unit|Value|\n|---------|----|-----|\n|Axis X     |K°| ||\n|Hard     |s|  |42   |\n\nLien vers [CtrlX Core](https://www.boschrexroth.com/fr/ch/myrexroth/collaboration/collaboration-rooms/?page=1&path=%2FCtrlx-Automation&search=)\n\n```js\nlet position = Math.round(msg.payload * 100) / 100;\n\nlet postion_mm = 'Axis X : ';\n\npostion_mm = postion_mm.concat(position,' [mm]');\n\nmsg.payload = postion_mm;\n\nreturn msg;\n```\n\nGoes here...\n\n- [x] Write the press release\n- [ ] Update the website\n- [ ] Contact the media\n\nAuthor: [Cédric Lenoir](mailto:cedric.lenoir@hevs.ch)\n\n# Mermaid flowchart\n\n```mermaid\nflowchart TD\n    A[Start] --> B{Is it?}\n    B -->|Yes| C[OK]\n    C --> D[Rethink]\n    D --> B\n    B ---->|No| E[End]\n```\n",
        "className": "",
        "x": 490,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "151e6d4b73ba632d",
        "type": "ctrlx-datalayer-subscribe",
        "z": "916a7dcd57334d97",
        "subscription": "c5b0190b901ecb86",
        "path": "motion/axs/Axis_x/state/values/actual/pos/mm",
        "name": "",
        "inputs": 0,
        "x": 190,
        "y": 320,
        "wires": [
            [
                "335a3d74571cbab5",
                "161a0be0e72ebc2a"
            ]
        ]
    },
    {
        "id": "161a0be0e72ebc2a",
        "type": "debug",
        "z": "916a7dcd57334d97",
        "name": "debug 4",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 360,
        "wires": []
    },
    {
        "id": "662d744927a7778b",
        "type": "inject",
        "z": "ab5dcf8839791074",
        "g": "d6d35040f860a3cf",
        "name": "Generate File",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "55f789ada00e43cc"
            ]
        ]
    },
    {
        "id": "9ee675a5cbaf0ba6",
        "type": "file",
        "z": "ab5dcf8839791074",
        "g": "d6d35040f860a3cf",
        "name": "",
        "filename": ".\\Documents\\AutRob\\NodeOneShotBasler.py",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 610,
        "y": 100,
        "wires": [
            [
                "c4b1e68767269f40"
            ]
        ]
    },
    {
        "id": "c4b1e68767269f40",
        "type": "debug",
        "z": "ab5dcf8839791074",
        "g": "d6d35040f860a3cf",
        "name": "debug 13",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 200,
        "wires": []
    },
    {
        "id": "55f789ada00e43cc",
        "type": "template",
        "z": "ab5dcf8839791074",
        "g": "d6d35040f860a3cf",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "'''\nA simple Program for grabing video from basler camera and converting it to opencv img.\nTested on Basler acA1300-200uc (USB3, linux 64bit , python 3.5)\nModified by Cedric.Lenoir@hevs.ch to write a file with time of the image.\n'''\nfrom pypylon import pylon\nfrom datetime import datetime\nimport cv2\n\ncamera = pylon.InstantCamera(pylon.TlFactory.GetInstance().CreateFirstDevice())\n\n# Grabing Continusely (video) with minimal delay\ncamera.StartGrabbing(pylon.GrabStrategy_LatestImageOnly)\ncamera.ExposureAuto.SetValue(\"Continuous\") # TODO : tester si le paramétre est bien changé !\nconverter = pylon.ImageFormatConverter()\n\n# converting to opencv bgr format\nconverter.OutputPixelFormat = pylon.PixelType_BGR8packed\nconverter.OutputBitAlignment = pylon.OutputBitAlignment_MsbAligned\n\ndef getOnePicture():\n    img=None\n    grabResult = camera.RetrieveResult(5000, pylon.TimeoutHandling_ThrowException)\n\n    if grabResult.GrabSucceeded():\n        # Access the image data\n        image = converter.Convert(grabResult)\n        img = image.GetArray()\n\n    grabResult.Release()\n\n    return img\n\n\nif __name__ == \"__main__\":\n\n    # One Shot\n    grabResult = camera.RetrieveResult(5000, pylon.TimeoutHandling_ThrowException)\n\n    if grabResult.GrabSucceeded():\n            # Access the image data\n            image = converter.Convert(grabResult)\n            img = image.GetArray()\n            cv2.namedWindow('FromRobot One Shot', cv2.WINDOW_NORMAL)\n\n            # Get image size\n            print(f\"Image Width is {img.shape[1]}\")\n            print(f\"Image Height is {img.shape[0]}\")\n\n            # Get time\n            now = datetime.now()\n            print(f\"Today's Time is: , {now.hour}_{now.minute}_{now.second}\")\n            \n            # Using resizeWindow() \n            # cv2.resizeWindow(\"FromRobot One Shot\", 412, 300) \n            cv2.resizeWindow(\"FromRobot One Shot\", 824, 600) \n\n            # Show the image on the scree\n            cv2.imshow('FromRobot One Shot', img)\n\n            # Using cv2.imwrite() method\n            # Saving the image\n            filename = f\"C:/Users/cedric.lenoir/Documents/AutRob/imgRobot/OneShot_{now.hour}_{now.minute}_{now.second}.jpg\"\n            cv2.imwrite(filename, img)\n            print(f\"Written image in {filename}\")\n\n            # Wait until the user closes the window\n            while True:\n                # Wait for 1 millisecond for a key event\n                key = cv2.waitKey(1) & 0xFF\n    \n                # Check if the window is still open\n                if cv2.getWindowProperty('FromRobot One Shot', cv2.WND_PROP_VISIBLE) < 1:\n                    break         \n        \n    # Releasing the resource\n    camera.StopGrabbing()\n\n    cv2.destroyAllWindows()",
        "output": "str",
        "x": 340,
        "y": 100,
        "wires": [
            [
                "9ee675a5cbaf0ba6"
            ]
        ]
    },
    {
        "id": "2e26b84c0ce17312",
        "type": "exec",
        "z": "ab5dcf8839791074",
        "g": "d6d35040f860a3cf",
        "command": "python ./Documents/AutRob/NodeOneShotBasler.py -u",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 490,
        "y": 320,
        "wires": [
            [
                "89589c56117004e0"
            ],
            [
                "7fdb901b144749c2"
            ],
            [
                "3f49b49308941782"
            ]
        ]
    },
    {
        "id": "739e08c1ec77c2a1",
        "type": "inject",
        "z": "ab5dcf8839791074",
        "g": "d6d35040f860a3cf",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 320,
        "wires": [
            [
                "2e26b84c0ce17312"
            ]
        ]
    },
    {
        "id": "89589c56117004e0",
        "type": "debug",
        "z": "ab5dcf8839791074",
        "g": "d6d35040f860a3cf",
        "name": "Output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 240,
        "wires": []
    },
    {
        "id": "7fdb901b144749c2",
        "type": "debug",
        "z": "ab5dcf8839791074",
        "g": "d6d35040f860a3cf",
        "name": "Error",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 320,
        "wires": []
    },
    {
        "id": "3f49b49308941782",
        "type": "debug",
        "z": "ab5dcf8839791074",
        "g": "d6d35040f860a3cf",
        "name": "Return code",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 400,
        "wires": []
    },
    {
        "id": "2df2dc1e8cb58f18",
        "type": "ui-button",
        "z": "ab5dcf8839791074",
        "g": "d6d35040f860a3cf",
        "group": "bb97738361048557",
        "name": "",
        "label": "Snap Shot Time",
        "order": 10,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "image",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "true",
        "topicType": "msg",
        "buttonColor": "blue",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 160,
        "y": 260,
        "wires": [
            [
                "2e26b84c0ce17312"
            ]
        ]
    },
    {
        "id": "726e5d0bcaa88af6",
        "type": "inject",
        "z": "ab5dcf8839791074",
        "g": "92d44b9a0ccc0d5d",
        "name": "Generate File",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 520,
        "wires": [
            [
                "b14bf409d3cb4c23"
            ]
        ]
    },
    {
        "id": "423797eee4db58f3",
        "type": "file",
        "z": "ab5dcf8839791074",
        "g": "92d44b9a0ccc0d5d",
        "name": "",
        "filename": ".\\Documents\\AutRob\\NodeUpdateBasler.py",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 610,
        "y": 520,
        "wires": [
            [
                "637e8d5dfe0629ef"
            ]
        ]
    },
    {
        "id": "637e8d5dfe0629ef",
        "type": "debug",
        "z": "ab5dcf8839791074",
        "g": "92d44b9a0ccc0d5d",
        "name": "debug 14",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 620,
        "wires": []
    },
    {
        "id": "b14bf409d3cb4c23",
        "type": "template",
        "z": "ab5dcf8839791074",
        "g": "92d44b9a0ccc0d5d",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "'''\nA simple Program for grabing video from basler camera and converting it to opencv img.\nTested on Basler acA1300-200uc (USB3, linux 64bit , python 3.5)\n\n'''\nfrom pypylon import pylon\nfrom datetime import datetime\nimport cv2\n\ncamera = pylon.InstantCamera(pylon.TlFactory.GetInstance().CreateFirstDevice())\n\n# Grabing Continusely (video) with minimal delay\ncamera.StartGrabbing(pylon.GrabStrategy_LatestImageOnly)\ncamera.ExposureAuto.SetValue(\"Continuous\") # TODO : tester si le paramétre est bien changé !\nconverter = pylon.ImageFormatConverter()\n\n# converting to opencv bgr format\nconverter.OutputPixelFormat = pylon.PixelType_BGR8packed\nconverter.OutputBitAlignment = pylon.OutputBitAlignment_MsbAligned\n\ndef getOnePicture():\n    img=None\n    grabResult = camera.RetrieveResult(5000, pylon.TimeoutHandling_ThrowException)\n\n    if grabResult.GrabSucceeded():\n        # Access the image data\n        image = converter.Convert(grabResult)\n        img = image.GetArray()\n\n    grabResult.Release()\n\n    return img\n\n\nif __name__ == \"__main__\":\n\n    # One Shot\n    grabResult = camera.RetrieveResult(5000, pylon.TimeoutHandling_ThrowException)\n\n    while camera.IsGrabbing():\n        grabResult = camera.RetrieveResult(5000, pylon.TimeoutHandling_ThrowException)\n\n        if grabResult.GrabSucceeded():\n            # Access the image data\n            image = converter.Convert(grabResult)\n            img = image.GetArray()\n            cv2.namedWindow('FromRobot Update', cv2.WINDOW_NORMAL)\n            cv2.resizeWindow(\"FromRobot Update\", 824, 600) \n            cv2.imshow('FromRobot Update', img)\n\n            # Wait for 1 millisecond for a key event\n            key = cv2.waitKey(1) & 0xFF\n    \n            # Check if the window is still open\n            if cv2.getWindowProperty('FromRobot Update', cv2.WND_PROP_VISIBLE) < 1:\n                break\n\n            \n\n        grabResult.Release()\n        \n    # Releasing the resource\n    camera.StopGrabbing()\n\n    cv2.destroyAllWindows()",
        "output": "str",
        "x": 340,
        "y": 520,
        "wires": [
            [
                "423797eee4db58f3"
            ]
        ]
    },
    {
        "id": "c30bc7f3c65ff458",
        "type": "exec",
        "z": "ab5dcf8839791074",
        "g": "92d44b9a0ccc0d5d",
        "command": "python ./Documents/AutRob/NodeUpdateBasler.py -u",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 480,
        "y": 740,
        "wires": [
            [
                "e7372df9bda2e116"
            ],
            [
                "921dd69c2483a6e3"
            ],
            [
                "4a7403fe7019f30f"
            ]
        ]
    },
    {
        "id": "425d3673e09ce310",
        "type": "inject",
        "z": "ab5dcf8839791074",
        "g": "92d44b9a0ccc0d5d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 740,
        "wires": [
            [
                "c30bc7f3c65ff458"
            ]
        ]
    },
    {
        "id": "e7372df9bda2e116",
        "type": "debug",
        "z": "ab5dcf8839791074",
        "g": "92d44b9a0ccc0d5d",
        "name": "Output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 660,
        "wires": []
    },
    {
        "id": "921dd69c2483a6e3",
        "type": "debug",
        "z": "ab5dcf8839791074",
        "g": "92d44b9a0ccc0d5d",
        "name": "Error",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 740,
        "wires": []
    },
    {
        "id": "4a7403fe7019f30f",
        "type": "debug",
        "z": "ab5dcf8839791074",
        "g": "92d44b9a0ccc0d5d",
        "name": "Return code",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 820,
        "wires": []
    },
    {
        "id": "48372f31472ff0fa",
        "type": "ui-button",
        "z": "ab5dcf8839791074",
        "g": "92d44b9a0ccc0d5d",
        "group": "bb97738361048557",
        "name": "",
        "label": "Continous Update",
        "order": 12,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "video-image",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "true",
        "topicType": "msg",
        "buttonColor": "green",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 170,
        "y": 680,
        "wires": [
            [
                "c30bc7f3c65ff458"
            ]
        ]
    },
    {
        "id": "74b1f1ed583b7b23",
        "type": "comment",
        "z": "ab5dcf8839791074",
        "g": "d6d35040f860a3cf",
        "name": "Snap Shot",
        "info": "In this section:\nNode-red can write a Python file if lost.\nStart the file.\nThe file show an image and load\nit in :\n\n\\Documents\\AutRob\\imgRobot\n\nWith Hour_Minute_Second.\n\nFor example: _OneShot_10_51_33.jpg_",
        "x": 180,
        "y": 180,
        "wires": []
    },
    {
        "id": "90a5c9d02b055a8b",
        "type": "comment",
        "z": "ab5dcf8839791074",
        "g": "92d44b9a0ccc0d5d",
        "name": "Continuous Update",
        "info": "Node-RED send a command to Python.\n\nCan generate file.\nThe call a continous view of the camera.",
        "x": 190,
        "y": 600,
        "wires": []
    },
    {
        "id": "b118cbf616bd714e",
        "type": "inject",
        "z": "ab5dcf8839791074",
        "g": "0146b7185c7cf9ab",
        "name": "Generate File",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 190,
        "y": 940,
        "wires": [
            [
                "72eb1f6120a42d0d"
            ]
        ]
    },
    {
        "id": "1b7ce46ad317f6f0",
        "type": "file",
        "z": "ab5dcf8839791074",
        "g": "0146b7185c7cf9ab",
        "name": "",
        "filename": ".\\Documents\\AutRob\\NodeOneShotBaslerXYZ.py",
        "filenameType": "str",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 630,
        "y": 940,
        "wires": [
            [
                "d53b8510282e63d7"
            ]
        ]
    },
    {
        "id": "6095d9b8ee82eac3",
        "type": "debug",
        "z": "ab5dcf8839791074",
        "g": "0146b7185c7cf9ab",
        "name": "Positions",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 560,
        "y": 1100,
        "wires": []
    },
    {
        "id": "72eb1f6120a42d0d",
        "type": "template",
        "z": "ab5dcf8839791074",
        "g": "0146b7185c7cf9ab",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "'''\nA simple Program for grabing video from basler camera and converting it to opencv img.\nTested on Basler acA1300-200uc (USB3, linux 64bit , python 3.5)\nModified by Cedric.Lenoir@hevs.ch to write a file with time of the image.\n'''\nfrom pypylon import pylon\nfrom datetime import datetime\nimport sys\nimport cv2\n\ncamera = pylon.InstantCamera(pylon.TlFactory.GetInstance().CreateFirstDevice())\n\n# Grabing Continusely (video) with minimal delay\ncamera.StartGrabbing(pylon.GrabStrategy_LatestImageOnly)\ncamera.ExposureAuto.SetValue(\"Continuous\") # TODO : tester si le paramétre est bien changé !\nconverter = pylon.ImageFormatConverter()\n\n# converting to opencv bgr format\nconverter.OutputPixelFormat = pylon.PixelType_BGR8packed\nconverter.OutputBitAlignment = pylon.OutputBitAlignment_MsbAligned\n\n\n\nif __name__ == \"__main__\":\n\n    if len(sys.argv) != 4:\n        print(\"Usage: python your_script.py <number>\")\n        print(len(sys.argv))\n        pos_X = 999\n        pos_Y = -999\n        pos_Z = 999\n    else:\n        user_input_X = sys.argv[1]\n        user_input_Y = sys.argv[2]\n        user_input_Z = sys.argv[3]\n    \n        # Check if the input is numeric\n        if user_input_X.isdigit() or (user_input_X[0] == '-' and user_input_X[1:].isdigit()):\n            pos_X = int(user_input_X)\n\n        else:\n            print(\"Invalid input. Please enter a valid number.\")\n\n        # Check if the input is numeric\n        if user_input_Y.isdigit() or (user_input_Y[0] == '-' and user_input_Y[1:].isdigit()):\n            pos_Y = int(user_input_Y)\n        else:\n            print(\"Invalid input. Please enter a valid number.\")\n\n        # Check if the input is numeric\n        if user_input_Z.isdigit() or (user_input_Z[0] == '-' and user_input_Z[1:].isdigit()):\n            pos_Z = int(user_input_Z)\n        else:\n            print(\"Invalid input. Please enter a valid number.\")            \n\n\n    # One Shot\n    grabResult = camera.RetrieveResult(5000, pylon.TimeoutHandling_ThrowException)\n\n    if grabResult.GrabSucceeded():\n            # Access the image data\n            image = converter.Convert(grabResult)\n            img = image.GetArray()\n            cv2.namedWindow('FromRobot One Shot', cv2.WINDOW_NORMAL)\n\n            # Get image size\n            print(f\"Image Width is {img.shape[1]}\")\n            print(f\"Image Height is {img.shape[0]}\")\n\n            # Get time\n            now = datetime.now()\n            print(f\"Today's Time is: , {now.hour}_{now.minute}_{now.second}\")\n            \n            # Using resizeWindow() \n            # cv2.resizeWindow(\"FromRobot One Shot\", 412, 300) \n            cv2.resizeWindow(\"FromRobot One Shot\", 824, 600) \n\n            # Show the image on the scree\n            cv2.imshow('FromRobot One Shot', img)\n\n            # Using cv2.imwrite() method\n            # Saving the image\n            filename = f\"C:/Users/cedric.lenoir/Documents/AutRob/imgRobot/OneShot_X{pos_X}_Y{pos_Y}_Z{pos_Z}.jpg\"\n            cv2.imwrite(filename, img)\n            print(f\"Written image in {filename}\")\n\n            # Wait until the user closes the window\n            while True:\n                # Wait for 1 millisecond for a key event\n                key = cv2.waitKey(1) & 0xFF\n    \n                # Check if the window is still open\n                if cv2.getWindowProperty('FromRobot One Shot', cv2.WND_PROP_VISIBLE) < 1:\n                    break         \n        \n    # Releasing the resource\n    camera.StopGrabbing()\n\n    cv2.destroyAllWindows()\n",
        "output": "str",
        "x": 340,
        "y": 940,
        "wires": [
            [
                "1b7ce46ad317f6f0"
            ]
        ]
    },
    {
        "id": "30b4365688cb911a",
        "type": "exec",
        "z": "ab5dcf8839791074",
        "g": "0146b7185c7cf9ab",
        "command": "python -u ./Documents/AutRob/NodeOneShotBaslerXYZ.py",
        "addpay": "payload",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "winHide": false,
        "oldrc": false,
        "name": "",
        "x": 440,
        "y": 1220,
        "wires": [
            [
                "df2544818a655259"
            ],
            [
                "1d02e24dc7bbcaa3"
            ],
            [
                "82f9d7b17bbf6e1c"
            ]
        ]
    },
    {
        "id": "bce1d31a9d302deb",
        "type": "inject",
        "z": "ab5dcf8839791074",
        "g": "0146b7185c7cf9ab",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 1160,
        "wires": [
            [
                "d23aeaf6299ead54"
            ]
        ]
    },
    {
        "id": "df2544818a655259",
        "type": "debug",
        "z": "ab5dcf8839791074",
        "g": "0146b7185c7cf9ab",
        "name": "Output",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 1080,
        "wires": []
    },
    {
        "id": "1d02e24dc7bbcaa3",
        "type": "debug",
        "z": "ab5dcf8839791074",
        "g": "0146b7185c7cf9ab",
        "name": "Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 1160,
        "wires": []
    },
    {
        "id": "82f9d7b17bbf6e1c",
        "type": "debug",
        "z": "ab5dcf8839791074",
        "g": "0146b7185c7cf9ab",
        "name": "Return code",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 1340,
        "wires": []
    },
    {
        "id": "cf39ce5b39b0a1bf",
        "type": "ui-button",
        "z": "ab5dcf8839791074",
        "g": "0146b7185c7cf9ab",
        "group": "bb97738361048557",
        "name": "",
        "label": "Snap Shot X Y Z",
        "order": 11,
        "width": 0,
        "height": 0,
        "emulateClick": false,
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "image",
        "iconPosition": "left",
        "payload": "true",
        "payloadType": "bool",
        "topic": "true",
        "topicType": "msg",
        "buttonColor": "lime",
        "textColor": "",
        "iconColor": "",
        "enableClick": true,
        "enablePointerdown": false,
        "pointerdownPayload": "",
        "pointerdownPayloadType": "str",
        "enablePointerup": false,
        "pointerupPayload": "",
        "pointerupPayloadType": "str",
        "x": 160,
        "y": 1100,
        "wires": [
            [
                "d23aeaf6299ead54"
            ]
        ]
    },
    {
        "id": "c5dd7376ae2cf232",
        "type": "comment",
        "z": "ab5dcf8839791074",
        "g": "0146b7185c7cf9ab",
        "name": "Snap Shot X Y Z",
        "info": "In this section:\nNode-red can write a Python file if lost.\nStart the file.\nThe file show an image and load\nit in :\n\n\\Documents\\AutRob\\imgRobot\n\nWith Hour_Minute_Second.\n\nFor example: _OneShot_10_51_33.jpg_",
        "x": 200,
        "y": 1020,
        "wires": []
    },
    {
        "id": "d23aeaf6299ead54",
        "type": "function",
        "z": "ab5dcf8839791074",
        "g": "0146b7185c7cf9ab",
        "name": "function 3",
        "func": "let X_Position = global.get('X_Position');\nlet Y_Position = global.get('Y_Position');\nlet Z_Position = global.get('Z_Position');\n\nlet buildPayload = ' ' + X_Position + ' ' + Y_Position + ' ' + Z_Position;\n\nmsg.payload = buildPayload;\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1100,
        "wires": [
            [
                "6095d9b8ee82eac3",
                "30b4365688cb911a"
            ]
        ]
    },
    {
        "id": "d53b8510282e63d7",
        "type": "debug",
        "z": "ab5dcf8839791074",
        "g": "0146b7185c7cf9ab",
        "name": "debug 15",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 800,
        "y": 1000,
        "wires": []
    }
]