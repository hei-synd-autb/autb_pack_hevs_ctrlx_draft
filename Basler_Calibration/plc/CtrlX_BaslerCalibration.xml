<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="Rexroth" productName="ctrlX PLC Engineering" productVersion="ctrlX PLC 1.20.7" creationDateTime="2025-02-03T10:07:40.8503877" />
  <contentHeader name="CtrlX_BaslerCalibration.project" modificationDateTime="2025-02-03T10:06:22.9872333">
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation />
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes />
    <pous />
  </types>
  <instances>
    <configurations />
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/application" handleUnknown="implementation">
      <resource name="Application">
        <task name="MainTask" interval="PT0.04S" priority="30">
          <pouInstance name="PLC_PACK" typeName="">
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml" />
            </documentation>
          </pouInstance>
          <pouInstance name="PRG_TestAlarm" typeName="">
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml" />
            </documentation>
          </pouInstance>
          <pouInstance name="PRG_Sandbox" typeName="">
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml" />
            </documentation>
          </pouInstance>
          <pouInstance name="PRG_GetTime_CtrlX" typeName="">
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml" />
            </documentation>
          </pouInstance>
          <pouInstance name="PRG_MapBox" typeName="">
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml" />
            </documentation>
          </pouInstance>
          <pouInstance name="PRG_DeviceManager" typeName="">
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml" />
            </documentation>
          </pouInstance>
          <pouInstance name="PRG_Process" typeName="">
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml" />
            </documentation>
          </pouInstance>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
              <TaskSettings KindOfTask="Cyclic" Interval="40" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                <Watchdog Enabled="true" Time="20" TimeUnit="ms" Sensitivity="1" />
              </TaskSettings>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>7f87f880-f708-45a0-b4ca-cc102dabc36b</ObjectId>
            </data>
          </addData>
        </task>
        <globalVars name="HEVS_PackTag_GVL" constant="true">
          <variable name="C_MAXSTATES">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="17" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> Max State number. 0 is invalid</xhtml>
            </documentation>
          </variable>
          <variable name="C_COMMAND_MAXREALPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_COMMAND_MAXSTRINGPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="2" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">/		</xhtml>
            </documentation>
          </variable>
          <variable name="C_COMMAND_MAXLREALPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used in one of the main PackTag branch of the HEVS_PackTag_V30 : Command</xhtml>
            </documentation>
          </variable>
          <variable name="C_COMMAND_MAXDINTPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_COMMAND_MAXRECIPE">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_STATUS_MAXREALPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">/</xhtml>
            </documentation>
          </variable>
          <variable name="C_STATUS_MAXSTRINGPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="2" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">/</xhtml>
            </documentation>
          </variable>
          <variable name="C_STATUS_MAXLREALPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_STATUS_MAXDINTPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used in one of the main PackTag branch of the HEVS_PackTag_V30 : Status</xhtml>
            </documentation>
          </variable>
          <variable name="C_STATUS_MAXRECIPE">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_STATUS_MAXSTACKLIGHT">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_ADMIN_MAXREALPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">/</xhtml>
            </documentation>
          </variable>
          <variable name="C_ADMIN_MAXSTRINGPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="2" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">/</xhtml>
            </documentation>
          </variable>
          <variable name="C_ADMIN_MAXLREALPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_ADMIN_MAXDINTPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_ADMIN_MAXALARMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="20" />
            </initialValue>
          </variable>
          <variable name="C_ADMIN_MAXHISTORYALARMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="20" />
            </initialValue>
          </variable>
          <variable name="C_ADMIN_MAXWARNINGS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="20" />
            </initialValue>
          </variable>
          <variable name="C_ADMIN_MAXCUMULATIVETIMES">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="3" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> Minimum is 0 for [0], Arbitrarily initialized to 3</xhtml>
            </documentation>
          </variable>
          <variable name="C_ADMIN_MAXPRODUCTDATA">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="11" />
            </initialValue>
          </variable>
          <variable name="C_ADMIN_MAXDISABLEDSTATES">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_ADMIN_MAXMODESTRANSITION">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> is absolutely limited by C_ADMIN_MAXMODESTRANSITIONPACK</xhtml>
            </documentation>
          </variable>
          <variable name="C_ADMIN_MAXMODESTRANSITIONPACK">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="31" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> as Pack used DWORD and 0 is reserved, max is limited to 31</xhtml>
            </documentation>
          </variable>
          <variable name="C_MAXMODSTATESTIMES">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_MAXREALVARIABLES">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_MAXSTRINGVARIABLES">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_MAXLREALVARIABLES">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_MAXDINTVARIABLES">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used in lower branches of the HEVS_PackTag_V30</xhtml>
            </documentation>
          </variable>
          <variable name="C_MAXREALINGREDIENTS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_MAXSTRINGINGREDIENTS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_MAXLREALINGREDIENTS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_MAXDINTINGREDIENTS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="hevs_min_packtag_v2022">
            <type>
              <derived name="HEVS_Min_PackTag_V2022" />
            </type>
          </variable>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="qualified_only" Value="" />
              </Attributes>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/buildproperties" handleUnknown="implementation">
              <BuildProperties>
                <LinkAlways>true</LinkAlways>
              </BuildProperties>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>4085d374-ce51-4e14-9918-b32f4c284545</ObjectId>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/mixedattrsvarlist" handleUnknown="implementation">
              <MixedAttrsVarList>
                <globalVars name="HEVS_PackTag_GVL" constant="true">
                  <variable name="C_MAXSTATES">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="17" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Max State number. 0 is invalid</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_COMMAND_MAXREALPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_COMMAND_MAXSTRINGPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="2" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">/		</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_COMMAND_MAXLREALPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used in one of the main PackTag branch of the HEVS_PackTag_V30 : Command</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_COMMAND_MAXDINTPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_COMMAND_MAXRECIPE">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_STATUS_MAXREALPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">/</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_STATUS_MAXSTRINGPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="2" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">/</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_STATUS_MAXLREALPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_STATUS_MAXDINTPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used in one of the main PackTag branch of the HEVS_PackTag_V30 : Status</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_STATUS_MAXRECIPE">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_STATUS_MAXSTACKLIGHT">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_ADMIN_MAXREALPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">/</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_ADMIN_MAXSTRINGPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="2" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">/</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_ADMIN_MAXLREALPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_ADMIN_MAXDINTPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_ADMIN_MAXALARMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="20" />
                    </initialValue>
                  </variable>
                  <variable name="C_ADMIN_MAXHISTORYALARMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="20" />
                    </initialValue>
                  </variable>
                  <variable name="C_ADMIN_MAXWARNINGS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="20" />
                    </initialValue>
                  </variable>
                  <variable name="C_ADMIN_MAXCUMULATIVETIMES">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="3" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Minimum is 0 for [0], Arbitrarily initialized to 3</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_ADMIN_MAXPRODUCTDATA">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="11" />
                    </initialValue>
                  </variable>
                  <variable name="C_ADMIN_MAXDISABLEDSTATES">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_ADMIN_MAXMODESTRANSITION">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> is absolutely limited by C_ADMIN_MAXMODESTRANSITIONPACK</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_ADMIN_MAXMODESTRANSITIONPACK">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="31" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> as Pack used DWORD and 0 is reserved, max is limited to 31</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_MAXMODSTATESTIMES">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_MAXREALVARIABLES">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_MAXSTRINGVARIABLES">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_MAXLREALVARIABLES">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_MAXDINTVARIABLES">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used in lower branches of the HEVS_PackTag_V30</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_MAXREALINGREDIENTS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_MAXSTRINGINGREDIENTS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_MAXLREALINGREDIENTS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_MAXDINTINGREDIENTS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                </globalVars>
                <globalVars name="HEVS_PackTag_GVL">
                  <variable name="hevs_min_packtag_v2022">
                    <type>
                      <derived name="HEVS_Min_PackTag_V2022" />
                    </type>
                  </variable>
                </globalVars>
              </MixedAttrsVarList>
            </data>
          </addData>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 31

!!!!!!	The value of these constants have to be set by the user depending on the system it is implemented on.	!!!!!!\\</xhtml>
          </documentation>
        </globalVars>
        <globalVars name="PackTag">
          <variable name="Command">
            <type>
              <derived name="HEVS_PackTag_Command" />
            </type>
          </variable>
          <variable name="Status">
            <type>
              <derived name="HEVS_PackTag_Status" />
            </type>
          </variable>
          <variable name="Admin">
            <type>
              <derived name="HEVS_PackTag_Admin" />
            </type>
          </variable>
          <variable name="hevsPackTime">
            <type>
              <derived name="HEVS_Time" />
            </type>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> HEVS Time, needed for Alarms and Time in Pack
 Computed with PRG_GetTime_CtrlX
          or   PRG_GetTime_TwinCAT
			or   Your own system</xhtml>
            </documentation>
          </variable>
          <variable name="hevsUI">
            <type>
              <derived name="HEVS_PackTag_UI" />
            </type>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> Help for interface and diagnostic
 HEVS Pack could be used without this Struct.

 Can be used with fbCmdBoolInterface
 Can be used with fbGetActualBoolState</xhtml>
            </documentation>
          </variable>
          <variable name="hevsPackAlarm_UI">
            <type>
              <derived name="HEVS_PackAlarm_UI" />
            </type>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> Help for interface and diagnostic
 HEVS Pack could be used without this Struct.

 Can be used with program PRG_TestAlarm</xhtml>
            </documentation>
          </variable>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="qualified_only" Value="" />
              </Attributes>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>16825ecc-ff12-4bc7-b33f-3c03e1a40b22</ObjectId>
            </data>
          </addData>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 29
	
	Base GVL for HEVS Pack Tag
 File name should be PackTag
</xhtml>
          </documentation>
        </globalVars>
        <globalVars name="GVL_Node">
          <variable name="readREAL">
            <type>
              <REAL />
            </type>
          </variable>
          <variable name="readDINT">
            <type>
              <DINT />
            </type>
          </variable>
          <variable name="readBOOL">
            <type>
              <BOOL />
            </type>
          </variable>
          <variable name="readString">
            <type>
              <string />
            </type>
          </variable>
          <variable name="writeREAL">
            <type>
              <REAL />
            </type>
          </variable>
          <variable name="writeDINT">
            <type>
              <DINT />
            </type>
          </variable>
          <variable name="writeBOOL">
            <type>
              <BOOL />
            </type>
          </variable>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="qualified_only" Value="" />
              </Attributes>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>396a7b9c-ec2e-4ea3-a276-8f8545127323</ObjectId>
            </data>
          </addData>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
	Some GVL to test var with NodeRED.
	
	Source: www.hevs.ch
	Author: Cedric Lenoir
	Date: 22 August 2024
</xhtml>
          </documentation>
        </globalVars>
        <globalVars name="GVL_AxisDefines">
          <variable name="X_Axis">
            <type>
              <derived name="MB_AXISIF_REF" />
            </type>
            <initialValue>
              <structValue>
                <value member="AxisName">
                  <simpleValue value="'Axis_x'" />
                </value>
                <value member="AxisNo">
                  <simpleValue value="1" />
                </value>
              </structValue>
            </initialValue>
          </variable>
          <variable name="Y_Axis">
            <type>
              <derived name="MB_AXISIF_REF" />
            </type>
            <initialValue>
              <structValue>
                <value member="AxisName">
                  <simpleValue value="'Axis_y'" />
                </value>
                <value member="AxisNo">
                  <simpleValue value="2" />
                </value>
              </structValue>
            </initialValue>
          </variable>
          <variable name="Z_Axis">
            <type>
              <derived name="MB_AXISIF_REF" />
            </type>
            <initialValue>
              <structValue>
                <value member="AxisName">
                  <simpleValue value="'Axis_z'" />
                </value>
                <value member="AxisNo">
                  <simpleValue value="3" />
                </value>
              </structValue>
            </initialValue>
          </variable>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="qualified_only" Value="" />
              </Attributes>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>fbed7d43-1b1d-44ab-b273-bda7af868979</ObjectId>
            </data>
          </addData>
        </globalVars>
        <globalVars name="GVL_Abox">
          <variable name="uaAboxInterface">
            <type>
              <derived name="UA_AboxInterface" />
            </type>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> Hardware commands (and soft buttons)</xhtml>
            </documentation>
          </variable>
          <variable name="uaPackBox">
            <type>
              <derived name="UA_PackBox" />
            </type>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> See header of UA_PackBox for more info.</xhtml>
            </documentation>
          </variable>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="qualified_only" Value="" />
              </Attributes>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>31b95c15-5cf4-485c-8394-f9c0ad5586f3</ObjectId>
            </data>
          </addData>
        </globalVars>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Admin">
              <baseType>
                <struct>
                  <variable name="Parameter_Real">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXREALPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Real" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_String">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXSTRINGPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_String" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_Lreal">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXLREALPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Lreal" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_Dint">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXDINTPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Dint" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Alarm">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXALARMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Event" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="AlarmExtent">
                    <type>
                      <DINT />
                    </type>
                    <initialValue>
                      <simpleValue value="HEVS_PackTag_GVL.C_ADMIN_MAXALARMS" />
                    </initialValue>
                  </variable>
                  <variable name="AlarmHistory">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXHISTORYALARMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Event" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="AlarmHistoryExtent">
                    <type>
                      <DINT />
                    </type>
                    <initialValue>
                      <simpleValue value="HEVS_PackTag_GVL.C_ADMIN_MAXHISTORYALARMS" />
                    </initialValue>
                  </variable>
                  <variable name="StopReason">
                    <type>
                      <derived name="HEVS_PackTag_Event" />
                    </type>
                  </variable>
                  <variable name="Warning">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXWARNINGS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Event" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="WarningExtent">
                    <type>
                      <DINT />
                    </type>
                    <initialValue>
                      <simpleValue value="HEVS_PackTag_GVL.C_ADMIN_MAXWARNINGS" />
                    </initialValue>
                  </variable>
                  <variable name="ModeTimeCurrent">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="StateTimeCurrent">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="CumulativeTime">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXCUMULATIVETIMES" />
                        <baseType>
                          <derived name="HEVS_PackTag_CumulativeTimes" />
                        </baseType>
                      </array>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> From TR88 2022: §7.5.3.14 The minimum array extent is 1 (Admin.CumulativeTimes[0]).</xhtml>
                    </documentation>
                  </variable>
                  <variable name="ProductData">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXPRODUCTDATA" />
                        <baseType>
                          <derived name="HEVS_PackTag_ProductData" />
                        </baseType>
                      </array>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> From TR88 2022: §7.5.3.19  The array index of # = 0 can typically be reserved for data regarding the primary product stream</xhtml>
                    </documentation>
                  </variable>
                  <variable name="MachDesignSpeed">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="DisabledStatesCfg">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXDISABLEDSTATES" />
                        <baseType>
                          <DWORD />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="CurDisabledStates">
                    <type>
                      <DWORD />
                    </type>
                  </variable>
                  <variable name="EnabledModesCfg">
                    <type>
                      <DWORD />
                    </type>
                  </variable>
                  <variable name="ModeTransitionCfg">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXMODESTRANSITION" />
                        <baseType>
                          <DWORD />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="PLCDateTime">
                    <type>
                      <DT />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>d108cbab-6e90-4ef9-a391-289fa9a98980</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 31
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Command">
              <baseType>
                <struct>
                  <variable name="UnitMode">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="UnitModeChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="MachSpeed">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="MaterialIntelock">
                    <type>
                      <DWORD />
                    </type>
                  </variable>
                  <variable name="CntrlCmd">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="CmdChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Parameter_Real">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_COMMAND_MAXREALPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Real" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_String">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_COMMAND_MAXSTRINGPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_String" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_Lreal">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_COMMAND_MAXLREALPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Lreal" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_Dint">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_COMMAND_MAXDINTPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Dint" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="SelectedRecipe">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="RecipeChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Recipe">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_COMMAND_MAXRECIPE" />
                        <baseType>
                          <derived name="HEVS_PackTag_Recipe" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>0b4060a5-ab77-408d-bfc1-5a7cf1bbaac8</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 31
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Ingredients">
              <baseType>
                <struct>
                  <variable name="Parameter_Real">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_MAXREALINGREDIENTS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Real" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_String">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_MAXSTRINGINGREDIENTS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_String" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_Lreal">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_MAXLREALINGREDIENTS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Lreal" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_Dint">
                    <type>
                      <array>
                        <dimension lower="1" upper=".HEVS_PackTag_GVL.C_MAXDINTINGREDIENTS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Dint" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>82c9fbec-028e-4b74-984e-6e8f1eabba7d</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA-TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Status">
              <baseType>
                <struct>
                  <variable name="UnitModeCurrent">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="UnitModeRequested">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> I consider that there is an error in TR88 2022 §7.5.2.2</xhtml>
                    </documentation>
                  </variable>
                  <variable name="UnitModeChangeInProcess">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="StateCurrent">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="StateRequested">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="StateChangeInProcess">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="MachSpeed">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="CurMachSpeed">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="MaterialInterlock">
                    <type>
                      <DWORD />
                    </type>
                  </variable>
                  <variable name="EquipmentInterlock">
                    <type>
                      <derived name="HEVS_PackTag_Equipment_Interlock" />
                    </type>
                  </variable>
                  <variable name="Parameter_Real">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_STATUS_MAXREALPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Real" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_String">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_STATUS_MAXSTRINGPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_String" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_Lreal">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_STATUS_MAXLREALPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Lreal" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_Dint">
                    <type>
                      <array>
                        <dimension lower="1" upper=".HEVS_PackTag_GVL.C_STATUS_MAXDINTPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Dint" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="RecipeCurrent">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="RecipeRequested">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="RecipeChangeInProcess">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Recipe">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_STATUS_MAXRECIPE" />
                        <baseType>
                          <derived name="HEVS_PackTag_Recipe" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Stacklight">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_STATUS_MAXSTACKLIGHT" />
                        <baseType>
                          <DWORD />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>c49232f3-8d6a-444f-b018-be658dc0e900</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 31
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_V2022">
              <baseType>
                <struct>
                  <variable name="Command">
                    <type>
                      <derived name="HEVS_PackTag_Command" />
                    </type>
                  </variable>
                  <variable name="Status">
                    <type>
                      <derived name="HEVS_PackTag_Status" />
                    </type>
                  </variable>
                  <variable name="Admin">
                    <type>
                      <derived name="HEVS_PackTag_Admin" />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>ede584f4-faea-4edc-ac4f-26e11158079f</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 31
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_UI">
              <baseType>
                <struct>
                  <variable name="uiCmdReset">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Bool commands for UI User inteface</xhtml>
                    </documentation>
                  </variable>
                  <variable name="uiCmdStart">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiCmdStop">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiCmdHold">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiCmdUnhold">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiCmdSuspend">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiCmdUnsuspend">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiCmdAbort">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiCmdClear">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiCmdComplete">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateClearing">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Bool states for UI User Inteface</xhtml>
                    </documentation>
                  </variable>
                  <variable name="uiStateStopped">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateStarting">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateIdle">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateSuspended">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateExecute">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateStopping">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateAborting">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateAborted">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateHolding">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateHeld">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateUnholding">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateSuspending">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateUnsuspending">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateResetting">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateCompleting">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateCompleted">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiModeProduction">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Some Modes of UI User Interface</xhtml>
                    </documentation>
                  </variable>
                  <variable name="uiModeMaintenance">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiModeManual">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiModeTest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiModeUser_05">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiModeUser_06">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiModeUser_07">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiModeUser_08">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateMasterCurrent">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'Not linked'" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Some strings for diagnostic</xhtml>
                    </documentation>
                  </variable>
                  <variable name="uiStateMasterDiagnostic">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'Not linked'" />
                    </initialValue>
                  </variable>
                  <variable name="uiModeMasterCurrent">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'Not linked'" />
                    </initialValue>
                  </variable>
                  <variable name="uiModeMasterDiagnostic">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'Not linked'" />
                    </initialValue>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>16b6481b-a00d-4b5c-b59c-fa631f342f7f</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 29
	
	This structure is made to be available in GVL PackTag
 With name hevsUI to help diagnositic and interface of this implementation

	To avoid to lose links if code is modified for info not in base PackTag 
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_DateTime">
              <baseType>
                <struct>
                  <variable name="Year">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Can be changed to SINT, INT, or DINT only!!</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Month">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Can be changed to SINT, INT, or DINT only!!</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Day">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Can be changed to SINT, INT, or DINT only!!</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Hour">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Can be changed to SINT, INT, or DINT only!!</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Minute">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Can be changed to SINT, INT, or DINT only!!</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Second">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Can be changed to SINT, INT, or DINT only!!</xhtml>
                    </documentation>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>75ba484e-dc21-4db8-9603-488e87a6e26f</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Parameter_Real">
              <baseType>
                <struct>
                  <variable name="ID">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Name">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="Unit">
                    <type>
                      <string length="6" />
                    </type>
                  </variable>
                  <variable name="Value">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>d2837c06-ebe6-4f26-9245-94edca3e7121</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Parameter_String">
              <baseType>
                <struct>
                  <variable name="ID">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Name">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="Unit">
                    <type>
                      <string length="6" />
                    </type>
                  </variable>
                  <variable name="Value">
                    <type>
                      <string />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>009e0116-23d4-45fb-b879-708dea550fd9</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Parameter_Lreal">
              <baseType>
                <struct>
                  <variable name="ID">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Name">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="Unit">
                    <type>
                      <string length="6" />
                    </type>
                  </variable>
                  <variable name="Value">
                    <type>
                      <LREAL />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>45d5e6b7-0b56-4e4f-ae34-9664522a836e</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Parameter_Dint">
              <baseType>
                <struct>
                  <variable name="ID">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Name">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="Unit">
                    <type>
                      <string length="6" />
                    </type>
                  </variable>
                  <variable name="Value">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>eb334bfc-9e8f-458d-bef5-d6a961676728</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Recipe">
              <baseType>
                <struct>
                  <variable name="ID">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Name">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="Unit">
                    <type>
                      <string length="6" />
                    </type>
                  </variable>
                  <variable name="PrimaryQty">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="ProcessVariables">
                    <type>
                      <derived name="HEVS_PackTag_Process_Variables" />
                    </type>
                  </variable>
                  <variable name="Ingredients">
                    <type>
                      <derived name="HEVS_PackTag_Ingredients" />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>b76c5b45-a44a-4a62-8024-a9767004cdf1</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_ProductData">
              <baseType>
                <struct>
                  <variable name="ID">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Name">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="Unit">
                    <type>
                      <string length="6" />
                    </type>
                  </variable>
                  <variable name="PrimaryQty">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="ConsumedCount">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="ProcessedCount">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="DefectiveCount">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="AccConsumedCount">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="AccProcessedCount">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="AccDefectiveCount">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>a6d48100-70aa-4264-894a-9da5295d973b</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 31
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_CumulativeTimes">
              <baseType>
                <struct>
                  <variable name="AccTimeSinceReset">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="ModeStateTimes">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_MAXMODSTATESTIMES" />
                        <baseType>
                          <derived name="HEVS_PackTag_ModeStateTimes" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>49131235-aab3-4d38-a937-50f47faa23f2</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_ModeStateTimes">
              <baseType>
                <struct>
                  <variable name="Mode">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="State">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_MAXSTATES" />
                        <baseType>
                          <DINT />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>28770257-7468-46c1-b9e4-d78e8d2c5114</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Process_Variables">
              <baseType>
                <struct>
                  <variable name="Parameter_Real">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_MAXREALVARIABLES" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Real" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_String">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_MAXSTRINGVARIABLES" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_String" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_Lreal">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_MAXLREALVARIABLES" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Lreal" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_Dint">
                    <type>
                      <array>
                        <dimension lower="1" upper=".HEVS_PackTag_GVL.C_MAXDINTVARIABLES" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Dint" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>9aabf17d-e21a-4f8e-9b32-f667a6c3dbb8</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Event">
              <baseType>
                <struct>
                  <variable name="Trigger">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="ID">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Value">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Message">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="Category">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="DateTime">
                    <type>
                      <DT />
                    </type>
                  </variable>
                  <variable name="AckDateTime">
                    <type>
                      <DT />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>690ae37f-d77f-4d91-aaf1-6a5d8e6e0795</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA-TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Equipment_Interlock">
              <baseType>
                <struct>
                  <variable name="Blocked">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Starved">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>f382b094-734b-4952-b47e-2816cff8d29f</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA-TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_Min_PackTag_V2022">
              <baseType>
                <struct>
                  <variable name="MinCommand">
                    <type>
                      <derived name="HEVS_Min_PackTag_Command" />
                    </type>
                  </variable>
                  <variable name="MinStatus">
                    <type>
                      <derived name="HEVS_Min_PackTag_Status" />
                    </type>
                  </variable>
                  <variable name="MinAdmin">
                    <type>
                      <derived name="HEVS_Min_PackTag_Admin" />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>faffa4d6-c6bc-457a-9efa-07f65f485ffc</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 31
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_Min_PackTag_Admin">
              <baseType>
                <struct>
                  <variable name="ProductData">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_ADMIN_MAXPRODUCTDATA" />
                        <baseType>
                          <derived name="HEVS_Min_PackTag_ProductData" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="StopReasonMin">
                    <type>
                      <derived name="HEVS_Min_PackTag_Event" />
                    </type>
                  </variable>
                  <variable name="CurDisabledStates">
                    <type>
                      <DWORD />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>a43cddf4-c8a5-44d1-8ba4-9f1f7a937613</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 31
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_Min_PackTag_Command">
              <baseType>
                <struct>
                  <variable name="UnitMode">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="UnitModeChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="MachSpeed">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="CntrlCmd">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="CmdChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>65889f7d-d5e2-4470-999d-f8480f921136</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 31
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_Min_PackTag_Status">
              <baseType>
                <struct>
                  <variable name="UnitModeCurrent">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="StateCurrent">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="MachSpeed">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="CurMachSpeed">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>0d613522-abc4-40b6-a451-6e71583df5e1</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 31
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_Min_PackTag_ProductData">
              <baseType>
                <struct>
                  <variable name="ProcessedCount">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="DefectiveCount">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>7ab4fa7d-1459-4db4-b429-607e425318b0</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 31
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_Min_PackTag_Event">
              <baseType>
                <struct>
                  <variable name="ID">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>e1863f81-df82-4b38-af75-947ee5ffedda</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA-TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_PackCmd">
              <baseType>
                <enum>
                  <values>
                    <value name="eUndefined" value="0" />
                    <value name="eReset" value="1" />
                    <value name="eStart" value="2" />
                    <value name="eStop" value="3" />
                    <value name="eHold" value="4" />
                    <value name="eUnhold" value="5" />
                    <value name="eSuspend" value="6" />
                    <value name="eUnsuspend" value="7" />
                    <value name="eAbort" value="8" />
                    <value name="eClear" value="9" />
                    <value name="eComplete" value="10" />
                  </values>
                  <baseType>
                    <DINT />
                  </baseType>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>0201c49d-7c4f-44a5-a3fb-73388760e8e0</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Automation Box CtrlX S3
	Author:		Romain Ferrari
	Date:		2024 August 16
	
	Summary:	Enum OF possible Commands for the Command.CntrlCmd to take. This enum use data type and value according
                Document: ISA-TR88.00.02-2022 
                          / 7.5.1.5 Command.CntrlCmd
                          
    Note: Accoring to ISA-TR88.00.02-2022
          This is a DINT
          


 {attribute 'strict'}</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_PackState">
              <baseType>
                <enum>
                  <values>
                    <value name="eUndefined" value="0" />
                    <value name="eClearing" value="1" />
                    <value name="eStopped" value="2" />
                    <value name="eStarting" value="3" />
                    <value name="eIdle" value="4" />
                    <value name="eSuspended" value="5" />
                    <value name="eExecute" value="6" />
                    <value name="eStopping" value="7" />
                    <value name="eAborting" value="8" />
                    <value name="eAborted" value="9" />
                    <value name="eHolding" value="10" />
                    <value name="eHeld" value="11" />
                    <value name="eUnholding" value="12" />
                    <value name="eSuspending" value="13" />
                    <value name="eUnsuspending" value="14" />
                    <value name="eResetting" value="15" />
                    <value name="eCompleting" value="16" />
                    <value name="eCompleted" value="17" />
                  </values>
                  <baseType>
                    <DINT />
                  </baseType>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>00faab18-5d99-44a7-b706-06eacad107ed</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Automation Box CtrlX S3
	Author:		Romain Ferrari
	Date:		2024 August 16
	
	Summary:	Enum of possible states for Status.StateCurrent to take. This enum use data type and value according
                Document: ISA-TR88.00.02-2022 
                          / 7.5.2.4 Status.StateCurrent
                          
    Note: Accoring to ISA-TR88.00.02-2022
          This is a DINT
          


 {attribute 'strict'}</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="ST_PackCmd">
              <baseType>
                <struct>
                  <variable name="Undefined">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Reset">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Start">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Stop">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Hold">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Unhold">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Suspend">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Unsuspend">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Abort">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Clear">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Complete">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="NotUsed">
                    <type>
                      <array>
                        <dimension lower="1" upper="14" />
                        <baseType>
                          <BOOL />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>ff08f30b-a0ba-4953-a108-b05c11eb97fa</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2023 October 16
	
	Summary:	This enum use data type and value according
                Document: ISA-TR88.00.02-2022 
                          / 7.5.2.4 State Current
                          
    Note: Accoring to ISA-TR88.00.02-2022
          This is a DINT
          </xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="ST_PackState">
              <baseType>
                <struct>
                  <variable name="Undefined">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Clearing">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Stopped">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Starting">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Idle">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Suspended">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Execute">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Stopping">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Aborting">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Aborted">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Holding">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Held">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Unholding">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Suspending">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Unsuspending">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Resetting">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Completing">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Completed">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>fb64425a-81bf-45a4-b7ac-34663996dfac</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 29
	
	This struct is mainly used to build U_StateBitDword</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_PackModes">
              <baseType>
                <enum>
                  <values>
                    <value name="Invalid" value="0" />
                    <value name="Production" value="1" />
                    <value name="Maintenance" value="2" />
                    <value name="Manual" value="3" />
                    <value name="Test" value="4" />
                    <value name="User_05" value="5" />
                    <value name="User_06" value="6" />
                    <value name="User_07" value="7" />
                    <value name="User_08" value="8" />
                  </values>
                  <baseType>
                    <DINT />
                  </baseType>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>8fa2b963-faae-404f-b23c-89e5d0dc2df6</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Automation Box CtrlX S3
	Author:		Romain Ferrari
	Date:		2024 August 16
	
	Summary:	Enum of possible modes that Command.UnitMode can take. This enum use data type and value according to 
                Document: ISA-TR88.00.02-2022 
                          / 7.5.1.1 Command.UnitMode
                          
    Note: Accoring to ISA-TR88.00.02-2022
          This is a DINT
          


 {attribute 'strict'}:   </xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_PackDisabledStates">
              <baseType>
                <enum>
                  <values>
                    <value name="none" value="0" />
                    <value name="eClearing" value="2" />
                    <value name="eStopped" value="4" />
                    <value name="eStarting" value="8" />
                    <value name="eIdle" value="16" />
                    <value name="eSuspended" value="32" />
                    <value name="eExecute" value="64" />
                    <value name="eStopping" value="128" />
                    <value name="eAborting" value="256" />
                    <value name="eAborted" value="512" />
                    <value name="eHolding" value="1024" />
                    <value name="eHeld" value="2048" />
                    <value name="eUnholding" value="4096" />
                    <value name="eSuspending" value="8192" />
                    <value name="eUnsuspending" value="16384" />
                    <value name="eResetting" value="32768" />
                    <value name="eCompleting" value="65536" />
                    <value name="eCompleted" value="131072" />
                  </values>
                  <baseType>
                    <DWORD />
                  </baseType>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>435efc4c-bc80-4545-b2ec-769cbd1bcfa1</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Automation Box CtrlX S3
	Author:		Romain Ferrari
	Date:		2024 August 16
	
	Summary:	Enum of possible states that can be disabled using their values in CurDisabledStates. This enum use data type and value according
                Document: ISA-TR88.00.02-2022 
                          / 7.5.3.22 Admin.CurDisabledStates
                          
    Note: Accoring to ISA-TR88.00.02-2022
          This is a DWORD
          


 {attribute 'strict'}</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_PackStopReasonId">
              <baseType>
                <enum>
                  <values>
                    <value name="Undefined" value="0" />
                    <value name="RealEstopButtonPushed" value="1" />
                    <value name="VirtualAbortButtonPushed" value="2" />
                    <value name="AbortCondition3" value="3" />
                    <value name="RealStopButtonPushed" value="4" />
                    <value name="VirtualStopButtonPushed" value="5" />
                    <value name="StopCondition3" value="6" />
                    <value name="VirtualHoldButtonPushed" value="7" />
                    <value name="HoldCondition2" value="8" />
                    <value name="SuspendCondition1" value="9" />
                    <value name="SuspendCondition2" value="10" />
                  </values>
                  <baseType>
                    <DINT />
                  </baseType>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/enumvaluedocumentation" handleUnknown="implementation">
                  <EnumValueDocumentation>
                    <EnumValue>
                      <Name>AbortCondition3</Name>
                      <Documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Rename depending the usage</xhtml>
                      </Documentation>
                    </EnumValue>
                    <EnumValue>
                      <Name>StopCondition3</Name>
                      <Documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Rename depending the usage</xhtml>
                      </Documentation>
                    </EnumValue>
                    <EnumValue>
                      <Name>HoldCondition2</Name>
                      <Documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Rename depending the usage</xhtml>
                      </Documentation>
                    </EnumValue>
                    <EnumValue>
                      <Name>SuspendCondition1</Name>
                      <Documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Rename depending the usage</xhtml>
                      </Documentation>
                    </EnumValue>
                    <EnumValue>
                      <Name>SuspendCondition2</Name>
                      <Documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Rename depending the usage
 More possible states can be added</xhtml>
                      </Documentation>
                    </EnumValue>
                  </EnumValueDocumentation>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>f873540b-ef3d-4de7-a6c3-d3658604fe37</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Automation Box CtrlX S3
	Author:		Romain Ferrari
	Date:		2024 August 16
	
	Summary:	Enum OF possible Commands for the Command_CntrlCmd to take. This enum use data type and value according, but new ID's can be added.
                Document: ISA-TR88.00.02-2022 
                          / 7.5.3.9.2 StopReason.ID
                          
    Note: Accoring to ISA-TR88.00.02-2022
          This is a DINT
          


 {attribute 'strict'}</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="ST_PackMode">
              <baseType>
                <struct>
                  <variable name="Invalid">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Production">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Maintenance">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Manual">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Test">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_5">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_6">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_7">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_8">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_9">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_10">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_11">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_12">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_13">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_14">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_15">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_16">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_17">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_18">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_19">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_20">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_21">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_22">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_23">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_24">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_25">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_26">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_27">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_28">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_29">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_30">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_31">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>d5af7f8a-b39b-47dd-86ee-b272e7252114</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 29
	
	This struct is mainly used to build U_ModeBitDword</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_EventCategory">
              <baseType>
                <enum>
                  <values>
                    <value name="Warning" value="0" />
                    <value name="Complete" value="6" />
                    <value name="Abort" value="4" />
                    <value name="Stop" value="3" />
                    <value name="Hold" value="2" />
                    <value name="Suspend" value="1" />
                  </values>
                  <baseType>
                    <DINT />
                  </baseType>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>f90ad14e-1baf-4d21-8bd3-5b7969a8b0ab</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_ExecuteDone">
              <baseType>
                <enum>
                  <values>
                    <value name="Idle" value="999" />
                    <value name="Init" value="10" />
                    <value name="InOp" value="20" />
                    <value name="Done" value="30" />
                    <value name="Error" value="40" />
                  </values>
                  <baseType>
                    <DINT />
                  </baseType>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                    <Attribute Name="strict" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>a9cfd599-1924-4493-b8e0-4d09e4e1ae3d</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_InOperationBase">
              <baseType>
                <enum>
                  <values>
                    <value name="Idle" value="99" />
                    <value name="Init" value="1" />
                    <value name="InOp" value="4" />
                    <value name="Error" value="0" />
                  </values>
                  <baseType>
                    <DINT />
                  </baseType>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                    <Attribute Name="strict" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>adac47c1-6eb2-411d-9a6d-67975f8b3e46</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_Time">
              <baseType>
                <struct>
                  <variable name="Date_and_time_in_seconds">
                    <type>
                      <UDINT />
                    </type>
                  </variable>
                  <variable name="Local_date_time_seconds">
                    <type>
                      <UDINT />
                    </type>
                  </variable>
                  <variable name="Date_and_time_format">
                    <type>
                      <DT />
                    </type>
                  </variable>
                  <variable name="Date_and_time_string">
                    <type>
                      <string />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>7dc2f57e-8cb2-44c1-a7f1-32d1a629ed5a</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 30
	
	This structure Store PLC Date and time in various format
 Should be available in Global Variable for Alarms and time of Pack
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackAlarm_UI">
              <baseType>
                <struct>
                  <variable name="uiSetAlarm_0">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Bool commands for Alarms</xhtml>
                    </documentation>
                  </variable>
                  <variable name="uiSetAlarm_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiSetAlarm_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiAckAlarm_0">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiAckAlarm_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiAckAlarm_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiSetWarning_0">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiSetWarning_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiSetWarning_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiAckWarning_0">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiAckWarning_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiAckWarning_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiTextAlarmOne">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'Not linked'" />
                    </initialValue>
                  </variable>
                  <variable name="uiTextWarningOne">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'Not linked'" />
                    </initialValue>
                  </variable>
                  <variable name="uiTextStopReason">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'Not linked'" />
                    </initialValue>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>b8873650-2c47-4f19-8385-84758d8f612e</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 30
	
	This structure is made to be available in GVL PackTag
 With name hevsAlarmUI to test and understand alarms

	There is a set of BOOL for buttons to set and ack
	3 Alarms / 3 Warnings
	1 String Alarm
	1 String Warning
	1 String Stop Reason
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_AxisAborting">
              <baseType>
                <enum>
                  <values>
                    <value name="eIdle" value="99" />
                    <value name="eStopping" value="1" />
                    <value name="eStandstill" value="2" />
                    <value name="eErrorStop" value="3" />
                    <value name="eDisabled" value="4" />
                  </values>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                    <Attribute Name="strict" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>38acc82c-b7d9-4192-b4fb-326340db6f3a</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_AxisClearing">
              <baseType>
                <enum>
                  <values>
                    <value name="eIdle" value="99" />
                    <value name="eErrorStop" value="11" />
                    <value name="eDisabled" value="12" />
                    <value name="eEnabled" value="13" />
                  </values>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                    <Attribute Name="strict" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>c2c8432c-60b0-42ed-935e-917d6ddf7b68</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_AxisResetting">
              <baseType>
                <enum>
                  <values>
                    <value name="eIdle" value="99" />
                    <value name="eMotionInit" value="110" />
                    <value name="eMotionInitDone" value="120" />
                  </values>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                    <Attribute Name="strict" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>ffc13a4f-71bd-4053-b816-c3e7353884a7</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_AxisStarting">
              <baseType>
                <enum>
                  <values>
                    <value name="eIdle" value="99" />
                    <value name="eMotionStarting" value="10" />
                    <value name="eMotionStartingDone" value="20" />
                  </values>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                    <Attribute Name="strict" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>8574ae67-1fc0-4656-8e16-571529f1a584</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_AxisStopping">
              <baseType>
                <enum>
                  <values>
                    <value name="eIdle" value="99" />
                    <value name="eStopping" value="1" />
                    <value name="eStopped" value="2" />
                  </values>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                    <Attribute Name="strict" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>1082dedb-5527-49df-b110-5490512a58f7</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="ST_Acting">
              <baseType>
                <struct>
                  <variable name="Clearing_SC">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Starting_SC">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Execute_SC">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Stopping_SC">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Aborting_SC">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Holding_SC">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Unholding_SC">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Suspending_SC">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Unsuspending_SC">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Resetting_SC">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Completing_SC">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>daa55a2e-1432-442e-870b-a06bad4e1794</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="ST_Corner">
              <baseType>
                <struct>
                  <variable name="cornerOne">
                    <type>
                      <LREAL />
                    </type>
                  </variable>
                  <variable name="cornerTwo">
                    <type>
                      <LREAL />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>8327f50d-49bb-4a02-8cd7-e4a50f4afce4</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="ST_SetMotionParam">
              <baseType>
                <struct>
                  <variable name="rPosition_mm">
                    <type>
                      <LREAL />
                    </type>
                  </variable>
                  <variable name="rVelocity_m_s">
                    <type>
                      <LREAL />
                    </type>
                  </variable>
                  <variable name="rAcceleration_m_s2">
                    <type>
                      <LREAL />
                    </type>
                  </variable>
                  <variable name="rDeceleration_m_s2">
                    <type>
                      <LREAL />
                    </type>
                  </variable>
                  <variable name="rJerk_m_s3">
                    <type>
                      <LREAL />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>4ebefe34-98e8-4b46-a015-351f1e587d13</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Projet No: PW Move Absolute
	Author:		Cedric Lenoir
	Date:		2023 October 16
	
	Summary:	List of dynamic parameters for Move Absolute</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_AxisExecute">
              <baseType>
                <enum>
                  <values>
                    <value name="eIdle" value="99" />
                    <value name="eSetAbsolutePosition" value="1" />
                    <value name="eSetAbsolutePositionDone" value="2" />
                  </values>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                    <Attribute Name="strict" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>de84a6d0-527f-4cd0-ab10-31c5270cf016</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="UA_AboxInterface">
              <baseType>
                <struct>
                  <variable name="uaButtonAndSignal">
                    <type>
                      <derived name="UA_ButtonAndSignal" />
                    </type>
                  </variable>
                  <variable name="uaHmiVirtualButtonAndSignal">
                    <type>
                      <derived name="UA_HMIVirtualButtonsAndSignals" />
                    </type>
                  </variable>
                  <variable name="uaAnalogIn">
                    <type>
                      <derived name="UA_AnalogIn" />
                    </type>
                  </variable>
                  <variable name="uaAnalogOut">
                    <type>
                      <derived name="UA_AnalogOut" />
                    </type>
                  </variable>
                  <variable name="uaDigitalIn">
                    <type>
                      <derived name="UA_DigitalInput_32" />
                    </type>
                  </variable>
                  <variable name="uaDigitalOut">
                    <type>
                      <derived name="UA_DigitalOutput_32" />
                    </type>
                  </variable>
                  <variable name="uaO300_DL_Optic">
                    <type>
                      <derived name="UA_O300_DL" />
                    </type>
                  </variable>
                  <variable name="uaO300_ZL_Optic">
                    <type>
                      <derived name="UA_O300_ZL" />
                    </type>
                  </variable>
                  <variable name="uaU300_D50_Sound">
                    <type>
                      <derived name="UA_U300_D50" />
                    </type>
                  </variable>
                  <variable name="uaU300_P50_Sound">
                    <type>
                      <derived name="UA_U300_P50" />
                    </type>
                  </variable>
                  <variable name="uaSchunk">
                    <type>
                      <derived name="UA_Schunk_mms" />
                    </type>
                  </variable>
                  <variable name="uaSchunkGripper">
                    <type>
                      <derived name="UA_Festo" />
                    </type>
                  </variable>
                  <variable name="uaAccelerometer">
                    <type>
                      <derived name="UA_Balluf_bcm0002" />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>03a0b2ac-89d3-4829-82ce-c9ce9256e8f7</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="UA_AnalogIn">
              <baseType>
                <struct>
                  <variable name="IW_04">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="IW_06">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="IW_08">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="IW_10">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="IW_12">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="IW_14">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="IW_16">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="IW_18">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>9609e6b4-7275-4343-861c-fef510482801</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="UA_AnalogOut">
              <baseType>
                <struct>
                  <variable name="QW_04">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="QW_06">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="QW_08">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="QW_10">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>c2ad5a14-bba9-482f-9eb2-2a91ac4fe72c</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="UA_Balluf_bcm0002">
              <baseType>
                <struct>
                  <variable name="Data_1">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="Data_2">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="Data_3">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="Temperature">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="Status">
                    <type>
                      <DWORD />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>6fac8e51-2212-48d9-b853-8070ad243c78</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="UA_ButtonAndSignal">
              <baseType>
                <struct>
                  <variable name="In_Estop">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="In_Reset">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="In_Start">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="In_Stop">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Out_Idle">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Out_Execute">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Out_Stopped">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>b3f9a3b5-82f9-447e-a261-cb2d18ffb6eb</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="UA_DigitalInput_32">
              <baseType>
                <struct>
                  <variable name="Input_0_0">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_0_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_0_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_0_3">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_0_4">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_0_5">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_0_6">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_0_7">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_1_0">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_1_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_1_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_1_3">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_1_4">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_1_5">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_1_6">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_1_7">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_2_0">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_2_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_2_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_2_3">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_2_4">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_2_5">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_2_6">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_2_7">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_3_0">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_3_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_3_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_3_3">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_3_4">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_3_5">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_3_6">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Input_3_7">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>a8f884db-ac4f-40d0-bcab-8badc6587dcc</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="UA_DigitalOutput_32">
              <baseType>
                <struct>
                  <variable name="Output_0_0">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_0_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_0_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_0_3">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_0_4">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_0_5">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_0_6">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_0_7">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_1_0">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_1_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_1_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_1_3">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_1_4">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_1_5">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_1_6">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_1_7">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_2_0">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_2_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_2_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_2_3">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_2_4">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_2_5">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_2_6">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_2_7">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_3_0">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_3_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_3_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_3_3">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_3_4">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_3_5">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_3_6">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Output_3_7">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>7b52e73f-21ed-4643-ae78-7cbc7194e35a</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="UA_Festo">
              <baseType>
                <struct>
                  <variable name="SetOut">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>634e16b1-da38-4e2b-b9e1-42ee4bdb38cc</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="UA_GlobalButtonsAndSignals">
              <baseType>
                <struct>
                  <variable name="physicals">
                    <type>
                      <derived name="UA_ButtonAndSignal" />
                    </type>
                  </variable>
                  <variable name="virtuals">
                    <type>
                      <derived name="UA_HMIVirtualButtonsAndSignals" />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>34e17f42-b1fb-4971-a297-848e77c0d42e</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="UA_HMIVirtualButtonsAndSignals">
              <baseType>
                <struct>
                  <variable name="In_VirtualManual">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="In_VirtualAuto">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="In_VirtualAbort">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="In_VirtualStop">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="In_VirtualReset">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="In_VirtualStart">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="In_VirtualHold">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>5e66e8f6-9a36-4d69-b877-3d4885c8239e</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="UA_O300_DL">
              <baseType>
                <struct>
                  <variable name="Value">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="BCD1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Q">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="A">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>6026491a-5615-4c42-b2f8-5562044ffab5</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="UA_O300_ZL">
              <baseType>
                <struct>
                  <variable name="BCD1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Q">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="A">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>0292b894-9834-4595-b44c-87810191b2ca</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="UA_PackBox">
              <baseType>
                <struct>
                  <variable name="uAdmin_union_stopreasonid">
                    <type>
                      <derived name="HEVS_Min_PackTag_Union_Dint_FourBytesArray" />
                    </type>
                  </variable>
                  <variable name="uAdmin_union_curdisabledstates">
                    <type>
                      <derived name="HEVS_Min_PackTag_Union_Dword_Dint_FourBytesArray" />
                    </type>
                  </variable>
                  <variable name="uStatus_union_unitmodecurrent">
                    <type>
                      <derived name="HEVS_Min_PackTag_Union_Dint_FourBytesArray" />
                    </type>
                  </variable>
                  <variable name="uStatus_union_statecurrent">
                    <type>
                      <derived name="HEVS_Min_PackTag_Union_Dint_FourBytesArray" />
                    </type>
                  </variable>
                  <variable name="uCommand_union_unitmode">
                    <type>
                      <derived name="HEVS_Min_PackTag_Union_Dint_FourBytesArray" />
                    </type>
                  </variable>
                  <variable name="uCommand_union_cntrlcmd">
                    <type>
                      <derived name="HEVS_Min_PackTag_Union_Dint_FourBytesArray" />
                    </type>
                  </variable>
                  <variable name="Command_UnitModeChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Maybe not used</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Command_CmdChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Maybe not used</xhtml>
                    </documentation>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>8b65d69c-f66c-4902-afe6-efcbcced6503</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	This struct is use to make interface between:
		- HMI TP700 of Automation Box ABox
		- via Profinet from CtrlX Core to Simatic S7
		- HEVS Pack TR 88 write in this structure to send data
		- The transfert is done with PRG_MapBox

		- That is: PRG_MapBox should not have direct access to PackTag </xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="UA_Schunk_mms">
              <baseType>
                <struct>
                  <variable name="Value">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>e1630ce8-bc96-43e5-9e0c-58c82b66b1bc</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="UA_U300_D50">
              <baseType>
                <struct>
                  <variable name="Value">
                    <type>
                      <DWORD />
                    </type>
                  </variable>
                  <variable name="Scale">
                    <type>
                      <SINT />
                    </type>
                  </variable>
                  <variable name="SSC1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="SSC2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Q">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="A">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="SSC4">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>9f70432a-c970-455e-a9e2-baa1b526f168</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="UA_U300_P50">
              <baseType>
                <struct>
                  <variable name="Value">
                    <type>
                      <DWORD />
                    </type>
                  </variable>
                  <variable name="Scale">
                    <type>
                      <SINT />
                    </type>
                  </variable>
                  <variable name="SSC1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="SSC2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Q">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="A">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="SSC4">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>7f0e2eb1-ba19-4d1b-be94-9623d8b4ba56</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_ManualJog">
              <baseType>
                <enum>
                  <values>
                    <value name="eIdle" value="999" />
                    <value name="eNextMove" value="100" />
                    <value name="eMove_Z" value="10" />
                    <value name="eMove_Z_Done" value="20" />
                    <value name="eMove_X" value="30" />
                    <value name="eMove_X_Done" value="40" />
                    <value name="eMove_Y" value="50" />
                    <value name="eMove_Y_Done" value="60" />
                  </values>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                    <Attribute Name="strict" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>0d57bce7-a9ad-4308-92f4-a0527ad7fdf6</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_UnitMoveForPickAndPlace">
              <baseType>
                <enum>
                  <values>
                    <value name="Idle" value="999" />
                    <value name="InitMove" value="5" />
                    <value name="MovePickUpOpen" value="10" />
                    <value name="IsUpPickOpen" value="20" />
                    <value name="MoveDownPick" value="30" />
                    <value name="CloseGripper" value="40" />
                    <value name="IsClosed" value="50" />
                    <value name="MoveUpPickClosed" value="60" />
                    <value name="IsUpPickClosed" value="70" />
                    <value name="MovePlaceUpClosed" value="80" />
                    <value name="IsPlaceUpClosed" value="90" />
                    <value name="MoveDownPlace" value="100" />
                    <value name="IsMoveDownPlace" value="110" />
                    <value name="OpenGripperPlace" value="120" />
                    <value name="IsOpenGripperPlace" value="130" />
                    <value name="MoveUpPlace" value="140" />
                    <value name="IsMoveUpPlace" value="150" />
                    <value name="MotionError" value="666" />
                  </values>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                    <Attribute Name="strict" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>17024875-c149-4a2b-a929-33f28a5734b5</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="ST_XYZ_Offset">
              <baseType>
                <struct>
                  <variable name="X_AxisOffsetPosition">
                    <type>
                      <LREAL />
                    </type>
                  </variable>
                  <variable name="Y_AxisOffsetPosition">
                    <type>
                      <LREAL />
                    </type>
                  </variable>
                  <variable name="Z_AxisOffsetPosition">
                    <type>
                      <LREAL />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>051c7ecf-66f6-4bfb-b0ec-5a7b8dacee2b</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">
	X, Y, Z position for Pick and Place
	Value is Offset from firs point after Starting Position
	
	Cedric Lenoir, January 29, 2025
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_PackStateCmdBoolInterface" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="Reset">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Start">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Stop">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Hold">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Unhold">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Suspend">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Unsuspend">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Abort">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Clear">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Complete">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="remoteEnable">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> For remote, to be completed</xhtml>
                    </documentation>
                  </variable>
                  <variable name="remoteCmd">
                    <type>
                      <derived name="E_PackCmd" />
                    </type>
                  </variable>
                </inputVars>
                <outputVars>
                  <variable name="eCntrlCmd">
                    <type>
                      <derived name="E_PackCmd" />
                    </type>
                  </variable>
                  <variable name="bCmdChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="rTrigChangeRequest">
                    <type>
                      <derived name="R_TRIG" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Trigger detect a new command
 That is, new state is different that last one.</xhtml>
                    </documentation>
                  </variable>
                  <variable name="eCntrlCmdMem">
                    <type>
                      <derived name="E_PackCmd" />
                    </type>
                  </variable>
                  <variable name="uliTrigCounter">
                    <type>
                      <ULINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> For debut, allows to show activation of trigger</xhtml>
                    </documentation>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 27
	
	Summary:	This FB converts Pack BOOL commnds to
             Command_CntrlCmd			    : DINT;
	            Command_CmdChangeRequest	    : BOOL;
             Cmd on rising edge only

             Commands are evaluated with this priority
             Abort - Stop - Complete - Hold - Suspend - Reset - Clear - Start - Unhold - Unsuspend
             That means mainly that Abort, then Stop should not be masked by other commands.</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Abort THEN
    eCntrlCmd := E_PackCmd.eAbort;
ELSIF Stop THEN
    eCntrlCmd := E_PackCmd.eStop;
ELSIF Complete THEN 
    eCntrlCmd := E_PackCmd.eComplete;
ELSIF Hold THEN
    eCntrlCmd := E_PackCmd.eHold;
ELSIF Suspend THEN 
    eCntrlCmd := E_PackCmd.eSuspend;
ELSIF Reset THEN
    eCntrlCmd := E_PackCmd.eReset;
ELSIF Clear THEN
    eCntrlCmd := E_PackCmd.eClear;
ELSIF Start THEN
    eCntrlCmd := E_PackCmd.eStart;
ELSIF Unhold THEN
    eCntrlCmd := E_PackCmd.eUnhold;
ELSIF Unsuspend THEN
    eCntrlCmd := E_PackCmd.eUnsuspend;
ELSE
    eCntrlCmd := E_PackCmd.eUndefined;
END_IF

rTrigChangeRequest(CLK := eCntrlCmdMem &lt;&gt; eCntrlCmd);
eCntrlCmdMem := eCntrlCmd;
IF rTrigChangeRequest.Q THEN
    uliTrigCounter := uliTrigCounter + 1;
END_IF

bCmdChangeRequest := rTrigChangeRequest.Q;</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>18e2dbbf-058a-44fd-ab8d-b7b06a9625c1</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="PLC_PACK" pouType="program">
              <interface>
                <localVars>
                  <variable name="uliCount">
                    <type>
                      <ULINT />
                    </type>
                  </variable>
                  <variable name="fbCmdBoolInterface">
                    <type>
                      <derived name="FB_PackStateCmdBoolInterface" />
                    </type>
                  </variable>
                  <variable name="fbModeBoolInterface">
                    <type>
                      <derived name="FB_PackModeBoolInterface" />
                    </type>
                  </variable>
                  <variable name="fbModuleTest">
                    <type>
                      <derived name="FB_ModuleTest" />
                    </type>
                  </variable>
                  <variable name="fbModuleOne">
                    <type>
                      <derived name="FB_ModuleTest" />
                    </type>
                  </variable>
                  <variable name="fbModuleTwo">
                    <type>
                      <derived name="FB_ModuleTest" />
                    </type>
                  </variable>
                  <variable name="fbModuleThree">
                    <type>
                      <derived name="FB_ModuleTest" />
                    </type>
                  </variable>
                  <variable name="whatSC">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="testOtherSC">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="TRUE" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> By setting this flag to FALSE, SC State Complete is disabled</xhtml>
                    </documentation>
                  </variable>
                  <variable name="testUMCC">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="TRUE" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> By setting this flag to FALSE, Unit Mode Change Complete is disabled</xhtml>
                    </documentation>
                  </variable>
                  <variable name="fbPackMaster">
                    <type>
                      <derived name="FB_PackMasterState" />
                    </type>
                  </variable>
                  <variable name="fbPackMasterMode">
                    <type>
                      <derived name="FB_PackMasterMode" />
                    </type>
                  </variable>
                  <variable name="fbStopReason">
                    <type>
                      <derived name="FB_HEVS_StopReason" />
                    </type>
                  </variable>
                  <variable name="fbGetActualBoolState">
                    <type>
                      <derived name="FB_GetActualBoolState" />
                    </type>
                  </variable>
                  <variable name="fbPackStatistic">
                    <type>
                      <derived name="FB_PackStatistic" />
                    </type>
                  </variable>
                  <variable name="Admin_CurDisabledStates">
                    <type>
                      <DWORD />
                    </type>
                    <initialValue>
                      <simpleValue value="0" />
                    </initialValue>
                  </variable>
                  <variable name="defaultSettingsDone">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Default settings for Disabled States, set in ACT_SetDefaultSettings</xhtml>
                    </documentation>
                  </variable>
                  <variable name="uListOfModesConfig">
                    <type>
                      <derived name="U_ModeBitDword" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Definition of available modes, to be defined in ACT_DefaultSettings.
 Check below to define Disable State and Transitions for each mode</xhtml>
                    </documentation>
                  </variable>
                  <variable name="uDisabledStatesProduction">
                    <type>
                      <derived name="U_StateBitDword" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">	Invalid := 0, Production := 1, Maintenance := 2, Manual := 3, Test := 4</xhtml>
                    </documentation>
                  </variable>
                  <variable name="uDisabledStatesMaintenance">
                    <type>
                      <derived name="U_StateBitDword" />
                    </type>
                  </variable>
                  <variable name="uDisabledStatesManual">
                    <type>
                      <derived name="U_StateBitDword" />
                    </type>
                  </variable>
                  <variable name="uDisabledStatesTest">
                    <type>
                      <derived name="U_StateBitDword" />
                    </type>
                  </variable>
                  <variable name="uTransitionsProduction">
                    <type>
                      <derived name="U_StateBitDword" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Default settings for State Trsnsitions, set in ACT_SetDefaultSettings
	Invalid := 0, Production := 1, Maintenance := 2, Manual := 3, Test := 4</xhtml>
                    </documentation>
                  </variable>
                  <variable name="uTransitionsMaintenance">
                    <type>
                      <derived name="U_StateBitDword" />
                    </type>
                  </variable>
                  <variable name="uTransitionsManual">
                    <type>
                      <derived name="U_StateBitDword" />
                    </type>
                  </variable>
                  <variable name="uTransitionsTest">
                    <type>
                      <derived name="U_StateBitDword" />
                    </type>
                  </variable>
                  <variable name="rTrigCounterSC">
                    <type>
                      <derived name="R_TRIG" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Check Trigger SC
 As it is difficult to see SC, we trig it and update a counter</xhtml>
                    </documentation>
                  </variable>
                  <variable name="counterSC">
                    <type>
                      <ULINT />
                    </type>
                  </variable>
                </localVars>
              </interface>
              <actions>
                <action name="ACT_SetDefaultSettings">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT defaultSettingsDone THEN
	// Todo only once
	defaultSettingsDone := TRUE;
	(*
		Define list of available modes
		Check C_ADMIN_MAXMODESTRANSITION too.
	*)
	uListOfModesConfig.boolMode.Invalid := FALSE;
	uListOfModesConfig.boolMode.Maintenance := TRUE;
	uListOfModesConfig.boolMode.Manual := TRUE;
	uListOfModesConfig.boolMode.Production := TRUE;
	uListOfModesConfig.boolMode.Test := TRUE;
	uListOfModesConfig.boolMode.UserDefinable_5 := FALSE;
	uListOfModesConfig.boolMode.UserDefinable_6 := FALSE;
	uListOfModesConfig.boolMode.UserDefinable_7 := FALSE;
	uListOfModesConfig.boolMode.UserDefinable_8 := FALSE;

    (*
        A value of 1 in a certain bit location indicates that
        the corresponding state number is disabled.
        
        Init disabled states in Production
    *)
    uDisabledStatesProduction.boolState.Aborted := FALSE;
    uDisabledStatesProduction.boolState.Aborting := FALSE;
    uDisabledStatesProduction.boolState.Clearing := FALSE;
    uDisabledStatesProduction.boolState.Completed := FALSE;
    uDisabledStatesProduction.boolState.Completing := FALSE;
    uDisabledStatesProduction.boolState.Execute := FALSE;
    uDisabledStatesProduction.boolState.Held := FALSE;
    uDisabledStatesProduction.boolState.Holding := FALSE;
    uDisabledStatesProduction.boolState.Unholding := FALSE;
    uDisabledStatesProduction.boolState.Idle := FALSE;
    uDisabledStatesProduction.boolState.Resetting := FALSE;
    uDisabledStatesProduction.boolState.Starting := FALSE;
    uDisabledStatesProduction.boolState.Stopped := FALSE;
    uDisabledStatesProduction.boolState.Stopping := FALSE;
    uDisabledStatesProduction.boolState.Suspended := FALSE;
    uDisabledStatesProduction.boolState.Suspending := FALSE;
    uDisabledStatesProduction.boolState.Unsuspending := FALSE;
    // For Maintenance
    uDisabledStatesMaintenance.boolState.Aborted := FALSE;
    uDisabledStatesMaintenance.boolState.Aborting := FALSE;
    uDisabledStatesMaintenance.boolState.Clearing := TRUE;
    uDisabledStatesMaintenance.boolState.Completed := TRUE;
    uDisabledStatesMaintenance.boolState.Completing := TRUE;
    uDisabledStatesMaintenance.boolState.Execute := FALSE;
    uDisabledStatesMaintenance.boolState.Held := FALSE;
    uDisabledStatesMaintenance.boolState.Holding := FALSE;
    uDisabledStatesMaintenance.boolState.Unholding := FALSE;
    uDisabledStatesMaintenance.boolState.Idle := FALSE;
    uDisabledStatesMaintenance.boolState.Resetting := FALSE;
    uDisabledStatesMaintenance.boolState.Starting := FALSE;
    uDisabledStatesMaintenance.boolState.Stopped := FALSE;
    uDisabledStatesMaintenance.boolState.Stopping := FALSE;
    uDisabledStatesMaintenance.boolState.Suspended := TRUE;
    uDisabledStatesMaintenance.boolState.Suspending := TRUE;
    uDisabledStatesMaintenance.boolState.Unsuspending := TRUE;
    // For Manual
    uDisabledStatesManual.boolState.Aborted := FALSE;
    uDisabledStatesManual.boolState.Aborting := FALSE;
    uDisabledStatesManual.boolState.Clearing := FALSE;
    uDisabledStatesManual.boolState.Completed := TRUE;
    uDisabledStatesManual.boolState.Completing := TRUE;
    uDisabledStatesManual.boolState.Execute := FALSE;
    uDisabledStatesManual.boolState.Held := TRUE;
    uDisabledStatesManual.boolState.Holding := TRUE;
    uDisabledStatesManual.boolState.Unholding := TRUE;
    uDisabledStatesManual.boolState.Idle := FALSE;
    uDisabledStatesManual.boolState.Resetting := FALSE;
    uDisabledStatesManual.boolState.Starting := TRUE;
    uDisabledStatesManual.boolState.Stopped := FALSE;
    uDisabledStatesManual.boolState.Stopping := FALSE;
    uDisabledStatesManual.boolState.Suspended := TRUE;
    uDisabledStatesManual.boolState.Suspending := TRUE;
    uDisabledStatesManual.boolState.Unsuspending := TRUE;
    // For various test
    uDisabledStatesTest.boolState.Aborted := FALSE;
    uDisabledStatesTest.boolState.Aborting := FALSE;
    uDisabledStatesTest.boolState.Clearing := TRUE;
    uDisabledStatesTest.boolState.Completed := FALSE;
    uDisabledStatesTest.boolState.Completing := FALSE;
    uDisabledStatesTest.boolState.Execute := FALSE;
    uDisabledStatesTest.boolState.Held := FALSE;
    uDisabledStatesTest.boolState.Holding := FALSE;
    uDisabledStatesTest.boolState.Unholding := FALSE;
    uDisabledStatesTest.boolState.Idle := FALSE;
    uDisabledStatesTest.boolState.Resetting := FALSE;
    uDisabledStatesTest.boolState.Starting := FALSE;
    uDisabledStatesTest.boolState.Stopped := FALSE;
    uDisabledStatesTest.boolState.Stopping := FALSE;
    uDisabledStatesTest.boolState.Suspended := FALSE;
    uDisabledStatesTest.boolState.Suspending := FALSE;
    uDisabledStatesTest.boolState.Unsuspending := FALSE;
    
    (*
        A value of 1 in a bit location indicates that a mode 
        transition FROM the corresponding state number is allowed
        
        Init transition states in Production
    *)
    uTransitionsProduction.boolState.Aborted := TRUE;
    uTransitionsProduction.boolState.Aborting := FALSE;
    uTransitionsProduction.boolState.Clearing := FALSE;
    uTransitionsProduction.boolState.Completed := TRUE;
    uTransitionsProduction.boolState.Completing := FALSE;
    uTransitionsProduction.boolState.Execute := FALSE;
    uTransitionsProduction.boolState.Held := TRUE;
    uTransitionsProduction.boolState.Holding := FALSE;
    uTransitionsProduction.boolState.Unholding := FALSE;
    uTransitionsProduction.boolState.Idle := FALSE;
    uTransitionsProduction.boolState.Resetting := FALSE;
    uTransitionsProduction.boolState.Starting := FALSE;
    uTransitionsProduction.boolState.Stopped := TRUE;
    uTransitionsProduction.boolState.Stopping := FALSE;
    uTransitionsProduction.boolState.Suspended := FALSE;
    uTransitionsProduction.boolState.Suspending := FALSE;
    uTransitionsProduction.boolState.Unsuspending := FALSE;
    // For Maintenance
    uTransitionsMaintenance.boolState.Aborted := TRUE;
    uTransitionsMaintenance.boolState.Aborting := FALSE;
    uTransitionsMaintenance.boolState.Clearing := FALSE;
    uTransitionsMaintenance.boolState.Completed := FALSE;
    uTransitionsMaintenance.boolState.Completing := FALSE;
    uTransitionsMaintenance.boolState.Execute := FALSE;
    uTransitionsMaintenance.boolState.Held := TRUE;
    uTransitionsMaintenance.boolState.Holding := FALSE;
    uTransitionsMaintenance.boolState.Unholding := FALSE;
    uTransitionsMaintenance.boolState.Idle := FALSE;
    uTransitionsMaintenance.boolState.Resetting := FALSE;
    uTransitionsMaintenance.boolState.Starting := FALSE;
    uTransitionsMaintenance.boolState.Stopped := TRUE;
    uTransitionsMaintenance.boolState.Stopping := FALSE;
    uTransitionsMaintenance.boolState.Suspended := FALSE;
    uTransitionsMaintenance.boolState.Suspending := FALSE;
    uTransitionsMaintenance.boolState.Unsuspending := FALSE;
    // For Manual Mode
    uTransitionsManual.boolState.Aborted := TRUE;
    uTransitionsManual.boolState.Aborting := FALSE;
    uTransitionsManual.boolState.Clearing := FALSE;
    uTransitionsManual.boolState.Completed := FALSE;
    uTransitionsManual.boolState.Completing := FALSE;
    uTransitionsManual.boolState.Execute := FALSE;
    uTransitionsManual.boolState.Held := FALSE;
    uTransitionsManual.boolState.Holding := FALSE;
    uTransitionsManual.boolState.Unholding := FALSE;
    uTransitionsManual.boolState.Idle := TRUE;
    uTransitionsManual.boolState.Resetting := FALSE;
    uTransitionsManual.boolState.Starting := FALSE;
    uTransitionsManual.boolState.Stopped := TRUE;
    uTransitionsManual.boolState.Stopping := FALSE;
    uTransitionsManual.boolState.Suspended := FALSE;
    uTransitionsManual.boolState.Suspending := FALSE;
    uTransitionsManual.boolState.Unsuspending := FALSE;
    // For Test Mode
    uTransitionsTest.boolState.Aborted := TRUE;
    uTransitionsTest.boolState.Aborting := FALSE;
    uTransitionsTest.boolState.Clearing := FALSE;
    uTransitionsTest.boolState.Completed := TRUE;
    uTransitionsTest.boolState.Completing := FALSE;
    uTransitionsTest.boolState.Execute := FALSE;
    uTransitionsTest.boolState.Held := FALSE;
    uTransitionsTest.boolState.Holding := FALSE;
    uTransitionsTest.boolState.Unholding := FALSE;
    uTransitionsTest.boolState.Idle := FALSE;
    uTransitionsTest.boolState.Resetting := FALSE;
    uTransitionsTest.boolState.Starting := FALSE;
    uTransitionsTest.boolState.Stopped := TRUE;
    uTransitionsTest.boolState.Stopping := FALSE;
    uTransitionsTest.boolState.Suspended := FALSE;
    uTransitionsTest.boolState.Suspending := FALSE;
    uTransitionsTest.boolState.Unsuspending := FALSE;

    (*
        Init PackTag
        Invalid := 0, Production := 1, Maintenance := 2, Manual := 3, Test := 4
    *)
	PackTag.Admin.EnabledModesCfg := uListOfModesConfig.dwMode;
	
    PackTag.Admin.DisabledStatesCfg[1] := uDisabledStatesProduction.dwState;
    PackTag.Admin.DisabledStatesCfg[2] := uDisabledStatesMaintenance.dwState;
    PackTag.Admin.DisabledStatesCfg[3] := uDisabledStatesManual.dwState;
    PackTag.Admin.DisabledStatesCfg[4] := uDisabledStatesTest.dwState;
   
    PackTag.Admin.ModeTransitionCfg[1] := uTransitionsProduction.dwState;
    PackTag.Admin.ModeTransitionCfg[2] := uTransitionsMaintenance.dwState;
    PackTag.Admin.ModeTransitionCfg[3] := uTransitionsManual.dwState;
    PackTag.Admin.ModeTransitionCfg[4] := uTransitionsTest.dwState;
END_IF</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>87b02d6d-71ac-471e-aa2b-ce43d0a30872</ObjectId>
                    </data>
                  </addData>
                </action>
              </actions>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">uliCount := uliCount + 1;

///////////////////////////////////////////////////////////////////////////////
// Link to GVL_Abox uaPackBox for link with HMI TP700 of automation box
///////////////////////////////////////////////////////////////////////////////
// GVL_Abox.uaPackBox.uAdmin_union_stopreasonid.DintAccess	:= HEVS_PackTag_GVL.hevs_min_packtag_v2022.MinAdmin.StopReasonMin.ID;
GVL_Abox.uaPackBox.uAdmin_union_stopreasonid.DintAccess := PackTag.Admin.StopReason.ID;
// GVL_Abox.uaPackBox.uAdmin_union_curdisabledstates.DwordAccess :=  HEVS_PackTag_GVL.hevs_min_packtag_v2022.MinAdmin.CurDisabledStates;
GVL_Abox.uaPackBox.uAdmin_union_curdisabledstates.DwordAccess := PackTag.Admin.CurDisabledStates;
// GVL_Abox.uaPackBox.uStatus_union_unitmodecurrent .DintAccess := HEVS_PackTag_GVL.hevs_min_packtag_v2022.MinStatus.UnitModeCurrent;
GVL_Abox.uaPackBox.uStatus_union_unitmodecurrent .DintAccess := PackTag.Status.UnitModeCurrent;
// GVL_Abox.uaPackBox.uStatus_union_statecurrent.DintAccess := HEVS_PackTag_GVL.hevs_min_packtag_v2022.MinStatus.StateCurrent;
GVL_Abox.uaPackBox.uStatus_union_statecurrent.DintAccess :=	PackTag.Status.StateCurrent;
// GVL_Abox.uaPackBox.uCommand_union_unitmode.DintAccess := HEVS_PackTag_GVL.hevs_min_packtag_v2022.MinCommand.UnitMode;
GVL_Abox.uaPackBox.uCommand_union_unitmode.DintAccess := PackTag.Command.UnitMode;
// GVL_Abox.uaPackBox.uCommand_union_cntrlcmd.DintAccess := HEVS_PackTag_GVL.hevs_min_packtag_v2022.MinCommand.CntrlCmd;
GVL_Abox.uaPackBox.uCommand_union_cntrlcmd.DintAccess := PackTag.Command.CntrlCmd;
// GVL_Abox.uaPackBox.Command_UnitModeChangeRequest := HEVS_PackTag_GVL.hevs_min_packtag_v2022.MinCommand.UnitModeChangeRequest;
GVL_Abox.uaPackBox.Command_UnitModeChangeRequest := PackTag.Command.UnitModeChangeRequest;
// GVL_Abox.uaPackBox.Command_CmdChangeRequest := HEVS_PackTag_GVL.hevs_min_packtag_v2022.MinCommand.CmdChangeRequest;
GVL_Abox.uaPackBox.Command_CmdChangeRequest := PackTag.Command.CmdChangeRequest;
(*
    Init default transitions and disabled states
*)
ACT_SetDefaultSettings();

(*
    BOOL interface for UI Commands
*)
// fbCmdBoolInterface(Reset := PackTag.hevsUI.uiCmdReset,
//                    Start := PackTag.hevsUI.uiCmdStart,
//                    Stop := PackTag.hevsUI.uiCmdStop,
//                    Hold := PackTag.hevsUI.uiCmdHold,
//                    Unhold := PackTag.hevsUI.uiCmdUnhold,
//                    Suspend := PackTag.hevsUI.uiCmdSuspend,
//                    Unsuspend := PackTag.hevsUI.uiCmdUnsuspend,
//                    Abort := PackTag.hevsUI.uiCmdAbort,
//                    Clear := PackTag.hevsUI.uiCmdClear,
//                    Complete := PackTag.hevsUI.uiCmdComplete,
//                    // Output to Pack Command
//                    eCntrlCmd =&gt; PackTag.Command.CntrlCmd,
//                    bCmdChangeRequest =&gt; PackTag.Command.CmdChangeRequest);
// I should just have to link Soft and hard buttons here from GVL_Abox
// This FB could not work correctly if many commands are present together				   
fbCmdBoolInterface(Reset := PackTag.hevsUI.uiCmdReset 
							// Do not send Reset command from Aborted because it can mask the clear command
                            OR (GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Reset AND PackTag.hevsUI.uiStateStopped)
							OR (GVL_Abox.uaAboxInterface.uaHmiVirtualButtonAndSignal.In_VirtualReset AND PackTag.hevsUI.uiStateStopped),
							
                   Start := PackTag.hevsUI.uiCmdStart
                            OR GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Start
							OR GVL_Abox.uaAboxInterface.uaHmiVirtualButtonAndSignal.In_VirtualStart,
							
                   Stop := PackTag.hevsUI.uiCmdStop
                            OR GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Stop
							OR GVL_Abox.uaAboxInterface.uaHmiVirtualButtonAndSignal.In_VirtualStop,
							
                   Hold := PackTag.hevsUI.uiCmdHold
						   OR GVL_Abox.uaAboxInterface.uaHmiVirtualButtonAndSignal.In_VirtualHold,
				   
                   Unhold := PackTag.hevsUI.uiCmdUnhold
				   			// Command can be sent only if in Held State, else it could mask other commands.
							OR (NOT GVL_Abox.uaAboxInterface.uaHmiVirtualButtonAndSignal.In_VirtualHold AND PackTag.hevsUI.uiStateHeld),
							
                   Suspend := PackTag.hevsUI.uiCmdSuspend,
                   Unsuspend := PackTag.hevsUI.uiCmdUnsuspend,
                   Abort := PackTag.hevsUI.uiCmdAbort
					        OR NOT GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Estop
							OR GVL_Abox.uaAboxInterface.uaHmiVirtualButtonAndSignal.In_VirtualAbort,
							
                   Clear := PackTag.hevsUI.uiCmdClear 
                            // Do not send Clear command from Aborted because it can mask the real reset command
                            OR (GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Reset AND PackTag.hevsUI.uiStateAborted)
							OR (GVL_Abox.uaAboxInterface.uaHmiVirtualButtonAndSignal.In_VirtualReset AND PackTag.hevsUI.uiStateAborted),
							
                   Complete := PackTag.hevsUI.uiCmdComplete,
                   // Output to Pack Command
                   eCntrlCmd =&gt; PackTag.Command.CntrlCmd,
                   bCmdChangeRequest =&gt; PackTag.Command.CmdChangeRequest);				   

(*
	Once the CmdChangeRequest has been detected, reset bool commmands
*)
IF PackTag.Command.CmdChangeRequest THEN
	PackTag.hevsUI.uiCmdReset       := FALSE;
	PackTag.hevsUI.uiCmdStart       := FALSE;
	PackTag.hevsUI.uiCmdStop        := FALSE;
	PackTag.hevsUI.uiCmdHold        := FALSE;
	PackTag.hevsUI.uiCmdUnhold      := FALSE;
	PackTag.hevsUI.uiCmdSuspend     := FALSE;
	PackTag.hevsUI.uiCmdUnsuspend	:= FALSE;
	PackTag.hevsUI.uiCmdAbort       := FALSE;
	PackTag.hevsUI.uiCmdClear       := FALSE;
	PackTag.hevsUI.uiCmdComplete    := FALSE; 	
END_IF
				   
(*
	BOOL interface for UI Modes
*)
// fbModeBoolInterface(Production := PackTag.hevsUI.uiModeProduction,
//                     Maintenance := PackTag.hevsUI.uiModeMaintenance,
// 					Manual := PackTag.hevsUI.uiModeManual,
// 					Test := PackTag.hevsUI.uiModeTest,
// 					// Get actual mode to reset trigger,
// 					eActualPackMode := PackTag.Status.UnitModeCurrent,
// 					// Set output commands
//     				eCmdUnitMode =&gt; PackTag.Command.UnitMode,
// 					bCmdUnitModeChangeRequest =&gt; PackTag.Command.UnitModeChangeRequest);
// I should just have to add Production and Manual Buttons.
fbModeBoolInterface(Production := PackTag.hevsUI.uiModeProduction OR
                                  GVL_Abox.uaAboxInterface.uaHmiVirtualButtonAndSignal.In_VirtualAuto,
								  
                    Maintenance := PackTag.hevsUI.uiModeMaintenance,
					Manual := PackTag.hevsUI.uiModeManual OR
                                  GVL_Abox.uaAboxInterface.uaHmiVirtualButtonAndSignal.In_VirtualManual,
								  
					Test := PackTag.hevsUI.uiModeTest,
					// Get actual mode to reset trigger,
					eActualPackMode := PackTag.Status.UnitModeCurrent,
					// Set output commands
    				eCmdUnitMode =&gt; PackTag.Command.UnitMode,
					bCmdUnitModeChangeRequest =&gt; PackTag.Command.UnitModeChangeRequest);									   

(*
	List of modules, theoretically EM, eventually CM
*)
fbModuleTest(Status_StateCurrent := PackTag.Status.StateCurrent);
fbModuleOne(Status_StateCurrent := PackTag.Status.StateCurrent);
fbModuleTwo(Status_StateCurrent := PackTag.Status.StateCurrent);
fbModuleThree(Status_StateCurrent := PackTag.Status.StateCurrent);

(*
	Manage states and mode.
    Receive a AND of SC of each module
*)
whatSC := fbModuleTest.SC 	AND
          fbModuleOne.SC  	AND
		  fbModuleTwo.SC  	AND
		  fbModuleThree.SC	AND
		// Try to integrate 3 FB_ModuleAxis from another program
		// But other Task
		  PRG_Process.fbModuleAxis_X.SC AND
		  PRG_Process.fbModuleAxis_Y.SC AND
		  PRG_Process.fbModuleAxis_Z.SC AND
          PRG_PackModule_Template.SC;
	
// For diagnostic only
rTrigCounterSC(clk := whatSC);
IF rTrigCounterSC.Q THEN
	counterSC := counterSC + 1;
END_IF	  

(*
 Synthèse des alarmes et commandes relatives
*) 
fbStopReason(stStopReason := PackTag.Admin.StopReason,
		     stAdminAlarm := PackTag.Admin.Alarm);

fbPackMaster(Enable := TRUE,
			 // Inputs
			 SC_StateComplete := whatSC AND testOtherSC,
             Command_CmdChangeRequest := PackTag.Command.CmdChangeRequest,
	         Command_CntrlCmd := PackTag.Command.CntrlCmd,
			 // Get Stop reason if needed
			 StopReasonCntrlCmd := fbStopReason.stopReasonToMaster,
			 Admin_CurDisabledStates := PackTag.Admin.CurDisabledStates,
			 // Outputs
             Status_StateCurrent =&gt; PackTag.Status.StateCurrent,
			 Status_StateChangeInProcess =&gt; PackTag.Status.StateChangeInProcess,
			 Status_StateRequested =&gt; PackTag.Status.StateRequested,
			 // To help diagnostic and UI
			 strState =&gt; PackTag.hevsUI.uiStateMasterCurrent,
			 strDiagnostic	=&gt; PackTag.hevsUI.uiStateMasterDiagnostic);

fbPackMasterMode(Enable := TRUE,
				 StartupMode := E_PackModes.Production,
				 UMCC_UnitModeChangeComplete := testUMCC,
				 // Command selected Mode
				 Cmd_UnitMode := PackTag.Command.UnitMode,
				 Cmd_UnitModeChangeRequest := PackTag.Command.UnitModeChangeRequest,
				 // Current state, from PackTag (Eventually directly from fbPackMaster.Status_StateCurrent
				 Sts_StateCurrent := PackTag.Status.StateCurrent,
			     // In_Out reference to adust Admin for transitions
				 Admin_ref := PackTag.Admin,
				 // PackTag Status
				 // Invalid := 0, Production := 1, Maintenance := 2, Manual := 3, Test := 4
				 Sts_UnitModeCurrent =&gt; PackTag.Status.UnitModeCurrent, 
				 Sts_UnitModeRequested =&gt; PackTag.Status.UnitModeRequested,
				 Sts_UnitModeChangeInProcess =&gt; PackTag.Status.UnitModeChangeInProcess,
				 // To help diagnostic and UI
				 stringUnitModeCurrent =&gt; PackTag.hevsUI.uiModeMasterCurrent,
				 stringModeInfo	=&gt; PackTag.hevsUI.uiModeMasterDiagnostic);	
             
fbGetActualBoolState(Enable := TRUE,
                     ePackState := PackTag.Status.StateCurrent,
                     Clearing =&gt; PackTag.hevsUI.uiStateClearing,
                     Stopped =&gt; PackTag.hevsUI.uiStateStopped,
                     Starting =&gt; PackTag.hevsUI.uiStateStarting,
                     Idle =&gt; PackTag.hevsUI.uiStateIdle,
                     Suspended =&gt; PackTag.hevsUI.uiStateSuspended,
                     Execute =&gt; PackTag.hevsUI.uiStateExecute,
                     Stopping =&gt; PackTag.hevsUI.uiStateStopping,
                     Aborting =&gt; PackTag.hevsUI.uiStateAborting,
                     Aborted =&gt; PackTag.hevsUI.uiStateAborted,
                     Holding =&gt; PackTag.hevsUI.uiStateHolding,
                     Held =&gt; PackTag.hevsUI.uiStateHeld,
                     Unholding =&gt; PackTag.hevsUI.uiStateUnholding,
                     Suspending =&gt; PackTag.hevsUI.uiStateSuspending,
                     Unsuspending =&gt; PackTag.hevsUI.uiStateUnsuspending,
                     Resetting =&gt; PackTag.hevsUI.uiStateResetting,
                     Completing =&gt; PackTag.hevsUI.uiStateCompleting,
                     Completed =&gt; PackTag.hevsUI.uiStateCompleted);

// Set GVL Signal from fbGetActualBoolState
GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Execute := fbGetActualBoolState.Execute;
GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Stopped := fbGetActualBoolState.Stopped;
GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Idle := fbGetActualBoolState.Idle;
      
(*
	Some Statistic from state modes and states
*)
fbPackStatistic(Enable := TRUE,
	            plcCurrentTime_s := PackTag.hevsPackTime.Local_date_time_seconds,
				unitCurrentMode	:= PackTag.Status.UnitModeCurrent,
			    unitCurrentState := PackTag.Status.StateCurrent,
			    unitAdmin := PackTag.Admin);
	            </xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>5c35c50a-157a-4d4c-902b-ae375026ac63</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_PackModeBoolInterface" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="Production">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Maintenance">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Manual">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Test">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="User_05">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="User_06">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="User_07">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="User_08">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="eActualPackMode">
                    <type>
                      <derived name="E_PackModes" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Check change</xhtml>
                    </documentation>
                  </variable>
                  <variable name="remoteEnable">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> For remote, to be completed</xhtml>
                    </documentation>
                  </variable>
                  <variable name="remoteMode">
                    <type>
                      <derived name="E_PackModes" />
                    </type>
                  </variable>
                </inputVars>
                <outputVars>
                  <variable name="eCmdUnitMode">
                    <type>
                      <derived name="E_PackModes" />
                    </type>
                  </variable>
                  <variable name="bCmdUnitModeChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="waitCycle">
                    <type>
                      <UDINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Trigger detect a new Change Mode
 That is, new mode is difference than the old one.
 Delay bCmdUnitModeChangeRequest of one cycle, beause
 new mode MUST be present before change request</xhtml>
                    </documentation>
                  </variable>
                  <variable name="uliTrigCounter">
                    <type>
                      <ULINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> For debut, allows to show activation of trigger</xhtml>
                    </documentation>
                  </variable>
                  <variable name="timeToResetCommand_ms">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="3000" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Reset command if no change after 3000 ms</xhtml>
                    </documentation>
                  </variable>
                  <variable name="timerToResetCommand">
                    <type>
                      <derived name="TON" />
                    </type>
                  </variable>
                </localVars>
                <localVars constant="true">
                  <variable name="C_WAIT_CYCLE">
                    <type>
                      <UDINT />
                    </type>
                    <initialValue>
                      <simpleValue value="3" />
                    </initialValue>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 29
	
	Summary:	This FB converts Pack BOOL commnds to
             Cmd_UnitMode			    : DINT;
	            Cmd_UnitModeChangeRequest	: BOOL;
             Cmd on rising edge only

             Modes are evaluated with this priority
             Production - Maintenance - Manual - Test - User_05 - User_06 - User_07 - User_08
</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Production THEN
    eCmdUnitMode := E_PackModes.Production;
ELSIF Maintenance THEN
    eCmdUnitMode := E_PackModes.Maintenance;
ELSIF Manual THEN 
    eCmdUnitMode := E_PackModes.Manual;
ELSIF Test THEN
    eCmdUnitMode := E_PackModes.Test;
ELSIF User_05 THEN 
    eCmdUnitMode := E_PackModes.User_05;
ELSIF User_06 THEN
    eCmdUnitMode := E_PackModes.User_06;
ELSIF User_07 THEN
    eCmdUnitMode := E_PackModes.User_07;
ELSIF User_08 THEN
    eCmdUnitMode := E_PackModes.User_08;
ELSE
	// Invalid, do not set invalid mode at output
    eCmdUnitMode := E_PackModes.Invalid;
END_IF

// Do not process invalid mode
IF NOT (eCmdUnitMode = E_PackModes.Invalid) THEN
	// Do not process if cmd is actual mode.
	IF eActualPackMode = eCmdUnitMode THEN
		bCmdUnitModeChangeRequest := FALSE;
		waitCycle := 0;
	ELSE // Mean eCmdUnitMode is new
		waitCycle := waitCycle + 1;
		IF waitCycle &gt; C_WAIT_CYCLE THEN
			bCmdUnitModeChangeRequest := TRUE;
			// Diagnostic, call of change request
			uliTrigCounter := uliTrigCounter + 1;
		END_IF
	END_IF
END_IF

// Reset command after some time if not possible to change mode.
timerToResetCommand(IN := bCmdUnitModeChangeRequest,
                    PT := INT_TO_TIME(timeToResetCommand_ms));

IF timerToResetCommand.Q THEN
	// Time for change elapsed, command rejected
	// Could be No Valid transition bit
	bCmdUnitModeChangeRequest := FALSE;
END_IF
 
</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>4f86ac17-014e-4bfb-9159-6b8b7f3e80cf</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_ModuleTest" pouType="functionBlock">
              <interface>
                <inOutVars>
                  <variable name="Status_StateCurrent">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> has to take the PackTag Status.StateCurrent</xhtml>
                    </documentation>
                  </variable>
                </inOutVars>
                <localVars>
                  <variable name="stateLastCycie">
                    <type>
                      <derived name="E_PackState" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackState.eUndefined" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Store last cycle at the en of FB call to detect and state change
 Used to force minimum of one testSC.In = 0 and reset SC once between each SC</xhtml>
                    </documentation>
                  </variable>
                  <variable name="actualState">
                    <type>
                      <derived name="E_PackState" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackState.eAborted" />
                    </initialValue>
                  </variable>
                  <variable name="init">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="testSC">
                    <type>
                      <derived name="TON" />
                    </type>
                  </variable>
                  <variable name="setSC">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> This Flag is used as result on SC State complete.</xhtml>
                    </documentation>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 06
	
	Summary:	Used to test and simulate first version of PackMaster
                Does nothing in Waitstates
                Wait 2.5 secoond before to return SC in </xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT init THEN
    init := TRUE;
END_IF

actualState := Status_StateCurrent;

CASE actualState OF
    E_PackState.eUndefined      :;
    E_PackState.eClearing       :;  // Acting
    E_PackState.eStopped        :;
    E_PackState.eStarting       :;  // Acting
    E_PackState.eIdle           :;
    E_PackState.eSuspended      :;
    E_PackState.eExecute        :;  // Acting
    E_PackState.eStopping       :;  // Acting
    E_PackState.eAborting       :;  // Acting
    E_PackState.eAborted        :;
    E_PackState.eHolding        :;  // Acting
    E_PackState.eHeld           :;
    E_PackState.eUnholding      :;  // Acting
    E_PackState.eSuspending     :;  // Acting
    E_PackState.eUnsuspending   :;  // Acting
    E_PackState.eResetting      :;  // Acting
    E_PackState.eCompleting     :;  // Acting
    E_PackState.eCompleted      :;
END_CASE

// For test of State Machine, we use a timer.
testSC(IN := (actualState = E_PackState.eClearing)      OR
             (actualState = E_PackState.eStarting)      OR
             (actualState = E_PackState.eExecute)       OR
             (actualState = E_PackState.eStopping)      OR
             (actualState = E_PackState.eAborting)      OR
             (actualState = E_PackState.eHolding)       OR
             (actualState = E_PackState.eUnholding)     OR
             (actualState = E_PackState.eSuspending)    OR
             (actualState = E_PackState.eUnsuspending)  OR
             (actualState = E_PackState.eResetting)     OR
             (actualState = E_PackState.eCompleting),
        PT := T#1000MS); 
           


// State Complete if setSC is TRUE,
setSC := testSC.Q AND (stateLastCycie = actualState);

// This Statement MUST be written AFTER evaluation of setSC
stateLastCycie := actualState;</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                  <Property name="SC" ObjectId="efa286d9-f5c0-40b3-bb08-a9d6eedea102">
                    <interface>
                      <returnType>
                        <BOOL />
                      </returnType>
                      <Attributes>
                        <Attribute Name="monitoring" Value="variable" />
                      </Attributes>
                    </interface>
                    <GetAccessor>
                      <interface>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                            <Attributes>
                              <Attribute Name="monitoring" Value="variable" />
                            </Attributes>
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">SC := setSC;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </GetAccessor>
                    <addData />
                  </Property>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>601ff330-a649-4e31-80da-fb610f5e1307</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_PackMasterState" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="Enable">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="SC_StateComplete">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Current Acting state of each module is finished.</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Command_CntrlCmd">
                    <type>
                      <derived name="E_PackCmd" />
                    </type>
                  </variable>
                  <variable name="Command_CmdChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="StopReasonCntrlCmd">
                    <type>
                      <derived name="E_PackCmd" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackCmd.eUndefined" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> This input is used to transform a Stop Reason to cmd.
 If not used, set it to 0 or E_PackCmd.eUndefined</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Admin_CurDisabledStates">
                    <type>
                      <DWORD />
                    </type>
                    <initialValue>
                      <simpleValue value="0" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> In 32 bits, list of disabled states, by default: 0</xhtml>
                    </documentation>
                  </variable>
                </inputVars>
                <outputVars>
                  <variable name="Active">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Status_StateRequested">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Status_StateChangeInProcess">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Status_StateCurrent">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="timeOut">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE if SC State Complete not present for more than timeTimeOut
 Could be used for a Warning.</xhtml>
                    </documentation>
                  </variable>
                  <variable name="strState">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'FB not Active'" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> For UI diagnostic and info</xhtml>
                    </documentation>
                  </variable>
                  <variable name="strDiagnostic">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'FB not active'" />
                    </initialValue>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="masterState">
                    <type>
                      <derived name="E_PackState" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackState.eAborted" />
                    </initialValue>
                  </variable>
                  <variable name="cntrlCmd">
                    <type>
                      <derived name="E_PackCmd" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Receive cmd info from Command_CntrlCmd</xhtml>
                    </documentation>
                  </variable>
                  <variable name="localDisabledStates">
                    <type>
                      <derived name="U_StateBitDword" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used to clean Admin_CurDisabledStates if needed.
 That is, remove acting states if the linked wait state is not present.
 Use a Union Variant of DWORD</xhtml>
                    </documentation>
                  </variable>
                  <variable name="timeTimeOut_ms">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="5000" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> This timer is used to send some info if SC not present for long time.
 Time in ms, default 5000 means 5 [s]</xhtml>
                    </documentation>
                  </variable>
                  <variable name="timeOutCheck">
                    <type>
                      <derived name="TON" />
                    </type>
                  </variable>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Enable THEN
// 	IF Command_CmdChangeRequest THEN
// 		cntrlCmd := Command_CntrlCmd;
// 	ELSE
// 		cntrlCmd := E_PackCmd.eUndefined;
// 	END_IF

	// Variant to use StopReasonCntrlCmd for
	IF Command_CmdChangeRequest 		OR
		StopReasonCntrlCmd &lt;&gt; E_PackCmd.eUndefined THEN
		cntrlCmd := Command_CntrlCmd;
	 	// Check if one flag of StopReasonCntrlCmd
		// has priority over Command_CntrlCmd
		CASE StopReasonCntrlCmd OF
		E_PackCmd.eAbort:
			cntrlCmd := E_PackCmd.eAbort;
		E_PackCmd.eStop:
			IF NOT (cntrlCmd = E_PackCmd.eAbort) THEN
				cntrlCmd := E_PackCmd.eStop;
			END_IF
		E_PackCmd.eComplete:
			IF NOT ((cntrlCmd = E_PackCmd.eAbort) OR
                    (cntrlCmd = E_PackCmd.eStop)) THEN
				cntrlCmd := E_PackCmd.eComplete;
			END_IF
		E_PackCmd.eHold:
			IF NOT ((cntrlCmd = E_PackCmd.eAbort)     OR
                    (cntrlCmd = E_PackCmd.eStop)      OR
                    (cntrlCmd = E_PackCmd.eComplete)) THEN
				cntrlCmd := E_PackCmd.eHold;
			END_IF
		E_PackCmd.eSuspend:
			IF NOT ((cntrlCmd = E_PackCmd.eAbort)     OR
                    (cntrlCmd = E_PackCmd.eStop)      OR
                    (cntrlCmd = E_PackCmd.eComplete)  OR
                    (cntrlCmd = E_PackCmd.eHold))     THEN
				cntrlCmd := E_PackCmd.eSuspend;
			END_IF
		ELSE // Not a stop command.
			// Do not modify Command_CntrlCmd
			;
		END_CASE
		
	ELSE
		cntrlCmd := E_PackCmd.eUndefined;
	END_IF
	
	(*
		Check Admin_CurDisabledStates
		
		Minimum states : Stopped - Idle - Execute - Aborted
	*)
	localDisabledStates.dwState := Admin_CurDisabledStates;
	// Remove extra states for Hold loop
	IF (localDisabledStates.boolState.Held = 1) THEN
		localDisabledStates.boolState.Holding := 1;
		localDisabledStates.boolState.Unholding := 1;
	END_IF
	// Remove extra states for Suspend loop
	IF (localDisabledStates.boolState.Suspended = 1) THEN
		localDisabledStates.boolState.Suspending := 1;
		localDisabledStates.boolState.Unsuspending := 1;
	END_IF
	// Remove extra states for Complete loop
	IF (localDisabledStates.boolState.Completed = 1) THEN
		localDisabledStates.boolState.Completing := 1;
	END_IF
	
	CASE masterState OF														// Based off Production Mode ISA-TR88.00.02-2022
		E_PackState.eUndefined	:
			strState := 'Not Active';
			;
		E_PackState.eAborting 	:
			strState := 'Aborting';
			IF SC_StateComplete THEN
				masterState := E_PackState.eAborted;
			END_IF
			
		E_PackState.eAborted 	:
			strState := 'Aborted';
			IF cntrlCmd = E_PackCmd.eClear THEN								// Clearing is done by the reset. Look at ISA-TR88.00.02-2022
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eClearing,
												   statedisabled := localDisabledStates.boolState.Clearing = 1,
												   nextWaitState := E_PackState.eStopped);
				// masterState := E_PackState.eClearing;
			END_IF
		
		E_PackState.eClearing 	:
			strState := 'Clearing';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				// masterState := E_PackState.eAborting;
			ELSIF SC_StateComplete THEN
				masterState := E_PackState.eStopped;	
			END_IF
	
		E_PackState.eStopped 	:
			strState := 'Stopped';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eReset THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eResetting,
												   statedisabled := localDisabledStates.boolState.Resetting = 1,
												   nextWaitState := E_PackState.eIdle);			
				
				// masterState := E_PackState.eResetting;
			END_IF
	
		E_PackState.eStopping 	:
			strState := 'Stopping';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				// masterState := E_PackState.eAborting;
			ELSIF SC_StateComplete THEN
				masterState := E_PackState.eStopped;
			END_IF
	
		E_PackState.eResetting 	:
			strState := 'Resetting';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				// masterState := E_PackState.eStopping;
			ELSIF SC_StateComplete THEN
				masterState := E_PackState.eIdle;			
			END_IF
	
		E_PackState.eIdle 		:
			strState := 'Idle';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				// masterState := E_PackState.eStopping;
			ELSIF cntrlCmd = E_PackCmd.eStart THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStarting,
												   statedisabled := localDisabledStates.boolState.Starting = 1,
												   nextWaitState := E_PackState.eExecute);	
				
				// masterState := E_PackState.eStarting;
			END_IF
	
		E_PackState.eStarting 	:
			strState := 'Starting';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				
				// masterState := E_PackState.eStopping;
			ELSIF SC_StateComplete THEN
				masterState := E_PackState.eExecute;	
			END_IF
	
		E_PackState.eExecute 	:
			strState := 'Execute';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				
				// masterState := E_PackState.eStopping;
			ELSIF cntrlCmd = E_PackCmd.eHold AND 
				  // If Hold disabled
				  NOT (localDisabledStates.boolState.Held = 1) THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eHolding,
												   statedisabled := localDisabledStates.boolState.Holding = 1,
												   nextWaitState := E_PackState.eHeld);				  
				// masterState := E_PackState.eHolding;	
			ELSIF cntrlCmd = E_PackCmd.eSuspend  AND 
				  // If Suspend disabled
				  NOT (localDisabledStates.boolState.Suspended = 1) THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eSuspending,
												   statedisabled := localDisabledStates.boolState.Suspending = 1,
												   nextWaitState := E_PackState.eSuspended);				  
				// masterState := E_PackState.eSuspending;	
			ELSIF cntrlCmd = E_PackCmd.eComplete AND 
				  // If Completed disabled
				  NOT (localDisabledStates.boolState.Completed = 1) THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eCompleting,
												   statedisabled := localDisabledStates.boolState.Completing = 1,
												   nextWaitState := E_PackState.eCompleted);				  
				// masterState := E_PackState.eCompleting;	
			END_IF
			
			
		(* Held Loop *)
		E_PackState.eHolding	:
			strState := 'Holding';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				
				// masterState := E_PackState.eStopping;
			ELSIF SC_StateComplete THEN
				masterState := E_PackState.eHeld;	
			END_IF
			
		E_PackState.eHeld		:
			strState := 'Held';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				
				// masterState := E_PackState.eCompleting;
			ELSIF cntrlCmd = E_PackCmd.eComplete AND 
				  // If Completed disabled
				  NOT (localDisabledStates.boolState.Completed = 1) THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eCompleting,
												   statedisabled := localDisabledStates.boolState.Completing = 1,
												   nextWaitState := E_PackState.eCompleted);				  
				// masterState := E_PackState.eCompleting;            
			ELSIF cntrlCmd = E_PackCmd.eUnhold THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eUnholding,
												   statedisabled := localDisabledStates.boolState.Unholding = 1,
												   nextWaitState := E_PackState.eExecute);				  
				// masterState := E_PackState.eUnholding;
			END_IF
	
		E_PackState.eUnholding	:
			strState := 'Unholding';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				
				// masterState := E_PackState.eStopping;
			ELSIF SC_StateComplete THEN
				masterState := E_PackState.eExecute;	
			END_IF
			
		E_PackState.eSuspending	:
			strState := 'Suspending';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				
				// masterState := E_PackState.eStopping;
			ELSIF SC_StateComplete THEN
				masterState := E_PackState.eSuspended;	
			END_IF
			
		E_PackState.eUnsuspending	:
			strState := 'Unsuspending';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				
				// masterState := E_PackState.eStopping;
			ELSIF SC_StateComplete THEN
				masterState := E_PackState.eExecute;	
			END_IF
			
		E_PackState.eSuspended	:
			strState := 'Suspended';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				// masterState := E_PackState.eStopping;
			ELSIF cntrlCmd = E_PackCmd.eComplete AND 
				  // If Completed disabled
				  NOT (localDisabledStates.boolState.Completed = 1) THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eCompleting,
												   statedisabled := localDisabledStates.boolState.Completing = 1,
												   nextWaitState := E_PackState.eCompleted);			
				// masterState := E_PackState.eCompleting;	
			ELSIF cntrlCmd = E_PackCmd.eHold AND 
				  // If Hold disabled
				  NOT (localDisabledStates.boolState.Held = 1) THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eHolding,
												   statedisabled := localDisabledStates.boolState.Holding = 1,
												   nextWaitState := E_PackState.eHeld);			
				// masterState := E_PackState.eHolding;	
			ELSIF cntrlCmd = E_PackCmd.eUnsuspend THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eUnsuspending,
												   statedisabled := localDisabledStates.boolState.Unsuspending = 1,
												   nextWaitState := E_PackState.eExecute);			
				// masterState := E_PackState.eUnsuspending;
			END_IF
			
		E_PackState.eCompleting	:
			strState := 'Completing';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				
				// masterState := E_PackState.eStopping;
			ELSIF SC_StateComplete THEN
				masterState := E_PackState.eCompleted;
			END_IF
			
		E_PackState.eCompleted	:
			strState := 'Completed';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				// masterState := E_PackState.eStopping;
			ELSIF cntrlCmd = E_PackCmd.eReset THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eResetting,
												   statedisabled := localDisabledStates.boolState.Resetting = 1,
												   nextWaitState := E_PackState.eIdle);	
				// masterState := E_PackState.eResetting;
			END_IF
			
	END_CASE
	
	(*
		Set output of FB
	*)
	IF Command_CmdChangeRequest THEN
		Status_StateRequested := Command_CntrlCmd;
	ELSE
		Status_StateRequested := E_PackState.eUndefined;	
	END_IF
	Status_StateChangeInProcess := Command_CmdChangeRequest AND (Status_StateRequested &lt;&gt; Status_StateCurrent);
	Status_StateCurrent := masterState;

	// Check Time out
	timeOutCheck(IN := (masterState = E_PackState.eAborting)   OR
                       (masterState = E_PackState.eClearing)   OR
                       (masterState = E_PackState.eCompleting) OR
                       (masterState = E_PackState.eHolding)    OR
                       (masterState = E_PackState.eResetting)  OR
                       (masterState = E_PackState.eStarting)   OR
                       (masterState = E_PackState.eStopping)   OR
                       (masterState = E_PackState.eSuspending) OR
                       (masterState = E_PackState.eUnholding)  OR
                       (masterState = E_PackState.eUnsuspending),
		         PT := INT_TO_TIME(timeTimeOut_ms));
				 
	IF timeOutCheck.Q THEN
		strDiagnostic := CONCAT('Timeout with: ',strState);
	ELSE
		strDiagnostic := 'No Message';
	END_IF

	Active := TRUE;
ELSE // FB not Enable
	Active := FALSE;
	strState := 'FB not Active';
	strDiagnostic := 'FB not active';	
END_IF
</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="M_SkipDisabledState" ObjectId="2f2f8118-76b4-4f15-9b26-e73c2e248849">
                    <interface>
                      <returnType>
                        <derived name="E_PackState" />
                      </returnType>
                      <inputVars>
                        <variable name="baseTransition">
                          <type>
                            <derived name="E_PackState" />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml"> Next state if statedisabled is FALSE</xhtml>
                          </documentation>
                        </variable>
                        <variable name="statedisabled">
                          <type>
                            <BOOL />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml"> Disabled condition, e.g. (localDisabledStates.boolState.Stopping = 1)</xhtml>
                          </documentation>
                        </variable>
                        <variable name="nextWaitState">
                          <type>
                            <derived name="E_PackState" />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml"> Next state if statedisabled is TRUE</xhtml>
                          </documentation>
                        </variable>
                      </inputVars>
                      <addData>
                        <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                          <AccessModifiers Private="true" />
                        </data>
                      </addData>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT statedisabled THEN
	M_SkipDisabledState := baseTransition;
ELSE
	M_SkipDisabledState := nextWaitState;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>0de1fa31-8e47-4928-9177-469e85c196ac</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_GetActualBoolState" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="Enable">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="ePackState">
                    <type>
                      <derived name="E_PackState" />
                    </type>
                  </variable>
                </inputVars>
                <outputVars>
                  <variable name="Active">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Clearing">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Stopped">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Starting">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Idle">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Suspended">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Execute">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Stopping">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Aborting">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Aborted">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Holding">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Held">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Unholding">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Suspending">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Unsuspending">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Resetting">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Completing">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Completed">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </outputVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 27
	
	Summary:	This FB return the BOOL State format of:
             PackTag.Status.StateCurrent                </xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Enable THEN
	Clearing := ePackState = E_PackState.eClearing;
	Stopped := ePackState = E_PackState.eStopped;
	Starting := ePackState = E_PackState.eStarting;
	Idle := ePackState = E_PackState.eIdle;
	Suspended := ePackState = E_PackState.eSuspended;
	Execute := ePackState = E_PackState.eExecute;
	Stopping := ePackState = E_PackState.eStopping;
	Aborting := ePackState = E_PackState.eAborting;
	Aborted := ePackState = E_PackState.eAborted;
	Holding := ePackState = E_PackState.eHolding;
	Held := ePackState = E_PackState.eHeld;
	Unholding := ePackState = E_PackState.eUnholding;
	Suspending := ePackState = E_PackState.eSuspending;
	Unsuspending := ePackState = E_PackState.eUnsuspending;
	Resetting := ePackState = E_PackState.eResetting;
	Completing := ePackState = E_PackState.eCompleting;
	Completed := ePackState = E_PackState.eCompleted;    
ELSE
	Clearing := FALSE;
	Stopped := FALSE;
	Starting := FALSE;
	Idle := FALSE;
	Suspended := FALSE;
	Execute := FALSE;
	Stopping := FALSE;
	Aborting := FALSE;
	Aborted := FALSE;
	Holding := FALSE;
	Held := FALSE;
	Unholding := FALSE;
	Suspending := FALSE;
	Unsuspending := FALSE;
	Resetting := FALSE;
	Completing := FALSE;
	Completed := FALSE;     
END_IF

Active := Enable;</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>6affd389-50f5-4341-b972-670c6d1ab193</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_PackMasterMode" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="Enable">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="UMCC_UnitModeChangeComplete">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="TRUE" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Unit Mode Change Complete, must be TRUE when all Module have finiched Change.
 If no delay requested, could be set to TRUE by default</xhtml>
                    </documentation>
                  </variable>
                  <variable name="StartupMode">
                    <type>
                      <DINT />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackModes.Production" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Read once at first cycle, cannot be changed later.</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Cmd_UnitMode">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Command selected Mode, must be present when Cmd_UnitModeChangeRequest is activated. </xhtml>
                    </documentation>
                  </variable>
                  <variable name="Cmd_UnitModeChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Command is set upon rising edge of the boolean.</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Sts_StateCurrent">
                    <type>
                      <DINT />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackState.eAborted" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> The actual state is needed to determine if transition is possible in Admin_ModeTransitionCfg</xhtml>
                    </documentation>
                  </variable>
                </inputVars>
                <inOutVars>
                  <variable name="Admin_ref">
                    <type>
                      <derived name="HEVS_PackTag_Admin" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Need to adjust some admin when changing mode, like available states</xhtml>
                    </documentation>
                  </variable>
                </inOutVars>
                <outputVars>
                  <variable name="Active">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> FB Active</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Sts_UnitModeCurrent">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Invalid := 0, Production := 1, Maintenance := 2, Manual := 3, Test := 4</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Sts_UnitModeRequested">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Invalid if not Cmd_UnitModeChangeRequest</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Sts_UnitModeChangeInProcess">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="stringUnitModeCurrent">
                    <type>
                      <string />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> UnitModeCurrent in STRING format
 Actually set in the code of This FB.</xhtml>
                    </documentation>
                  </variable>
                  <variable name="stringModeInfo">
                    <type>
                      <string />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Change mode Help, some info				</xhtml>
                    </documentation>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="uliLoop">
                    <type>
                      <ULINT />
                    </type>
                  </variable>
                  <variable name="currentMode">
                    <type>
                      <DINT />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackModes.Production" />
                    </initialValue>
                  </variable>
                  <variable name="bInitDone">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="rTrigChangeRequest">
                    <type>
                      <derived name="R_TRIG" />
                    </type>
                  </variable>
                  <variable name="internalChangeInProgress">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Use to maintain change mode until end of change.</xhtml>
                    </documentation>
                  </variable>
                  <variable name="stringModeCurrent">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXMODESTRANSITION" />
                        <baseType>
                          <string />
                        </baseType>
                      </array>
                    </type>
                    <initialValue>
                      <arrayValue>
                        <value>
                          <simpleValue value="'Invalid'" />
                        </value>
                        <value>
                          <simpleValue value="'Production'" />
                        </value>
                        <value>
                          <simpleValue value="'Maintenance'" />
                        </value>
                        <value>
                          <simpleValue value="'Manual'" />
                        </value>
                        <value>
                          <simpleValue value="'Test HEVS'" />
                        </value>
                        <value>
                          <simpleValue value="'User 05'" />
                        </value>
                        <value>
                          <simpleValue value="'User 06'" />
                        </value>
                        <value>
                          <simpleValue value="'User 07'" />
                        </value>
                        <value>
                          <simpleValue value="'User 08'" />
                        </value>
                      </arrayValue>
                    </initialValue>
                  </variable>
                  <variable name="uliTriggerChangeRequested">
                    <type>
                      <ULINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> For diagnostic			</xhtml>
                    </documentation>
                  </variable>
                  <variable name="bValidModeFound">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="setTestDWord">
                    <type>
                      <DWORD />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Compute a DWord with exactly one bit</xhtml>
                    </documentation>
                  </variable>
                  <variable name="internalCurrentModeEnblTra">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Current mode enable transition from state</xhtml>
                    </documentation>
                  </variable>
                  <variable name="internalTargetModeEnblTra">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Target mode enable transition to state</xhtml>
                    </documentation>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 28
	
	Summary:	Mode manager
				Default at start is Production mode := 1				</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Enable THEN
	IF NOT bInitDone THEN
		bInitDone := TRUE;
		currentMode := StartupMode;
		stringUnitModeCurrent := stringModeCurrent[currentMode];
	END_IF
	uliLoop := uliLoop + 1;

	rTrigChangeRequest(clk := Cmd_UnitModeChangeRequest);

	// Main condition to start a change request is Cmd_UnitModeChangeRequest
	// Once the change has started, it is maintained until the change is complete.
	IF rTrigChangeRequest.Q 									  AND 
	   // Change only possible if Cmd_UnitMode &lt; max unit modes, else ignord
	   Cmd_UnitMode &lt; HEVS_PackTag_GVL.C_ADMIN_MAXMODESTRANSITION AND
	   // Cmd_UnitMode MUST NOT be 0
	   Cmd_UnitMode &gt; 0											  AND
	   // Do not process anything if mode is equal to currentMode 
	   Cmd_UnitMode &lt;&gt; currentMode                                AND
	   // Admin.EnabledModesCfg = 1 or less means no valid mode enabled
	   Admin_ref.EnabledModesCfg &gt; 1							  THEN
	   
	   bValidModeFound := TRUE;
	   uliTriggerChangeRequested := uliTriggerChangeRequested + 1;
	   // A valid mode number is available and enabled
	   // Compute test DWORD
	   setTestDWord := 1;
	   setTestDWord := SHL(setTestDWord,Sts_StateCurrent);
	   // For Current mode
	   internalCurrentModeEnblTra := (Admin_ref.ModeTransitionCfg[currentMode] AND setTestDWord) = setTestDWord;
	   // For target mode
	   internalTargetModeEnblTra := (Admin_ref.ModeTransitionCfg[Cmd_UnitMode] AND setTestDWord) = setTestDWord;

	   // Check if there are valid states transitions in Admin_ModeTransitionCfg
	   IF internalCurrentModeEnblTra AND
		  internalTargetModeEnblTra  THEN
			 internalChangeInProgress := TRUE;
			 stringUnitModeCurrent := 'Mode is Changing';
			 stringModeInfo := 'Wait UMCC_UnitModeChangeComplete';
	   ELSE
		   // Do nothing
	      stringModeInfo := 'No valid transition bits';
	   END_IF
		
	   // Check
	ELSIF NOT bValidModeFound THEN
		// Do nothing
		stringModeInfo := 'No valid mode';
    ELSE
		// Do nothing
		;
	END_IF	
	
	// Once internalChangeInProgress is set,
	// wait UMCC_UnitModeChangeComplete for end of mode change.
	IF internalChangeInProgress    AND
	   UMCC_UnitModeChangeComplete THEN
		internalChangeInProgress := FALSE;
		// Update current mode
		currentMode := Cmd_UnitMode;
		// Update Disabled State in new mode.
		Admin_ref.CurDisabledStates := Admin_ref.DisabledStatesCfg[currentMode];		
		stringUnitModeCurrent := stringModeCurrent[currentMode];
		stringModeInfo := 'Mode changed successfully';
	END_IF
	(*
		Manage outputs
	*)
	Active := Enable;
	Sts_UnitModeCurrent := currentMode;
	IF Cmd_UnitModeChangeRequest THEN
		Sts_UnitModeRequested := Cmd_UnitMode;
	ELSE
		Sts_UnitModeRequested := E_PackModes.Invalid;
	END_IF
	Sts_UnitModeChangeInProcess := internalChangeInProgress AND (Cmd_UnitMode &lt;&gt; currentMode);
	
	IF NOT Cmd_UnitModeChangeRequest THEN
		bValidModeFound := FALSE;
		stringModeInfo := 'Wait Cmd_UnitModeChangeRequest';
	END_IF	
ELSE // FB not Enable, reset outputs
	Active := FALSE;
	Sts_UnitModeCurrent := 0;
	Sts_UnitModeRequested := 0;
	Sts_UnitModeChangeInProcess	:= FALSE;
	stringUnitModeCurrent := 'FB Not active';
	// Change mode Help, some info				
	stringModeInfo := 'FB Not active';	
END_IF

</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>e6266108-2902-4df5-af45-0b3e6b914fe1</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="PRG_GetTime_CtrlX" pouType="program">
              <interface>
                <localVars>
                  <variable name="Date_and_Time_result">
                    <type>
                      <UDINT />
                    </type>
                  </variable>
                  <variable name="Local_date_time_from_secs">
                    <type>
                      <derived name="SYSTIMEDATE" />
                    </type>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 29
	
	This program compute time for CtrlX Core
 If you use another hardware, you could have to change it.
 Needed to fill PackTag.hevsPackTime
</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// Get time in seconds since 1970 :
PackTag.hevsPackTime.Date_and_time_in_seconds := SysTimeRtcGet(Date_and_Time_result);
IF Date_and_Time_result &lt;&gt; 0 THEN
RETURN;
END_IF

// Convert UTC seconds to local time seconds, regarding Timezone and Summer time :
Date_and_Time_result := SysTimeRtcConvertUtcToLocal(PackTag.hevsPackTime.Date_and_time_in_seconds,
                                                    PackTag.hevsPackTime.Local_date_time_seconds);
IF Date_and_Time_result &lt;&gt; 0 THEN
RETURN;
END_IF

// Convert the UTC seconds to a DATE_AND_TIME variable dt#yyyy-mm-dd-hh:mm:ss :
PackTag.hevsPackTime.Date_and_time_format := UDINT_TO_DT(PackTag.hevsPackTime.Local_date_time_seconds);

// Convert DATE_AND_TIME to a String :
PackTag.hevsPackTime.Date_and_time_string := DT_TO_STRING(PackTag.hevsPackTime.Date_and_time_format);

// Finally, set PackTag Date and Time
PackTag.Admin.PLCDateTime := PackTag.hevsPackTime.Date_and_time_format;</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>80fdabaa-4283-4d32-ab4e-3a431464d5d7</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_ExecuteDone" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="Execute">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </inputVars>
                <outputVars>
                  <variable name="Done">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Active">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Error">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="rExecute">
                    <type>
                      <derived name="R_TRIG" />
                    </type>
                  </variable>
                  <variable name="eExecuteDone">
                    <type>
                      <derived name="E_ExecuteDone" />
                    </type>
                  </variable>
                  <variable name="errorCondition">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="doneCondition">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
	A function block of type Execute Done
	
	Source: www.hevs.ch
	Author: Cedric Lenoir
	Date: 22 August 2024
</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">(* 
	Manage Inputs
*)
rExecute(CLK := Execute);

CASE eExecuteDone OF
	E_ExecuteDone.Idle :
		IF rExecute.Q THEN
			eExecuteDone := E_ExecuteDone.Init;
		END_IF

	E_ExecuteDone.Init :
		// No init
		IF errorCondition THEN
			eExecuteDone := E_ExecuteDone.Error;
		ELSE
			eExecuteDone := E_ExecuteDone.InOp;
		END_IF

	E_ExecuteDone.InOp :
		IF errorCondition THEN
			eExecuteDone := E_ExecuteDone.Error;
		ELSIF doneCondition THEN
			eExecuteDone := E_ExecuteDone.Done;
		END_IF
	
	E_ExecuteDone.Done :
		IF NOT Execute THEN
			eExecuteDone := E_ExecuteDone.Idle;
		END_IF

	E_ExecuteDone.Error :
		IF NOT Execute THEN
			eExecuteDone := E_ExecuteDone.Idle;
		END_IF
END_CASE


Done := (eExecuteDone = E_ExecuteDone.Done);
Active := (eExecuteDone = E_ExecuteDone.Init) OR (eExecuteDone = E_ExecuteDone.InOp) ;
Error := (eExecuteDone = E_ExecuteDone.Error);</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>1001b4d1-b93a-4e02-b5f9-07f3fac1f94f</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_HEVS_SetAlarm" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="bSetAlarm">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Active on state</xhtml>
                    </documentation>
                  </variable>
                  <variable name="bAckAlarmTrig">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Active on rising edge</xhtml>
                    </documentation>
                  </variable>
                  <variable name="ID">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Event Configuration</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Value">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Message">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="Category">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </inputVars>
                <inOutVars>
                  <variable name="plcDateTimePack">
                    <type>
                      <DT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Base time from PackTag.Admin.PLCDateTime
 PackTag.Admin.PLCDateTime should be set depending of HW system</xhtml>
                    </documentation>
                  </variable>
                  <variable name="stAdminAlarm">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXALARMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Event" />
                        </baseType>
                      </array>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> A reference to Alarm and Alarm History of PackTag.</xhtml>
                    </documentation>
                  </variable>
                  <variable name="stAdminAlarmHistory">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXHISTORYALARMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Event" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                </inOutVars>
                <outputVars>
                  <variable name="bMaxNbOfAlarmReached">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="stErrorString">
                    <type>
                      <string />
                    </type>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="diAlarmLoop">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="diFirstEmptyBufferId">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="bThisEventExistsInBuffer">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="bFoundFirstEventFalse">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="diBufferIdToRemove">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="ThisTrigger">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="rTrigAck">
                    <type>
                      <derived name="R_TRIG" />
                    </type>
                  </variable>
                  <variable name="rTrigTime">
                    <type>
                      <derived name="R_TRIG" />
                    </type>
                  </variable>
                  <variable name="dateTimeAtTrig">
                    <type>
                      <DT />
                    </type>
                  </variable>
                  <variable name="diBufferHistoryLoop">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
	A function block to set an alarm using
	PackML 2022 structure
	TwinCAT Tc3_EventLogger
	
	Source: www.hevs.ch
	Author: Cedric Lenoir
	Date: 22 August 2024


	En théorie pas besoin de bSetAlarm puisque l'on passe une structure d'alarme
	de type EVENT_typ qui contient la valeur du trigger...
</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	If the function is called with input bSetAlarm = TRUE, 
	the function verifies whether the specified alarm message 
	is already in the list of active alarms.

	If not, the function obtains the RTC of the controller
	and writes it together with the specified alarm message
	into the list of active alarms.

	If the maximum number of messages in the list is reached,
	no new message is added and bMaxNbOfAlarmReached is set to TRUE.
*)

rTrigTime(CLK := bSetAlarm);
IF rTrigTime.Q THEN
	dateTimeAtTrig := plcDateTimePack;
END_IF


IF ID = 0 THEN
	stErrorString := 'Event ID cannot be 0';
END_IF

IF bSetAlarm THEN
	ThisTrigger := TRUE;
	// Loop in stAdminAlarm to check if alarm ID exist is stAdminAlarm
	// I could use WHILE, but I use FOR..LOOP to have a constant time check.
	bThisEventExistsInBuffer := FALSE;
	diFirstEmptyBufferId := 0;
	bFoundFirstEventFalse := FALSE;
	FOR diAlarmLoop := 0 TO HEVS_PackTag_GVL.C_ADMIN_MAXALARMS BY 1 DO
		IF (stAdminAlarm[diAlarmLoop].ID = ID) THEN
			bThisEventExistsInBuffer := TRUE;
		END_IF;

		// Detect first empty index of buffer
		IF NOT stAdminAlarm[diAlarmLoop].Trigger AND
		   NOT bFoundFirstEventFalse              THEN	
			bFoundFirstEventFalse := TRUE;
			diFirstEmptyBufferId := diAlarmLoop;
		END_IF
	END_FOR
	
	// Check if buffer is Full
	bMaxNbOfAlarmReached := NOT bThisEventExistsInBuffer AND
	                        NOT bFoundFirstEventFalse;

	// If NOT bThisEventExistsInBuffer
	IF NOT bMaxNbOfAlarmReached 	AND
	   NOT bThisEventExistsInBuffer THEN
	   stAdminAlarm[diFirstEmptyBufferId].Trigger := TRUE;
	   stAdminAlarm[diFirstEmptyBufferId].ID := ID;
	   stAdminAlarm[diFirstEmptyBufferId].Value := Value;
	   stAdminAlarm[diFirstEmptyBufferId].Message := Message;
	   stAdminAlarm[diFirstEmptyBufferId].Category := Category;
	   stAdminAlarm[diFirstEmptyBufferId].DateTime := dateTimeAtTrig;
	   // Force reset Ack when written.
	   stAdminAlarm[diFirstEmptyBufferId].AckDateTime := DT#1970-1-1-0:0:0;
	
	ELSE
	   ;	// Do nothing if event exist or buffer full.
	END_IF
ELSE // This Event is no more active with bSetAlarm FALSE
	ThisTrigger := FALSE;
	
	// IF alarm is no more active, it must be canceled, then
	// the buffer should be modifed to remove empty space
	// by changing place of all events after it.
	bThisEventExistsInBuffer := FALSE;
	FOR diAlarmLoop := 0 TO HEVS_PackTag_GVL.C_ADMIN_MAXALARMS BY 1 DO
		IF stAdminAlarm[diAlarmLoop].ID = ID THEN
			bThisEventExistsInBuffer := TRUE;
			diBufferIdToRemove := diAlarmLoop;
		END_IF
	END_FOR
	
	// Before to Erase the Alarm, This alarm is stored in History.
	IF bThisEventExistsInBuffer THEN
		// Move all Event form Buffer(n-1) to Buffer(n)
		// Except the last one which will be lost (ALARM_HISTORY_EXTENT + 1).
		// As this buffer will be often full, there is no reason to use
		// something else than a FOR LOOP
		FOR diBufferHistoryLoop := HEVS_PackTag_GVL.C_ADMIN_MAXHISTORYALARMS TO 1 BY -1 DO
			stAdminAlarmHistory[diBufferHistoryLoop] := stAdminAlarmHistory[diBufferHistoryLoop - 1];
		END_FOR
		// Write This Alarm in Alarm History before to erase it from Alarms.
		stAdminAlarmHistory[0] := stAdminAlarm[diBufferIdToRemove];
	END_IF
	
	// Event exist in buffer Erase it.
	IF bThisEventExistsInBuffer THEN
		stAdminAlarm[diBufferIdToRemove].AckDateTime := DT#1970-1-1-0:0:0;
		stAdminAlarm[diBufferIdToRemove].Category := 0;
		stAdminAlarm[diBufferIdToRemove].DateTime := DT#1970-1-1-0:0:0;
		stAdminAlarm[diBufferIdToRemove].ID := 0;
		stAdminAlarm[diBufferIdToRemove].Message := '';
		stAdminAlarm[diBufferIdToRemove].Trigger := FALSE;
		stAdminAlarm[diBufferIdToRemove].Value := 0;

		// Remove empty index in buffer by moving next alarms.
		// IF positions in buffer are not empty (trigger false)
		diAlarmLoop := diBufferIdToRemove;
		
		WHILE diAlarmLoop &lt; HEVS_PackTag_GVL.C_ADMIN_MAXALARMS AND 
              stAdminAlarm[diAlarmLoop + 1].Trigger       DO
			// Cannot be out of buffer because diAlarmLoop &lt; GVL_PackConstant.ALARM_EXTENT
			// Move buffer (n+1) to buffer(n)
			stAdminAlarm[diAlarmLoop] := stAdminAlarm[diAlarmLoop + 1]; 
			diAlarmLoop := diAlarmLoop + 1;
		END_WHILE
		
		// Erase last position on buffer.
		IF diAlarmLoop &lt;&gt; diBufferIdToRemove THEN
			stAdminAlarm[diAlarmLoop].AckDateTime := DT#1970-1-1-0:0:0;
			stAdminAlarm[diAlarmLoop].Category := 0;
			stAdminAlarm[diAlarmLoop].DateTime := DT#1970-1-1-0:0:0;
			stAdminAlarm[diAlarmLoop].ID := 0;
			stAdminAlarm[diAlarmLoop].Message := '';
			stAdminAlarm[diAlarmLoop].Trigger := FALSE;
			stAdminAlarm[diAlarmLoop].Value := 0;
		END_IF
	END_IF 
END_IF

(*
	Set AckDateTime
	Do not set if NOT bSetAlarm because Event was removed with the above code.
*)
rTrigAck(CLK := bAckAlarmTrig);

IF rTrigAck.Q AND bSetAlarm THEN
	FOR diAlarmLoop := 0 TO HEVS_PackTag_GVL.C_ADMIN_MAXALARMS BY 1 DO
		IF (stAdminAlarm[diAlarmLoop].ID = ID) THEN
			stAdminAlarm[diAlarmLoop].AckDateTime := plcDateTimePack;
		END_IF
	END_FOR	
END_IF

</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>e0c70801-596b-4b02-bab4-4ef280aa3abb</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_HEVS_SetWarning" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="bSetWarning">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Active on state</xhtml>
                    </documentation>
                  </variable>
                  <variable name="bAckWarningTrig">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Active on rising edge</xhtml>
                    </documentation>
                  </variable>
                  <variable name="ID">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Event Configuration</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Value">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Message">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="Category">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </inputVars>
                <inOutVars>
                  <variable name="plcDateTimePack">
                    <type>
                      <DT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Base time from PackTag.Admin.PLCDateTime
 PackTag.Admin.PLCDateTime should be set depending of HW system</xhtml>
                    </documentation>
                  </variable>
                  <variable name="stAdminWarning">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXWARNINGS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Event" />
                        </baseType>
                      </array>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> A reference to list of Warnings from GVL PackTag</xhtml>
                    </documentation>
                  </variable>
                </inOutVars>
                <outputVars>
                  <variable name="bMaxNbOfAlarmReached">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="stErrorString">
                    <type>
                      <string />
                    </type>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="diWarningLoop">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="diFirstEmptyBufferId">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="bThisEventExistsInBuffer">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="bFoundFirstEventFalse">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="diBufferIdToRemove">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="ThisTrigger">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="rTrigAck">
                    <type>
                      <derived name="R_TRIG" />
                    </type>
                  </variable>
                  <variable name="rTrigTime">
                    <type>
                      <derived name="R_TRIG" />
                    </type>
                  </variable>
                  <variable name="dateTimeAtTrig">
                    <type>
                      <DT />
                    </type>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
	A function block to set an alarm using
	PackML 2022 structure
	TwinCAT Tc3_EventLogger
	
	Source: www.hevs.ch
	Author: Cedric Lenoir
	Date: 22 August 2024


	En théorie pas besoin de bSetAlarm puisque l'on passe une structure d'alarme
	de type EVENT_typ qui contient la valeur du trigger...
</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	If the function is called with input bSetAlarm = TRUE, 
	the function verifies whether the specified alarm message 
	is already in the list of active alarms.

	If not, the function obtains the RTC of the controller
	and writes it together with the specified alarm message
	into the list of active alarms.

	If the maximum number of messages in the list is reached,
	no new message is added and bMaxNbOfAlarmReached is set to TRUE.
*)

rTrigTime(CLK := bSetWarning);
IF rTrigTime.Q THEN
	dateTimeAtTrig := plcDateTimePack;
END_IF


IF ID = 0 THEN
	stErrorString := 'Event ID cannot be 0';
END_IF

IF bSetWarning THEN
	ThisTrigger := TRUE;
	// Loop in stAdminAlarm to check if alarm ID exist is stAdminAlarm
	// I could use WHILE, but I use FOR..LOOP to have a constant time check.
	bThisEventExistsInBuffer := FALSE;
	diFirstEmptyBufferId := 0;
	bFoundFirstEventFalse := FALSE;
	FOR diWarningLoop := 0 TO HEVS_PackTag_GVL.C_ADMIN_MAXWARNINGS BY 1 DO
		IF (stAdminWarning[diWarningLoop].ID = ID) THEN
			bThisEventExistsInBuffer := TRUE;
		END_IF;

		// Detect first empty index of buffer
		IF NOT stAdminWarning[diWarningLoop].Trigger AND
		   NOT bFoundFirstEventFalse              THEN	
			bFoundFirstEventFalse := TRUE;
			diFirstEmptyBufferId := diWarningLoop;
		END_IF
	END_FOR
	
	// Check if buffer is Full
	bMaxNbOfAlarmReached := NOT bThisEventExistsInBuffer AND
	                        NOT bFoundFirstEventFalse;

	// If NOT bThisEventExistsInBuffer
	IF NOT bMaxNbOfAlarmReached 	AND
	   NOT bThisEventExistsInBuffer THEN
	   stAdminWarning[diFirstEmptyBufferId].Trigger := TRUE;
	   stAdminWarning[diFirstEmptyBufferId].ID := ID;
	   stAdminWarning[diFirstEmptyBufferId].Value := Value;
	   stAdminWarning[diFirstEmptyBufferId].Message := Message;
	   stAdminWarning[diFirstEmptyBufferId].Category := Category;
	   stAdminWarning[diFirstEmptyBufferId].DateTime := dateTimeAtTrig;
	   // Force reset Ack when written.
	   stAdminWarning[diFirstEmptyBufferId].AckDateTime := DT#1970-1-1-0:0:0;
	ELSE
	   ;	// Do nothing if event exist or buffer full.
	END_IF
ELSE // This Event is no more active with bSetAlarm FALSE
	ThisTrigger := FALSE;
	// IF alarm is no more active, it must be canceled, then
	// the buffer should be modifed to remove empty space
	// by changing place of all events after it.
	bThisEventExistsInBuffer := FALSE;
	FOR diWarningLoop := 0 TO HEVS_PackTag_GVL.C_ADMIN_MAXWARNINGS BY 1 DO
		IF stAdminWarning[diWarningLoop].ID = ID THEN
			bThisEventExistsInBuffer := TRUE;
			diBufferIdToRemove := diWarningLoop;
		END_IF
	END_FOR
	
	// Event exist in buffer Erase it.
	IF bThisEventExistsInBuffer THEN
		stAdminWarning[diBufferIdToRemove].AckDateTime := DT#1970-1-1-0:0:0;
		stAdminWarning[diBufferIdToRemove].Category := 0;
		stAdminWarning[diBufferIdToRemove].DateTime := DT#1970-1-1-0:0:0;
		stAdminWarning[diBufferIdToRemove].ID := 0;
		stAdminWarning[diBufferIdToRemove].Message := '';
		stAdminWarning[diBufferIdToRemove].Trigger := FALSE;
		stAdminWarning[diBufferIdToRemove].Value := 0;

		// Remove empty index in buffer by moving next alarms.
		// IF positions in buffer are not empty (trigger false)
		diWarningLoop := diBufferIdToRemove;
		
		WHILE diWarningLoop &lt; HEVS_PackTag_GVL.C_ADMIN_MAXWARNINGS AND 
              stAdminWarning[diWarningLoop + 1].Trigger       DO
			// Cannot be out of buffer because diAlarmLoop &lt; GVL_PackConstant.ALARM_EXTENT
			// Move buffer (n+1) to buffer(n)
			stAdminWarning[diWarningLoop] := stAdminWarning[diWarningLoop + 1]; 
			diWarningLoop := diWarningLoop + 1;
		END_WHILE
		
		// Erase last position on buffer.
		IF diWarningLoop &lt;&gt; diBufferIdToRemove THEN
			stAdminWarning[diWarningLoop].AckDateTime := DT#1970-1-1-0:0:0;
			stAdminWarning[diWarningLoop].Category := 0;
			stAdminWarning[diWarningLoop].DateTime := DT#1970-1-1-0:0:0;
			stAdminWarning[diWarningLoop].ID := 0;
			stAdminWarning[diWarningLoop].Message := '';
			stAdminWarning[diWarningLoop].Trigger := FALSE;
			stAdminWarning[diWarningLoop].Value := 0;
		END_IF
	END_IF 
END_IF

(*
	Set AckDateTime
	Do not set if NOT bSetAlarm because Event was removed with the above code.
	
	Acknowledge on rising edge only
*)
rTrigAck(CLK := bAckWarningTrig);

IF rTrigAck.Q AND bSetWarning THEN
	FOR diWarningLoop := 0 TO HEVS_PackTag_GVL.C_ADMIN_MAXWARNINGS BY 1 DO
		IF (stAdminWarning[diWarningLoop].ID = ID) THEN
			stAdminWarning[diWarningLoop].AckDateTime := PackTag.Admin.PLCDateTime;
		END_IF
	END_FOR	
END_IF

</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>0bc69e37-dde3-4ad5-bccc-caaee1e90548</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_HEVS_StopReason" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="SuspendCategory">
                    <type>
                      <DINT />
                    </type>
                    <initialValue>
                      <simpleValue value="1" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> With default value 1</xhtml>
                    </documentation>
                  </variable>
                  <variable name="HoldCategory">
                    <type>
                      <DINT />
                    </type>
                    <initialValue>
                      <simpleValue value="2" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> With default value 2</xhtml>
                    </documentation>
                  </variable>
                  <variable name="StopCategory">
                    <type>
                      <DINT />
                    </type>
                    <initialValue>
                      <simpleValue value="3" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> With default value 3</xhtml>
                    </documentation>
                  </variable>
                  <variable name="AbortCategory">
                    <type>
                      <DINT />
                    </type>
                    <initialValue>
                      <simpleValue value="4" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> With default value 4</xhtml>
                    </documentation>
                  </variable>
                  <variable name="CompleteCategory">
                    <type>
                      <DINT />
                    </type>
                    <initialValue>
                      <simpleValue value="6" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> With default value 6</xhtml>
                    </documentation>
                  </variable>
                </inputVars>
                <inOutVars>
                  <variable name="stStopReason">
                    <type>
                      <derived name="HEVS_PackTag_Event" />
                    </type>
                  </variable>
                  <variable name="stAdminAlarm">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXALARMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Event" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                </inOutVars>
                <outputVars>
                  <variable name="SuspendCmd">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HoldCmd">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="StopCmd">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="AbortCmd">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="CompleteCmd">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="stopReasonToMaster">
                    <type>
                      <derived name="E_PackCmd" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackCmd.eUndefined" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Use to activate Stop Reason on FB_PackMasterState</xhtml>
                    </documentation>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="SuspendExistInAlarm">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HoldExistInAlarm">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="StopExistInAlarm">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="AbortExistInAlarm">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="CompleteExistInAlarm">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="SuspendId">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="HoldId">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="StopId">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="AbortId">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="CompleteId">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="diAlarmLoop">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
	A function block to set an alarm using
	PackML 2022 structure
	TwinCAT Tc3_EventLogger
	
	Source: www.hevs.ch
	Author: Cedric Lenoir
	Date: 22 August 2024  
</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	TR 88 not precise, 
	we will show the Cmd with the Highest Priority
	with Abort, the higest, Stop, Complete, Hold and Suspend, the lowest.
*)
SuspendExistInAlarm := FALSE;
HoldExistInAlarm := FALSE;
StopExistInAlarm := FALSE;
AbortExistInAlarm := FALSE;
CompleteExistInAlarm := FALSE;

SuspendId := 0;
HoldId := 0;
StopId := 0;
AbortId := 0;
CompleteId := 0;
	
FOR diAlarmLoop := 0 TO HEVS_PackTag_GVL.C_ADMIN_MAXALARMS BY 1 DO
	IF stAdminAlarm[diAlarmLoop].Category = SuspendCategory THEN
		SuspendExistInAlarm := TRUE;
		SuspendId := diAlarmLoop;
	END_IF

	IF stAdminAlarm[diAlarmLoop].Category = HoldCategory THEN
		HoldExistInAlarm := TRUE;
		HoldId := diAlarmLoop;
	END_IF

	IF stAdminAlarm[diAlarmLoop].Category = StopCategory THEN
		StopExistInAlarm := TRUE;
		StopId := diAlarmLoop;
	END_IF

	IF stAdminAlarm[diAlarmLoop].Category = AbortCategory THEN
		AbortExistInAlarm := TRUE;
		AbortId := diAlarmLoop;
	END_IF

	IF stAdminAlarm[diAlarmLoop].Category = CompleteCategory THEN
		CompleteExistInAlarm := TRUE;
		CompleteId := diAlarmLoop;
	END_IF
END_FOR

// Select the highest priority sto reason
IF AbortExistInAlarm THEN
	stStopReason := stAdminAlarm[AbortId];
	stopReasonToMaster := E_PackCmd.eAbort;
	
ELSIF StopExistInAlarm THEN
	stStopReason := stAdminAlarm[StopId];
	stopReasonToMaster := E_PackCmd.eStop;

ELSIF CompleteExistInAlarm THEN
	stStopReason := stAdminAlarm[CompleteId];
	stopReasonToMaster := E_PackCmd.eComplete;
	
ELSIF HoldExistInAlarm THEN
	stStopReason := stAdminAlarm[HoldId];
	stopReasonToMaster := E_PackCmd.eHold;
	
ELSIF SuspendExistInAlarm THEN
	stStopReason := stAdminAlarm[SuspendId];
	stopReasonToMaster := E_PackCmd.eSuspend;
	
ELSE // No Stop reason, reset
	stStopReason.AckDateTime := DT#1970-1-1-0:0:0;
	stStopReason.Category := 0;
	stStopReason.DateTime := DT#1970-1-1-0:0:0;
	stStopReason.ID := 0;
	stStopReason.Message := '';
	stStopReason.Trigger := FALSE;
	stStopReason.Value := 0; 

	stopReasonToMaster := E_PackCmd.eUndefined;
END_IF

(*
	Set outputs
*)
AbortCmd := AbortExistInAlarm;
StopCmd := StopExistInAlarm AND NOT AbortExistInAlarm;
CompleteCmd := CompleteExistInAlarm AND NOT (AbortExistInAlarm OR StopExistInAlarm);
HoldCmd := HoldExistInAlarm AND NOT (AbortExistInAlarm OR StopExistInAlarm OR CompleteExistInAlarm);
SuspendCmd := SuspendCmd AND NOT (AbortExistInAlarm OR StopExistInAlarm OR CompleteExistInAlarm OR HoldExistInAlarm);


</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>25b844c3-bc7e-4b00-a9a0-014cdb5f5203</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_InOpBase" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="Enable">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </inputVars>
                <outputVars>
                  <variable name="InOperation">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Error">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="ErrorId">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="eOperationBase">
                    <type>
                      <derived name="E_InOperationBase" />
                    </type>
                  </variable>
                  <variable name="errorCondition">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
	A function block of type Enable
	
	Source: www.hevs.ch
	Author: Cedric Lenoir
	Date: 22 August 2024
</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// Read Input

CASE eOperationBase OF
	E_InOperationBase.Idle 			:
		IF Enable THEN
			eOperationBase := E_InOperationBase.Init;
		END_IF
        
	E_InOperationBase.Init 			:
		IF NOT Enable THEN
			eOperationBase := E_InOperationBase.Idle;
		ELSIF errorCondition THEN
			eOperationBase := E_InOperationBase.Error;
		END_IF
        
	E_InOperationBase.InOp  :
		IF NOT Enable THEN
			eOperationBase := E_InOperationBase.Idle;
		ELSIF errorCondition THEN
			eOperationBase := E_InOperationBase.Error;
		END_IF
        
	E_InOperationBase.Error			:
		IF NOT Enable THEN
			eOperationBase := E_InOperationBase.Idle;
		END_IF
END_CASE

InOperation := eOperationBase = E_InOperationBase.InOp;
			   
Error := (eOperationBase = E_InOperationBase.Error);

// 0 while no ID defined
ErrorId := 0;</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>f8f38993-84e0-4aec-94d9-f4eb583a1dc4</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="PRG_Sandbox" pouType="program">
              <interface>
                <localVars>
                  <variable name="uliLoop">
                    <type>
                      <ULINT />
                    </type>
                  </variable>
                  <variable name="bInit">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Only used to give a basic value to some variables.</xhtml>
                    </documentation>
                  </variable>
                  <variable name="fbInOpBase">
                    <type>
                      <derived name="FB_InOpBase" />
                    </type>
                  </variable>
                  <variable name="fbExecuteDone">
                    <type>
                      <derived name="FB_ExecuteDone" />
                    </type>
                  </variable>
                </localVars>
              </interface>
              <actions>
                <action name="ACT_TestNode">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
    This part is only used to test the communication with Node-RED
*)
IF NOT bInit THEN
    bInit := TRUE;
    GVL_Node.readREAL    := 3.14;
    GVL_Node.readDINT    := 421;
    GVL_Node.readBOOL    := TRUE;
    GVL_Node.readString  := 'Empty';
    GVL_Node.writeREAL   := 0;
    GVL_Node.writeDINT   := 0;
    GVL_Node.writeBOOL   := FALSE;
END_IF

IF GVL_Node.readREAL &gt; 6.28 THEN
    GVL_Node.readREAL := 0;
ELSE
    GVL_Node.readREAL := GVL_Node.readREAL + 0.1; ;
END_IF
    
IF GVL_Node.readDINT &gt; 1000 THEN
    GVL_Node.readDINT := 0;
ELSE
    GVL_Node.readDINT := GVL_Node.readDINT + 1;
END_IF</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>5f7daf80-8355-4df0-a828-03e8f8ac8616</ObjectId>
                    </data>
                  </addData>
                </action>
              </actions>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
    Test base FB
*)
fbInOpBase();
fbExecuteDone();

uliLoop := uliLoop + 1;
(*
    Used to test connection with Node-RED via ADS
*)
ACT_TestNode();

</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>4061fb18-cc46-4ea0-aa14-00c5bbba1682</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="PRG_TestAlarm" pouType="program">
              <interface>
                <localVars>
                  <variable name="BuildUiString">
                    <type>
                      <string />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Tempo var to display an evant in String Format for UI</xhtml>
                    </documentation>
                  </variable>
                  <variable name="fbSetAlarm_0">
                    <type>
                      <derived name="FB_HEVS_SetAlarm" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">
		Test alarms with FB first
	</xhtml>
                    </documentation>
                  </variable>
                  <variable name="fbSetAlarm_1">
                    <type>
                      <derived name="FB_HEVS_SetAlarm" />
                    </type>
                  </variable>
                  <variable name="fbSetAlarm_2">
                    <type>
                      <derived name="FB_HEVS_SetAlarm" />
                    </type>
                  </variable>
                  <variable name="fbSetWarning_0">
                    <type>
                      <derived name="FB_HEVS_SetWarning" />
                    </type>
                  </variable>
                  <variable name="fbSetWarning_1">
                    <type>
                      <derived name="FB_HEVS_SetWarning" />
                    </type>
                  </variable>
                  <variable name="fbSetWarning_2">
                    <type>
                      <derived name="FB_HEVS_SetWarning" />
                    </type>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 29
	
	This program is done to test alarms with a set of
		3 Alarms
		3 Warnings
</xhtml>
                </documentation>
              </interface>
              <actions>
                <action name="ACT_Build_Ui_Strings">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Send to UI:	First line of Alarms
				First line of Warning
				Stop reason
*)
//PackTag.hevsPackAlarm_UI.uiTextAlarmOne := 'Complete with first Alarm';
BuildUiString := DINT_TO_STRING(PackTag.Admin.Alarm[0].ID);
BuildUiString := CONCAT(BuildUiString, ' ');
BuildUiString := CONCAT(BuildUiString, PackTag.Admin.Alarm[0].Message);
BuildUiString := CONCAT(BuildUiString, ' ');
BuildUiString := CONCAT(BuildUiString, DINT_TO_STRING(PackTag.Admin.Alarm[0].Category));
BuildUiString := CONCAT(BuildUiString, ' ');
BuildUiString := CONCAT(BuildUiString, DT_TO_STRING(PackTag.Admin.Alarm[0].DateTime));
PackTag.hevsPackAlarm_UI.uiTextAlarmOne := BuildUiString; 


BuildUiString := DINT_TO_STRING(PackTag.Admin.Warning[0].ID);
BuildUiString := CONCAT(BuildUiString, ' ');
BuildUiString := CONCAT(BuildUiString, PackTag.Admin.Warning[0].Message);
BuildUiString := CONCAT(BuildUiString, ' ');
BuildUiString := CONCAT(BuildUiString, DINT_TO_STRING(PackTag.Admin.Warning[0].Category));
BuildUiString := CONCAT(BuildUiString, ' ');
BuildUiString := CONCAT(BuildUiString, DT_TO_STRING(PackTag.Admin.Warning[0].DateTime));
PackTag.hevsPackAlarm_UI.uiTextWarningOne := BuildUiString;

BuildUiString := DINT_TO_STRING(PackTag.Admin.StopReason.ID);
BuildUiString := CONCAT(BuildUiString, ' ');
BuildUiString := CONCAT(BuildUiString, PackTag.Admin.StopReason.Message);
BuildUiString := CONCAT(BuildUiString, ' ');
BuildUiString := CONCAT(BuildUiString, DINT_TO_STRING(PackTag.Admin.StopReason.Category));
BuildUiString := CONCAT(BuildUiString, ' ');
BuildUiString := CONCAT(BuildUiString, DT_TO_STRING(PackTag.Admin.StopReason.DateTime));
PackTag.hevsPackAlarm_UI.uiTextStopReason := BuildUiString;

</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>4d0e9839-f44e-4626-87d2-794d0ab9bc82</ObjectId>
                    </data>
                  </addData>
                </action>
              </actions>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Call some alarms for test
*) 
fbSetAlarm_0(// Bit activation of Alarm and Ack
			 bSetAlarm := PackTag.hevsPackAlarm_UI.uiSetAlarm_0,
	         bAckAlarmTrig := PackTag.hevsPackAlarm_UI.uiAckAlarm_0,
			 // Alarm Parameters
			 ID := 5,
	         Value := 35,
	         Message := 'Abort 4, E-Stop',
	         Category := E_EventCategory.Abort,
			 // Reference to plc time from PackTag
			 plcDateTimePack	:= PackTag.Admin.PLCDateTime,
			 // Link to PackTag Admin
	         stAdminAlarm := PackTag.Admin.Alarm,
			 stAdminAlarmHistory := PackTag.Admin.AlarmHistory);
			 
fbSetAlarm_1(bSetAlarm := PackTag.hevsPackAlarm_UI.uiSetAlarm_1,
	         bAckAlarmTrig := PackTag.hevsPackAlarm_UI.uiAckAlarm_1,
			 ID := 6,
	         Value := 36,
	         Message := 'Stop 3, Motor Hot',
	         Category := E_EventCategory.Stop,
			 // Reference to plc time from PackTag
			 plcDateTimePack	:= PackTag.Admin.PLCDateTime,
			 // Link to PackTag Admin
	         stAdminAlarm := PackTag.Admin.Alarm,
			 stAdminAlarmHistory := PackTag.Admin.AlarmHistory);


fbSetAlarm_2(bSetAlarm := PackTag.hevsPackAlarm_UI.uiSetAlarm_2,
	         bAckAlarmTrig := PackTag.hevsPackAlarm_UI.uiAckAlarm_2,
			 ID := 7,
	         Value := 37,
	         Message := 'Hold 2, Gripper not closed',
	         Category := E_EventCategory.Hold,
			 // Reference to plc time from PackTag
			 plcDateTimePack	:= PackTag.Admin.PLCDateTime,
			 // Link to PackTag Admin
	         stAdminAlarm := PackTag.Admin.Alarm,
			 stAdminAlarmHistory := PackTag.Admin.AlarmHistory);	

(*
	Call some warnings for test
*)
fbSetWarning_0(bSetWarning := PackTag.hevsPackAlarm_UI.uiSetWarning_0,
	           bAckWarningTrig := PackTag.hevsPackAlarm_UI.uiAckWarning_0,
			   // Warning Parameters
			   ID := 1,
	           Value := 31,
	           Message := 'Warning 0, Door Open',
	           Category := E_EventCategory.Warning,
			   // Reference to plc time from PackTag
			   plcDateTimePack	:= PackTag.Admin.PLCDateTime,
			   // Link to PackTag Admin
	           stAdminWarning := PackTag.Admin.Warning);
			 
fbSetWarning_1(bSetWarning := PackTag.hevsPackAlarm_UI.uiSetWarning_1,
	           bAckWarningTrig := PackTag.hevsPackAlarm_UI.uiAckWarning_1,
			   // Warning Parameters
			   ID := 2,
	           Value := 32,
	           Message := 'Warning 1, Loaded',
	           Category := E_EventCategory.Warning,
			   // Reference to plc time from PackTag
			   plcDateTimePack	:= PackTag.Admin.PLCDateTime,
			   // Link to PackTag Admin
	           stAdminWarning := PackTag.Admin.Warning);


fbSetWarning_2(bSetWarning := PackTag.hevsPackAlarm_UI.uiSetWarning_2,
	           bAckWarningTrig := PackTag.hevsPackAlarm_UI.uiAckWarning_2,
			   // Warning Parameters
			   ID := 3,
	           Value := 33,
	           Message := 'Warning 3, Finished',
	           Category := E_EventCategory.Warning,
			   // Reference to plc time from PackTag
			   plcDateTimePack	:= PackTag.Admin.PLCDateTime,
			   // Link to PackTag Admin
	           stAdminWarning := PackTag.Admin.Warning);						 

// Display first evant in UI in string format.
// Could add History too.
ACT_Build_Ui_Strings();


			 		 
</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>09683879-db5b-4678-82e2-5b2fac3761e1</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_PackStatistic" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="Enable">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </inputVars>
                <inOutVars>
                  <variable name="plcCurrentTime_s">
                    <type>
                      <UDINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> E.g from PackTag.hevsPackTime.Local_date_time_seconds</xhtml>
                    </documentation>
                  </variable>
                  <variable name="unitCurrentMode">
                    <type>
                      <derived name="E_PackModes" />
                    </type>
                  </variable>
                  <variable name="unitCurrentState">
                    <type>
                      <derived name="E_PackState" />
                    </type>
                  </variable>
                  <variable name="unitAdmin">
                    <type>
                      <derived name="HEVS_PackTag_Admin" />
                    </type>
                  </variable>
                </inOutVars>
                <outputVars>
                  <variable name="Active">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="trigModeTimeCurrent">
                    <type>
                      <derived name="R_TRIG" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Detext State / Mode change</xhtml>
                    </documentation>
                  </variable>
                  <variable name="trigStateTimeCurrent">
                    <type>
                      <derived name="R_TRIG" />
                    </type>
                  </variable>
                  <variable name="memCurrentMode">
                    <type>
                      <derived name="E_PackModes" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackModes.Invalid" />
                    </initialValue>
                  </variable>
                  <variable name="memCurrentState">
                    <type>
                      <derived name="E_PackState" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackState.eUndefined" />
                    </initialValue>
                  </variable>
                  <variable name="timeModeAtTrigger_s">
                    <type>
                      <UDINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Start time at trigger to compute current</xhtml>
                    </documentation>
                  </variable>
                  <variable name="timeStateAtTrigger_s">
                    <type>
                      <UDINT />
                    </type>
                  </variable>
                  <variable name="bProgramStarted">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="timeProgramStarted_s">
                    <type>
                      <UDINT />
                    </type>
                  </variable>
                  <variable name="getMemCumTimeMode">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Get Time In CumulativeTime for Mode and or state</xhtml>
                    </documentation>
                  </variable>
                  <variable name="getMemCumTimeModeState">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 30
	
	This Function Block compute time statistics
</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Enable THEN
	trigModeTimeCurrent(clk := (unitCurrentMode &lt;&gt; memCurrentMode));
	trigStateTimeCurrent(clk := (unitCurrentState &lt;&gt; memCurrentState));
	
	IF trigModeTimeCurrent.Q THEN
		timeModeAtTrigger_s := plcCurrentTime_s;
		memCurrentMode := unitCurrentMode;
		// Get Stored value to compute new cummulative time.
		getMemCumTimeMode := unitAdmin.CumulativeTime[0].ModeStateTimes[unitCurrentMode].Mode;
	END_IF
	
	IF trigStateTimeCurrent.Q THEN
		timeStateAtTrigger_s := plcCurrentTime_s;
		memCurrentState := unitCurrentState;
	END_IF
	
	// If mode or state changed
	IF trigModeTimeCurrent.Q  OR
	   trigStateTimeCurrent.Q THEN
	   getMemCumTimeModeState := unitAdmin.CumulativeTime[0].ModeStateTimes[unitCurrentMode].State[memCurrentState];
	END_IF
	
	IF NOT bProgramStarted THEN
		bProgramStarted := TRUE;
		timeProgramStarted_s := plcCurrentTime_s;
	END_IF
	
	unitAdmin.ModeTimeCurrent := UDINT_TO_DINT(plcCurrentTime_s - timeModeAtTrigger_s);
	
	unitAdmin.StateTimeCurrent := UDINT_TO_DINT(plcCurrentTime_s - timeStateAtTrigger_s);
	
	// Default for [*] time from start program
	// No retain, that is number of Sec since last restart.
	unitAdmin.CumulativeTime[0].AccTimeSinceReset := UDINT_TO_DINT(plcCurrentTime_s - timeProgramStarted_s);
	
	// Minimum protection in case of unitCurrentMode exceed 
	//	HEVS_PackTag_GVL.C_MAXMODSTATESTIMES
	IF unitCurrentMode &lt;= HEVS_PackTag_GVL.C_MAXMODSTATESTIMES THEN
		// getMemCumTimeMode is set only at trigger change mode
		unitAdmin.CumulativeTime[0].ModeStateTimes[unitCurrentMode].Mode := getMemCumTimeMode + unitAdmin.ModeTimeCurrent;
	END_IF
	
	// Minimum protection in case of unitCurrentMode exceed 
	//	HEVS_PackTag_GVL.C_MAXMODSTATESTIMES
	// 	HEVS_PackTag_GVL.C_MAXSTATES
	IF unitCurrentMode &lt;= HEVS_PackTag_GVL.C_MAXMODSTATESTIMES AND
	   unitCurrentState &lt;= HEVS_PackTag_GVL.C_MAXSTATES        THEN
		// getMemCumTimeModeState is set only at trigger change of mode OR state 
		unitAdmin.CumulativeTime[0].ModeStateTimes[unitCurrentMode].State[unitCurrentState] := getMemCumTimeModeState +  unitAdmin.StateTimeCurrent;
	END_IF
	
	Active	:= FALSE;
ELSE
	
	Active	:= TRUE;
END_IF



</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>c53a1014-11e2-44bb-99ff-7adc8f32ccbf</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_ModuleAxis" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="resetSafePosition">
                    <type>
                      <LREAL />
                    </type>
                  </variable>
                  <variable name="absolutePosition">
                    <type>
                      <LREAL />
                    </type>
                  </variable>
                  <variable name="absolutePickStart">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="stSetParam">
                    <type>
                      <derived name="ST_SetMotionParam" />
                    </type>
                  </variable>
                </inputVars>
                <inOutVars>
                  <variable name="axisRef">
                    <type>
                      <derived name="MB_AXISIF_REF" />
                    </type>
                  </variable>
                  <variable name="Status_StateCurrent">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> has to take the PackTag Status.StateCurrent</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Status_ModeCurrent">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </inOutVars>
                <outputVars>
                  <variable name="absPositionDone">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="absIsPosition">
                    <type>
                      <LREAL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Return actual position of the axis</xhtml>
                    </documentation>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="stateLastCycie">
                    <type>
                      <derived name="E_PackState" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackState.eUndefined" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Store last cycle at the en of FB call to detect and state change
 Used to force minimum of one testSC.In = 0 and reset SC once between each SC</xhtml>
                    </documentation>
                  </variable>
                  <variable name="actualState">
                    <type>
                      <derived name="E_PackState" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackState.eAborted" />
                    </initialValue>
                  </variable>
                  <variable name="actualMode">
                    <type>
                      <derived name="E_PackModes" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackModes.Production" />
                    </initialValue>
                  </variable>
                  <variable name="init">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="testSC">
                    <type>
                      <derived name="TON" />
                    </type>
                  </variable>
                  <variable name="setSC">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> This Flag is used as result on SC State complete.</xhtml>
                    </documentation>
                  </variable>
                  <variable name="stActing">
                    <type>
                      <derived name="ST_Acting" />
                    </type>
                  </variable>
                  <variable name="mcReadActualPos">
                    <type>
                      <derived name="MC_ReadActualPosition" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">        List of Function Blocks
    </xhtml>
                    </documentation>
                  </variable>
                  <variable name="mcReadStatus">
                    <type>
                      <derived name="MC_ReadStatus" />
                    </type>
                  </variable>
                  <variable name="mcPower">
                    <type>
                      <derived name="MC_Power" />
                    </type>
                  </variable>
                  <variable name="mcMoveAbs">
                    <type>
                      <derived name="MC_MoveAbsolute" />
                    </type>
                  </variable>
                  <variable name="mcStop">
                    <type>
                      <derived name="MC_Stop" />
                    </type>
                    <initialValue>
                      <structValue>
                        <value member="Deceleration">
                          <simpleValue value="1" />
                        </value>
                      </structValue>
                    </initialValue>
                  </variable>
                  <variable name="mcReset">
                    <type>
                      <derived name="MC_Reset" />
                    </type>
                  </variable>
                  <variable name="axisAborting">
                    <type>
                      <derived name="E_AxisAborting" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> List of enum for internal states of axes</xhtml>
                    </documentation>
                  </variable>
                  <variable name="axisClearing">
                    <type>
                      <derived name="E_AxisClearing" />
                    </type>
                  </variable>
                  <variable name="axisResetting">
                    <type>
                      <derived name="E_AxisResetting" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Go to safe position</xhtml>
                    </documentation>
                  </variable>
                  <variable name="axisStarting">
                    <type>
                      <derived name="E_AxisStarting" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Go to firs corner</xhtml>
                    </documentation>
                  </variable>
                  <variable name="axisStopping">
                    <type>
                      <derived name="E_AxisStopping" />
                    </type>
                  </variable>
                  <variable name="axisExecute">
                    <type>
                      <derived name="E_AxisExecute" />
                    </type>
                  </variable>
                  <variable name="calibrationCounter">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> For motion calibration</xhtml>
                    </documentation>
                  </variable>
                  <variable name="calibrationIncrement">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 06
	
	Summary:	Used to test and simulate first version of PackMaster
                Does nothing in Waitstates
                Wait 2.5 secoond before to return SC in </xhtml>
                </documentation>
              </interface>
              <actions>
                <action name="ACT_Clearing">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Manage Clearing
*)

// actualState is actual state of Unit from:
//	PackTag.Status.StateCurrent
//
// Wait for : stActing.Clearing_SC : TRUE
// While not all units SC, actualState remains in eClearing.
//
// From PLCopen Motion, the axis at start could be
// Standstill	--&gt; Enabled
// Disabled		--&gt; Need an enable for SC
// ErrorStop	--&gt; Need a reset befoire to be enabled
IF actualState = E_PackState.eClearing THEN
	CASE axisClearing OF
		E_AxisClearing.eIdle :
			IF mcReadStatus.Standstill THEN
				axisClearing := E_AxisClearing.eEnabled;
			ELSIF mcReadStatus.ErrorStop THEN
				axisClearing := E_AxisClearing.eErrorStop;
			ELSE
				axisClearing := E_AxisClearing.eDisabled;
			END_IF
		
		E_AxisClearing.eErrorStop :
			IF mcReadStatus.Standstill THEN
				axisClearing := E_AxisClearing.eEnabled;
			ELSE
				axisClearing := E_AxisClearing.eDisabled;
			END_IF
		
		E_AxisClearing.eDisabled  :
			IF mcReadStatus.Standstill THEN
				axisClearing := E_AxisClearing.eEnabled;
			ELSIF mcReadStatus.ErrorStop THEN
				axisClearing := E_AxisClearing.eErrorStop;
			END_IF
		
		E_AxisClearing.eEnabled   :
			IF mcReadStatus.ErrorStop THEN
				axisClearing := E_AxisClearing.eErrorStop;
			END_IF
	END_CASE
	stActing.Clearing_SC := (axisClearing = E_AxisClearing.eEnabled);
ELSE
	stActing.Clearing_SC := FALSE;
	axisClearing := E_AxisClearing.eIdle; 
END_IF
</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>c736260b-1d57-4ebc-a10c-3d45f02d224a</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="ACT_Starting">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Manage Starting
*)
IF actualState = E_PackState.eStarting THEN
	CASE axisStarting OF
		E_AxisStarting.eIdle :
			axisStarting := E_AxisStarting.eMotionStarting;
			
		E_AxisStarting.eMotionStarting :
			IF mcMoveAbs.Done THEN
				axisStarting := E_AxisStarting.eMotionStartingDone;
			END_IF;
	
		E_AxisStarting.eMotionStartingDone :
			;
	
	END_CASE
	stActing.Starting_SC := (axisStarting = E_AxisStarting.eMotionStartingDone);
ELSE
	stActing.Starting_SC := FALSE;
	axisStarting := E_AxisStarting.eIdle;
END_IF</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>4de5c9e1-4d90-480f-a0c1-adc395560816</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="ACT_Execute">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Manage Execute
*)
IF (actualState = E_PackState.eExecute)  AND
   (actualMode = E_PackModes.Manual)     THEN
	CASE axisExecute OF
		E_AxisExecute.eIdle :
			axisExecute := E_AxisExecute.eSetAbsolutePosition;
			mcMoveAbs.Position := absolutePosition;
			
		E_AxisExecute.eSetAbsolutePosition :
			IF mcMoveAbs.Done THEN
				axisExecute := E_AxisExecute.eSetAbsolutePositionDone;
			END_IF;
	
		E_AxisExecute.eSetAbsolutePositionDone :
			axisExecute := E_AxisExecute.eIdle;

	END_CASE
	absPositionDone := axisExecute = E_AxisExecute.eSetAbsolutePositionDone;
ELSE
	axisExecute := E_AxisExecute.eIdle;
END_IF

IF (actualState = E_PackState.eExecute)  AND
   (actualMode = E_PackModes.Production) THEN
    mcMoveAbs.Position := absolutePosition;
	absPositionDone := mcMoveAbs.Done                                      AND 
                       (mcReadActualPos.Position - 0.1 &lt; absolutePosition) AND
                       (mcReadActualPos.Position + 0.1 &gt; absolutePosition);
END_IF</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>36985ca8-ffe5-4239-a0db-afa84fb3f3d5</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="ACT_Stopping">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Manage Stopping
*)
IF actualState = E_PackState.eStopping THEN
	CASE axisStopping OF
		E_AxisStopping.eIdle :
			IF mcReadStatus.Disabled THEN
				axisStopping := E_AxisStopping.eStopped;
			ELSIF mcReadStatus.ErrorStop THEN
				axisStopping := E_AxisStopping.eStopped;
			ELSIF mcReadStatus.Standstill THEN
				axisStopping := E_AxisStopping.eStopped;
			ELSE 
				axisStopping := E_AxisStopping.eStopping;
			END_IF
		E_AxisStopping.eStopping :
			IF mcReadStatus.Disabled THEN
				axisStopping := E_AxisStopping.eStopped;
			ELSIF mcReadStatus.ErrorStop THEN
				axisStopping := E_AxisStopping.eStopped;
			ELSIF mcReadStatus.Standstill THEN
				axisStopping := E_AxisStopping.eStopped;
			END_IF;
	
		E_AxisStopping.eStopped :
			;
	
	END_CASE
	stActing.Stopping_SC := (axisStopping = E_AxisStopping.eStopped);
ELSE
	stActing.Stopping_SC := FALSE;
	axisStopping := E_AxisStopping.eIdle;
END_IF</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>c92d7863-33a1-45b2-84f1-ec8d163bb07f</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="ACT_Aborting">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Manage Aborting
*)
IF actualState = E_PackState.eAborting THEN
	CASE axisAborting OF
		E_AxisAborting.eIdle :
			IF mcReadStatus.Disabled THEN
				axisAborting := E_AxisAborting.eDisabled;
			ELSIF mcReadStatus.ErrorStop THEN
				axisAborting := E_AxisAborting.eErrorStop;
			ELSIF mcReadStatus.Standstill THEN
				axisAborting := E_AxisAborting.eStandstill;
			ELSE 
				axisAborting := E_AxisAborting.eStopping;
			END_IF
		E_AxisAborting.eStopping :
			IF mcReadStatus.Disabled THEN
				axisAborting := E_AxisAborting.eDisabled;
			ELSIF mcReadStatus.ErrorStop THEN
				axisAborting := E_AxisAborting.eErrorStop;
			ELSIF mcReadStatus.Standstill THEN
				axisAborting := E_AxisAborting.eStandstill;
			END_IF;
	
		E_AxisAborting.eStandstill :
			IF mcReadStatus.Disabled THEN
				axisAborting := E_AxisAborting.eDisabled;
			ELSIF mcReadStatus.ErrorStop THEN
				axisAborting := E_AxisAborting.eErrorStop;
			END_IF;;
	
		E_AxisAborting.eErrorStop :
			IF mcReadStatus.Disabled THEN
				axisAborting := E_AxisAborting.eDisabled;
			ELSIF mcReadStatus.Standstill THEN
				axisAborting := E_AxisAborting.eStandstill;
			END_IF;;
	
		E_AxisAborting.eDisabled :
//			IF mcReadStatus.ErrorStop THEN
//				axisAborting := E_AxisAborting.eErrorStop;
//			END_IF		
			;
	END_CASE
	stActing.Aborting_SC := (axisAborting = E_AxisAborting.eDisabled);
ELSE
	stActing.Aborting_SC := FALSE;
	axisAborting := E_AxisAborting.eIdle;
END_IF
</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>c38d1c79-ea43-4eaf-960c-939e0d4d4d33</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="ACT_Holding">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Manage Holding
*)
IF actualState = E_PackState.eHolding THEN
	// Set to TRUE if no action requested
	stActing.Holding_SC := TRUE;
ELSE
	stActing.Holding_SC := FALSE;
END_IF
</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>8d73427c-21dc-4d03-9aab-4aa435e58cdf</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="ACT_Unholding">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Manage Unholding
*)
IF actualState = E_PackState.eUnholding THEN
	// Set to TRUE if no action requested
	stActing.Unholding_SC := TRUE;
END_IF
</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>5030c7e8-08bc-42ed-abb1-9e488c7bac80</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="ACT_Suspending">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Manage Suspending
*)
IF actualState = E_PackState.eSuspending THEN
	// Set to TRUE if no action requested
	stActing.Suspending_SC := TRUE;
END_IF</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>f0d1bad8-4252-4099-917b-786fc27d50d9</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="ACT_Unsuspending">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Manage Unsuspending
*)
IF actualState = E_PackState.eUnsuspending THEN
	// Set to TRUE if no action requested
	stActing.Unsuspending_SC := TRUE;
END_IF
</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>4565ceb4-1a19-4196-a11f-0ac98af2167e</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="ACT_Resetting">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Manage Resetting
*)
IF actualState = E_PackState.eResetting THEN
	CASE axisResetting OF
		E_AxisResetting.eIdle :
		    mcMoveAbs.Position := resetSafePosition;
			axisResetting := E_AxisResetting.eMotionInit;
			
		E_AxisResetting.eMotionInit :
			IF mcMoveAbs.Done THEN
				axisResetting := E_AxisResetting.eMotionInitDone;
			END_IF;
	
		E_AxisResetting.eMotionInitDone :
			;
	
	END_CASE
	stActing.Resetting_SC := (axisResetting = E_AxisResetting.eMotionInitDone);
ELSE
	stActing.Resetting_SC := FALSE;
	axisResetting := E_AxisResetting.eIdle;
END_IF</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>fdb3ae43-35ee-4d28-8ea8-4bc52650a9fd</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="ACT_Completing">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Manage Completing
*)
IF actualState = E_PackState.eCompleting THEN
	// Set to TRUE if no action requested
	stActing.Completing_SC := TRUE;
END_IF
</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>ec9483fc-d60e-47d5-9fe0-627e0e71e70d</ObjectId>
                    </data>
                  </addData>
                </action>
              </actions>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT init THEN
    init := TRUE;
END_IF

actualState := Status_StateCurrent;
actualMode := Status_ModeCurrent;

// State machine is implicit because transitions are not set by this FB
// That is: a CASE OF does not have place here

// Eacn State is called via and ACTion with 
//	Condition of state
//	Reset of internal state machine when not used
//	That's why, ACTion MUST not be called in a CASE..OF
//  Order of ACTion is not important, because only one should be executed 
//  In any state
// 
//	IF actualState = E_PackState.eUnsuspending THEN
	// Set to TRUE if no action requested
//	stActing.Unsuspending_SC := TRUE;
//	END_IF

ACT_Aborting();
ACT_Clearing();
ACT_Completing();
ACT_Execute();
ACT_Holding();
ACT_Resetting();
ACT_Starting();
ACT_Stopping();
ACT_Suspending();
ACT_Unholding();
ACT_Unsuspending();

(**********************************************************************************************************************
	Axis
**********************************************************************************************************************)
mcReadStatus(Axis := axisRef,
		     Enable := TRUE);

mcReadActualPos(Axis := axisRef,
                Enable := TRUE,
                Position =&gt; absIsPosition);

mcPower(Axis := axisRef,
		Enable := NOT (actualState = E_PackState.eAborted) 		  AND
 				  // In aborting, do not disable while stopping
				  NOT ((actualState = E_PackState.eAborting) AND
                       NOT (axisAborting = E_AxisAborting.eStopping)) AND
				  // E_AxisClearing.eErrorStop should be possible
				  // if actualState = E_PackState.eClearing
				  NOT (axisClearing = E_AxisClearing.eErrorStop));

mcStop(Axis := axisRef,
	   // Stop in case of Stopping
	   // Stop in case of Aborting (before to Disable
	   Deceleration := stSetParam.rDeceleration_m_s2,	   		
       Execute := (axisStopping = E_AxisStopping.eStopping) OR
                  (axisAborting = E_AxisAborting.eStopping));

mcReset(Axis := axisRef,
        Execute := (axisClearing = E_AxisClearing.eErrorStop) OR
                    axisAborting = E_AxisAborting.eErrorStop);

mcMoveAbs(Axis := axisRef,
          Velocity := stSetParam.rVelocity_m_s,
          Acceleration := stSetParam.rAcceleration_m_s2,
          Deceleration := stSetParam.rDeceleration_m_s2,
          Jerk := stSetParam.rJerk_m_s3); 
		  
mcMoveAbs.Execute := (axisExecute = E_AxisExecute.eSetAbsolutePosition) OR
					 (axisResetting = E_AxisResetting.eMotionInit) 		OR
					 (axisStarting = E_AxisStarting.eMotionStarting)    OR
					 absolutePickStart;
(*
	Manage State Complete at the end of the Function Block
*)
			
// For test of State Machine, we use a timer.
// Its allow to have some time to visualise it
// We should remove this timer in production version
testSC(IN := stActing.Clearing_SC 		OR
             stActing.Starting_SC      	OR
             stActing.Execute_SC       	OR
             stActing.Stopping_SC      	OR
             stActing.Aborting_SC      	OR
             stActing.Holding_SC       	OR
             stActing.Unholding_SC     	OR
             stActing.Suspending_SC		OR
             stActing.Unsuspending_SC	OR
             stActing.Resetting_SC     	OR
             stActing.Completing_SC,
        PT := T#2500MS); 

// State Complete if setSC is TRUE,
setSC := testSC.Q AND (stateLastCycie = actualState);

// This Statement MUST be written AFTER evaluation of setSC
stateLastCycie := actualState;


</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                  <Property name="SC" ObjectId="628685b2-3ccb-474c-9d90-515e61935317">
                    <interface>
                      <returnType>
                        <BOOL />
                      </returnType>
                      <Attributes>
                        <Attribute Name="monitoring" Value="variable" />
                      </Attributes>
                    </interface>
                    <GetAccessor>
                      <interface>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                            <Attributes>
                              <Attribute Name="monitoring" Value="variable" />
                            </Attributes>
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">SC := setSC;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </GetAccessor>
                    <addData />
                  </Property>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>2b7a5db6-e170-4317-aa53-214ae5018204</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="PRG_Process" pouType="program">
              <interface>
                <localVars>
                  <variable name="bStartAbsolutePosition">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">*********************************************************************************************************************
    	YOUR VARIABLES HERE
	*********************************************************************************************************************</xhtml>
                    </documentation>
                  </variable>
                  <variable name="bIdle">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="stSetParam">
                    <type>
                      <derived name="ST_SetMotionParam" />
                    </type>
                    <initialValue>
                      <structValue>
                        <value member="rVelocity_m_s">
                          <simpleValue value="0.2" />
                        </value>
                        <value member="rAcceleration_m_s2">
                          <simpleValue value="0.5" />
                        </value>
                        <value member="rDeceleration_m_s2">
                          <simpleValue value="0.5" />
                        </value>
                        <value member="rJerk_m_s3">
                          <simpleValue value="1" />
                        </value>
                      </structValue>
                    </initialValue>
                  </variable>
                  <variable name="idInList_XYZ">
                    <type>
                      <UINT />
                    </type>
                    <initialValue>
                      <simpleValue value="1" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Nest positions</xhtml>
                    </documentation>
                  </variable>
                  <variable name="up_Z_Position">
                    <type>
                      <LREAL />
                    </type>
                    <initialValue>
                      <simpleValue value="-10" />
                    </initialValue>
                  </variable>
                  <variable name="nestNumber">
                    <type>
                      <UINT />
                    </type>
                    <initialValue>
                      <simpleValue value="5" />
                    </initialValue>
                  </variable>
                  <variable name="arListXYZ_Offset">
                    <type>
                      <array>
                        <dimension lower="0" upper="10" />
                        <baseType>
                          <derived name="ST_XYZ_Offset" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="timerGripperOpenClose">
                    <type>
                      <derived name="TON" />
                    </type>
                  </variable>
                  <variable name="lrMoveAbs_X">
                    <type>
                      <LREAL />
                    </type>
                    <initialValue>
                      <simpleValue value="0" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Values from User Interface</xhtml>
                    </documentation>
                  </variable>
                  <variable name="lrMoveAbs_Y">
                    <type>
                      <LREAL />
                    </type>
                    <initialValue>
                      <simpleValue value="0" />
                    </initialValue>
                  </variable>
                  <variable name="lrMoveAbs_Z">
                    <type>
                      <LREAL />
                    </type>
                    <initialValue>
                      <simpleValue value="100" />
                    </initialValue>
                  </variable>
                  <variable name="eManualJog">
                    <type>
                      <derived name="E_ManualJog" />
                    </type>
                  </variable>
                  <variable name="eUnitMove">
                    <type>
                      <derived name="E_UnitMoveForPickAndPlace" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_UnitMoveForPickAndPlace.Idle" />
                    </initialValue>
                  </variable>
                  <variable name="uliCount">
                    <type>
                      <ULINT />
                    </type>
                  </variable>
                  <variable name="bInitDone">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="fbModuleAxis_X">
                    <type>
                      <derived name="FB_ModuleAxis" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">		Pack Partial state machine
	</xhtml>
                    </documentation>
                  </variable>
                  <variable name="fbModuleAxis_Y">
                    <type>
                      <derived name="FB_ModuleAxis" />
                    </type>
                  </variable>
                  <variable name="fbModuleAxis_Z">
                    <type>
                      <derived name="FB_ModuleAxis" />
                    </type>
                  </variable>
                  <variable name="testMyReal_1">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="testMyReal_2">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="xOneStep">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> for debug</xhtml>
                    </documentation>
                  </variable>
                  <variable name="xEnableStepByStep">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="xDisableStepByStop">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="xStepByStepMode">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="xNextStepEnable">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="rTrigNextStep">
                    <type>
                      <derived name="R_TRIG" />
                    </type>
                  </variable>
                  <variable name="uliStepCounter">
                    <type>
                      <ULINT />
                    </type>
                  </variable>
                </localVars>
                <localVars constant="true">
                  <variable name="C_X_StartingPosition">
                    <type>
                      <LREAL />
                    </type>
                    <initialValue>
                      <simpleValue value="-199" />
                    </initialValue>
                  </variable>
                  <variable name="C_Y_StartingPosition">
                    <type>
                      <LREAL />
                    </type>
                    <initialValue>
                      <simpleValue value="-78" />
                    </initialValue>
                  </variable>
                  <variable name="C_Z_StartingPosition">
                    <type>
                      <LREAL />
                    </type>
                    <initialValue>
                      <simpleValue value="0" />
                    </initialValue>
                  </variable>
                  <variable name="C_Gripper_Open">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="TRUE" />
                    </initialValue>
                  </variable>
                  <variable name="C_Gripper_Close">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Projet No: PW Move Absolute
	Author:		Cedric Lenoir
	Date:		2024 April 02
	
	Summary:	Template of a program using PLCopen on partial Pack State
	            Use a Cyclic Setpoint for motion in Pack Execute.</xhtml>
                </documentation>
              </interface>
              <actions>
                <action name="ACT_OneUnitPick">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Execute Sequence
*)
timerGripperOpenClose(in := (eUnitMove = E_UnitMoveForPickAndPlace.CloseGripper)     OR
	                        (eUnitMove = E_UnitMoveForPickAndPlace.OpenGripperPlace),
					  PT := T#1000MS);


IF xEnableStepByStep THEN
	xEnableStepByStep := FALSE;
	xStepByStepMode := TRUE;
END_IF
IF xDisableStepByStop THEN
	xDisableStepByStop := FALSE;
	xStepByStepMode := FALSE;
END_IF
	
rTrigNextStep(CLk := xOneStep);
IF NOT xStepByStepMode THEN
	xNextStepEnable := TRUE;
ELSE
	xNextStepEnable := rTrigNextStep.Q;
END_IF
IF rTrigNextStep.Q THEN
	xOneStep := FALSE;
	uliStepCounter := uliStepCounter + 1;
END_IF 					  

IF (PackTag.Status.StateCurrent = E_PackState.eExecute)      AND
   (PackTag.Status.UnitModeCurrent = E_PackModes.Production) THEN
	CASE eUnitMove OF
		  E_UnitMoveForPickAndPlace.Idle:
			(* Code for Idle state *)
			IF xNextStepEnable THEN
				eUnitMove := E_UnitMoveForPickAndPlace.InitMove;
			END_IF
			
		  E_UnitMoveForPickAndPlace.InitMove:
			fbModuleAxis_X.absolutePosition := C_X_StartingPosition + arListXYZ_Offset[idInList_XYZ].X_AxisOffsetPosition;
			fbModuleAxis_Y.absolutePosition := C_Y_StartingPosition + arListXYZ_Offset[idInList_XYZ].Y_AxisOffsetPosition;
			fbModuleAxis_Z.absolutePosition := C_Z_StartingPosition + up_Z_Position;
			GVL_Abox.uaAboxInterface.uaSchunkGripper.SetOut := C_Gripper_Open;

			IF xNextStepEnable THEN
				eUnitMove := E_UnitMoveForPickAndPlace.MovePickUpOpen;
			END_IF
 
		  E_UnitMoveForPickAndPlace.MovePickUpOpen:
			(* Code for MovePickUpOpen state *)
			IF fbModuleAxis_X.absPositionDone AND
			   fbModuleAxis_Y.absPositionDone AND
			   fbModuleAxis_Z.absPositionDone AND
			   xNextStepEnable                THEN
			    GVL_Abox.uaAboxInterface.uaSchunkGripper.SetOut := C_Gripper_Open;
				eUnitMove := E_UnitMoveForPickAndPlace.IsUpPickOpen;
			END_IF

		  E_UnitMoveForPickAndPlace.IsUpPickOpen:
			(* Code for IsUpPickOpen state *)
			fbModuleAxis_X.absolutePosition := C_X_StartingPosition + arListXYZ_Offset[idInList_XYZ].X_AxisOffsetPosition;
			fbModuleAxis_Y.absolutePosition := C_Y_StartingPosition + arListXYZ_Offset[idInList_XYZ].Y_AxisOffsetPosition;
			fbModuleAxis_Z.absolutePosition := C_Z_StartingPosition + arListXYZ_Offset[idInList_XYZ].Z_AxisOffsetPosition;

			IF xNextStepEnable THEN
				eUnitMove := E_UnitMoveForPickAndPlace.MoveDownPick;
			END_IF			

		  E_UnitMoveForPickAndPlace.MoveDownPick:
			(* Code for MoveDownPick state *)
			IF fbModuleAxis_X.absPositionDone AND
			   fbModuleAxis_Y.absPositionDone AND
			   fbModuleAxis_Z.absPositionDone AND
			   xNextStepEnable                THEN
				eUnitMove := E_UnitMoveForPickAndPlace.CloseGripper;
			END_IF			

		  E_UnitMoveForPickAndPlace.CloseGripper:
			(* Code for CloseGripper state *)
			GVL_Abox.uaAboxInterface.uaSchunkGripper.SetOut := C_Gripper_Close;
			IF timerGripperOpenClose.Q THEN
				eUnitMove := E_UnitMoveForPickAndPlace.IsClosed;
			END_IF			

		  E_UnitMoveForPickAndPlace.IsClosed:
			(* Code for IsClosed state *)
			fbModuleAxis_X.absolutePosition := C_X_StartingPosition + arListXYZ_Offset[idInList_XYZ].X_AxisOffsetPosition;
			fbModuleAxis_Y.absolutePosition := C_Y_StartingPosition + arListXYZ_Offset[idInList_XYZ].Y_AxisOffsetPosition;
			fbModuleAxis_Z.absolutePosition := C_Z_StartingPosition + up_Z_Position;
			
			IF xNextStepEnable THEN
				eUnitMove := E_UnitMoveForPickAndPlace.MoveUpPickClosed;
			END_IF

		  E_UnitMoveForPickAndPlace.MoveUpPickClosed:
			(* Code for MoveUpPickClosed state *)
			IF fbModuleAxis_X.absPositionDone AND
			   fbModuleAxis_Y.absPositionDone AND
			   fbModuleAxis_Z.absPositionDone AND
			   xNextStepEnable				  THEN
				eUnitMove := E_UnitMoveForPickAndPlace.IsUpPickClosed;
					// Next next here for IsUpPickClosed
					IF idInList_XYZ &lt; nestNumber THEN
						idInList_XYZ := idInList_XYZ + 1;
					ELSE
						idInList_XYZ := 1;
					END_IF
			END_IF				

		  E_UnitMoveForPickAndPlace.IsUpPickClosed:
			(* Code for IsUpPickClosed state *)
			fbModuleAxis_X.absolutePosition := C_X_StartingPosition + arListXYZ_Offset[idInList_XYZ].X_AxisOffsetPosition;
			fbModuleAxis_Y.absolutePosition := C_Y_StartingPosition + arListXYZ_Offset[idInList_XYZ].Y_AxisOffsetPosition;
			fbModuleAxis_Z.absolutePosition := C_Z_StartingPosition + up_Z_Position;

			IF xNextStepEnable THEN
				eUnitMove := E_UnitMoveForPickAndPlace.MovePlaceUpClosed;
			END_IF;				

		  E_UnitMoveForPickAndPlace.MovePlaceUpClosed:
			(* Code for MovePlaceUpClosed state *)
			IF fbModuleAxis_X.absPositionDone AND
			   fbModuleAxis_Y.absPositionDone AND
			   fbModuleAxis_Z.absPositionDone AND 
               xNextStepEnable                THEN
				eUnitMove := E_UnitMoveForPickAndPlace.IsPlaceUpClosed;
			END_IF				

		  E_UnitMoveForPickAndPlace.IsPlaceUpClosed:
			(* Code for IsPlaceUpClosed state *)
			fbModuleAxis_X.absolutePosition := C_X_StartingPosition + arListXYZ_Offset[idInList_XYZ].X_AxisOffsetPosition;
			fbModuleAxis_Y.absolutePosition := C_Y_StartingPosition + arListXYZ_Offset[idInList_XYZ].Y_AxisOffsetPosition;
			fbModuleAxis_Z.absolutePosition := C_Z_StartingPosition + arListXYZ_Offset[idInList_XYZ].Z_AxisOffsetPosition;

			IF xNextStepEnable THEN
				eUnitMove := E_UnitMoveForPickAndPlace.MoveDownPlace;
			END_IF;					

		  E_UnitMoveForPickAndPlace.MoveDownPlace:
			(* Code for MoveDownPlace state *)
			IF fbModuleAxis_X.absPositionDone AND
			   fbModuleAxis_Y.absPositionDone AND
			   fbModuleAxis_Z.absPositionDone AND 
			   xNextStepEnable 				  THEN
				eUnitMove := E_UnitMoveForPickAndPlace.IsMoveDownPlace;
			END_IF			

		  E_UnitMoveForPickAndPlace.IsMoveDownPlace:
			(* Code for IsMoveDownPlace state *)
			GVL_Abox.uaAboxInterface.uaSchunkGripper.SetOut := C_Gripper_Open;
			
			IF xNextStepEnable THEN
				eUnitMove := E_UnitMoveForPickAndPlace.OpenGripperPlace;
			END_IF

		  E_UnitMoveForPickAndPlace.OpenGripperPlace:
			(* Code for OpenGripperPlace state *)
			IF timerGripperOpenClose.Q THEN
				eUnitMove := E_UnitMoveForPickAndPlace.IsOpenGripperPlace;
			END_IF			

		  E_UnitMoveForPickAndPlace.IsOpenGripperPlace:
			(* Code for IsOpenGripperPlace state *)
			fbModuleAxis_X.absolutePosition := C_X_StartingPosition + arListXYZ_Offset[idInList_XYZ].X_AxisOffsetPosition;
			fbModuleAxis_Y.absolutePosition := C_Y_StartingPosition + arListXYZ_Offset[idInList_XYZ].Y_AxisOffsetPosition;
			fbModuleAxis_Z.absolutePosition := C_Z_StartingPosition + up_Z_Position;

			IF xNextStepEnable THEN
				eUnitMove := E_UnitMoveForPickAndPlace.MoveUpPlace;
			END_IF			

		  E_UnitMoveForPickAndPlace.MoveUpPlace:
			(* Code for MoveUpPlace state *)
			IF fbModuleAxis_X.absPositionDone AND
			   fbModuleAxis_Y.absPositionDone AND
			   fbModuleAxis_Z.absPositionDone AND 
               xNextStepEnable                THEN
				eUnitMove := E_UnitMoveForPickAndPlace.IsMoveUpPlace;
			END_IF			

		  E_UnitMoveForPickAndPlace.IsMoveUpPlace:
			(* Code for IsMoveUpPlace state *)
			IF xNextStepEnable THEN
				eUnitMove := E_UnitMoveForPickAndPlace.Idle;
			END_IF

		  E_UnitMoveForPickAndPlace.MotionError:
			(* Code for MotionError state *)
	END_CASE
ELSE
	eUnitMove := E_UnitMoveForPickAndPlace.Idle;
END_IF</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>53ce07f3-2c18-44d8-a57f-c04e920a9726</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="ACT_ManualJog">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Execute Manual Sequence
*)
IF PackTag.Status.StateCurrent = E_PackState.eExecute 	 AND
   (PackTag.Status.UnitModeCurrent = E_PackModes.Manual) THEN
	CASE eManualJog OF
	E_ManualJog.eIdle :
		IF PackTag.Status.UnitModeCurrent = E_PackModes.Manual THEN
			eManualJog := E_ManualJog.eNextMove;
		END_IF
		
	E_ManualJog.eNextMove :
		fbModuleAxis_Z.absolutePosition := lrMoveAbs_Z;
		eManualJog := E_ManualJog.eMove_Z;
		
	E_ManualJog.eMove_Z :
		IF fbModuleAxis_Z.absPositionDone THEN
			bStartAbsolutePosition := FALSE;
			eManualJog := E_ManualJog.eMove_Z_Done;
		END_IF
		
	E_ManualJog.eMove_Z_Done :;
		fbModuleAxis_X.absolutePosition := lrMoveAbs_X;
		eManualJog := E_ManualJog.eMove_X;
		
	E_ManualJog.eMove_X :;
		IF fbModuleAxis_X.absPositionDone THEN
			eManualJog := E_ManualJog.eMove_X_Done;
		END_IF
		
	E_ManualJog.eMove_X_Done :;
		fbModuleAxis_Y.absolutePosition := lrMoveAbs_Y;
		eManualJog := E_ManualJog.eMove_Y;
		
	E_ManualJog.eMove_Y :;
		IF fbModuleAxis_Y.absPositionDone THEN
			eManualJog := E_ManualJog.eMove_Y_Done;
		END_IF
		
	E_ManualJog.eMove_Y_Done	:;
		eManualJog := E_ManualJog.eIdle;
	END_CASE
ELSE
	eManualJog := E_ManualJog.eIdle;
END_IF</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>743b6ec3-e840-47b4-9142-de2fde427477</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="ACT_InitListOfOffset">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">up_Z_Position := -10;
nestNumber := 10;

arListXYZ_Offset[0].X_AxisOffsetPosition := 0;
arListXYZ_Offset[0].Y_AxisOffsetPosition := 0;
arListXYZ_Offset[0].Z_AxisOffsetPosition := 0;

arListXYZ_Offset[1].X_AxisOffsetPosition := 0;
arListXYZ_Offset[1].Y_AxisOffsetPosition := 0;
arListXYZ_Offset[1].Z_AxisOffsetPosition := -145;

arListXYZ_Offset[2].X_AxisOffsetPosition := 0;
arListXYZ_Offset[2].Y_AxisOffsetPosition := 40;
arListXYZ_Offset[2].Z_AxisOffsetPosition := -145;

arListXYZ_Offset[3].X_AxisOffsetPosition := 0;
arListXYZ_Offset[3].Y_AxisOffsetPosition := 80;
arListXYZ_Offset[3].Z_AxisOffsetPosition := -145;

arListXYZ_Offset[4].X_AxisOffsetPosition := 0;
arListXYZ_Offset[4].Y_AxisOffsetPosition := 120;
arListXYZ_Offset[4].Z_AxisOffsetPosition := -145;

arListXYZ_Offset[5].X_AxisOffsetPosition := 0;
arListXYZ_Offset[5].Y_AxisOffsetPosition := 160;
arListXYZ_Offset[5].Z_AxisOffsetPosition := -145;

arListXYZ_Offset[6].X_AxisOffsetPosition := 80;
arListXYZ_Offset[6].Y_AxisOffsetPosition := 80;
arListXYZ_Offset[6].Z_AxisOffsetPosition := -145;

arListXYZ_Offset[7].X_AxisOffsetPosition := 80;
arListXYZ_Offset[7].Y_AxisOffsetPosition := 40;
arListXYZ_Offset[7].Z_AxisOffsetPosition := -145;

arListXYZ_Offset[8].X_AxisOffsetPosition := 80;
arListXYZ_Offset[8].Y_AxisOffsetPosition := 80;
arListXYZ_Offset[8].Z_AxisOffsetPosition := -145;

arListXYZ_Offset[9].X_AxisOffsetPosition := 80;
arListXYZ_Offset[9].Y_AxisOffsetPosition := 120;
arListXYZ_Offset[9].Z_AxisOffsetPosition := -145;

arListXYZ_Offset[10].X_AxisOffsetPosition := 80;
arListXYZ_Offset[10].Y_AxisOffsetPosition := 160;
arListXYZ_Offset[10].Z_AxisOffsetPosition := -145;</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>3eae71af-a676-48d3-ab76-0b239f00df40</ObjectId>
                    </data>
                  </addData>
                </action>
              </actions>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">(* For test only *)
IF NOT bInitDone THEN
	bInitDone := TRUE;
	ACT_InitListOfOffset();
END_IF
testMyReal_2 := testMyReal_1;

(*
	Clearing
	Reset lrMoveAbs_Z lrMoveAbs_Y and lrMoveAbs_X
*)
IF PackTag.Status.StateCurrent = E_PackState.eClearing THEN
	lrMoveAbs_X := C_X_StartingPosition;
	lrMoveAbs_Y := C_Y_StartingPosition;
	lrMoveAbs_Z := C_Z_StartingPosition;
	
	GVL_Abox.uaAboxInterface.uaSchunkGripper.SetOut := TRUE;
END_IF

ACT_OneUnitPick();
ACT_ManualJog();

fbModuleAxis_X(axisRef := GVL_AxisDefines.X_Axis,
			  // Keep actual position of X while resetting.
			  resetSafePosition := fbModuleAxis_X.absIsPosition,
			  // absolutePosition				: LREAL;
			  absolutePickStart := eUnitMove = E_UnitMoveForPickAndPlace.MovePickUpOpen 	OR
								   eUnitMove = E_UnitMoveForPickAndPlace.MoveDownPick 		OR
								   eUnitMove = E_UnitMoveForPickAndPlace.MoveUpPickClosed 	OR
								   eUnitMove = E_UnitMoveForPickAndPlace.MovePlaceUpClosed	OR
								   eUnitMove = E_UnitMoveForPickAndPlace.MoveDownPlace 		OR
								   eUnitMove = E_UnitMoveForPickAndPlace.MoveUpPlace,
			  stSetParam := stSetParam,
			  Status_ModeCurrent := PackTag.Status.UnitModeCurrent,
			  Status_StateCurrent := PackTag.Status.StateCurrent);
			  
fbModuleAxis_Y(axisRef := GVL_AxisDefines.Y_Axis,
			  // Keep actual position of X while resetting.
			  resetSafePosition := fbModuleAxis_Y.absIsPosition,
			  // absolutePosition				: LREAL;
			  absolutePickStart := eUnitMove = E_UnitMoveForPickAndPlace.MovePickUpOpen 	OR
								   eUnitMove = E_UnitMoveForPickAndPlace.MoveDownPick 		OR
								   eUnitMove = E_UnitMoveForPickAndPlace.MoveUpPickClosed 	OR
								   eUnitMove = E_UnitMoveForPickAndPlace.MovePlaceUpClosed	OR
								   eUnitMove = E_UnitMoveForPickAndPlace.MoveDownPlace 		OR
								   eUnitMove = E_UnitMoveForPickAndPlace.MoveUpPlace,
			  stSetParam := stSetParam,
			  Status_ModeCurrent := PackTag.Status.UnitModeCurrent,
			  Status_StateCurrent := PackTag.Status.StateCurrent);

fbModuleAxis_Z(axisRef := GVL_AxisDefines.Z_Axis,
			  resetSafePosition := 100,
			  // absolutePosition				: LREAL;
			  absolutePickStart := eUnitMove = E_UnitMoveForPickAndPlace.MovePickUpOpen 	OR
								   eUnitMove = E_UnitMoveForPickAndPlace.MoveDownPick 		OR
								   eUnitMove = E_UnitMoveForPickAndPlace.MoveUpPickClosed 	OR
								   eUnitMove = E_UnitMoveForPickAndPlace.MovePlaceUpClosed	OR
								   eUnitMove = E_UnitMoveForPickAndPlace.MoveDownPlace 		OR
								   eUnitMove = E_UnitMoveForPickAndPlace.MoveUpPlace,
			  stSetParam := stSetParam,			  
			  Status_ModeCurrent := PackTag.Status.UnitModeCurrent,
			  Status_StateCurrent := PackTag.Status.StateCurrent);

PRG_PackModule_Template(Status_StateCurrent := PackTag.Status.StateCurrent);			  </xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>b7ba01cf-22f6-45c0-a794-f5960a162608</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_BoxModeInterface" pouType="functionBlock">
              <interface>
                <inOutVars>
                  <variable name="virtualButtonAndSignal">
                    <type>
                      <derived name="UA_HMIVirtualButtonsAndSignals" />
                    </type>
                  </variable>
                  <variable name="Command_UnitMode">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Command_UnnitModeChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Status_StateCurrent">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </inOutVars>
                <localVars>
                  <variable name="modeState">
                    <type>
                      <derived name="E_PackModes" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackModes.Invalid" />
                    </initialValue>
                  </variable>
                  <variable name="modeStringState">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'Invalid Mode'" />
                    </initialValue>
                  </variable>
                  <variable name="statecurrent">
                    <type>
                      <derived name="E_PackState" />
                    </type>
                  </variable>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">statecurrent := Status_StateCurrent;
Command_UnnitModeChangeRequest := TRUE;	// UnitModeChangeRequest can be managed depending on defined conditions (the user can modify them). It will allow a mode change if TRUE.


(*
 	Case to define what value will UnitCmd take depending on buttonState state.
*)
CASE statecurrent OF 
		
	E_PackState.eAborted : 
		IF virtualButtonAndSignal.In_VirtualManual THEN
			modeState := E_PackModes.Manual;
			modeStringState := 'Manual';
		ELSIF virtualButtonAndSignal.In_VirtualAuto THEN
			modeState := E_PackModes.Production;
			modeStringState := 'Production';
		END_IF

	E_PackState.eStopped :
		IF virtualButtonAndSignal.In_VirtualManual THEN
			modeState := E_PackModes.Manual;
			modeStringState := 'Manual';
		ELSIF virtualButtonAndSignal.In_VirtualAuto THEN
			modeState := E_PackModes.Production;
			modeStringState := 'Production';
		END_IF
		
	// More Unit modes can be defined. (look at E_PackModes)	

END_CASE

IF Command_UnnitModeChangeRequest THEN
	Command_UnitMode := modeState;
END_IF
</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>85b57aa9-5e99-4cb8-9717-35104663d687</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_BoxStateInterface" pouType="functionBlock">
              <interface>
                <inOutVars>
                  <variable name="realButtonAndSignal">
                    <type>
                      <derived name="UA_ButtonAndSignal" />
                    </type>
                  </variable>
                  <variable name="virtualButtonAndSignal">
                    <type>
                      <derived name="UA_HMIVirtualButtonsAndSignals" />
                    </type>
                  </variable>
                  <variable name="Command_CntrlCmd">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Command_CmdChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Status_StateCurrent">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </inOutVars>
                <localVars>
                  <variable name="cmdState">
                    <type>
                      <derived name="E_PackCmd" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackCmd.eUndefined" />
                    </initialValue>
                  </variable>
                  <variable name="cmdStringState">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'Command undefined'" />
                    </initialValue>
                  </variable>
                  <variable name="memoryHold">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="stateCurrent">
                    <type>
                      <derived name="E_PackState" />
                    </type>
                  </variable>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">stateCurrent := Status_StateCurrent;

(*
 	Case to define what value will CntrlCmd take depending on the Status_StateCurrent.
 	Depending on the current state, only certain commands will be allowed.
*)
CASE stateCurrent OF 
	
	E_PackState.eAborting :;	// no command can happen while aborting
	
	E_PackState.eAborted :
		IF realButtonAndSignal.In_Reset OR virtualButtonAndSignal.In_VirtualReset THEN //The Clearing will happen on a Reset so the Clear command is unused. Look at ISA-TR88.00.02-2022(It is common 
																					  // practice for Clear and Reset to be initiated using the same physical operator interface device)
			cmdState := E_PackCmd.eClear;
			cmdStringState := 'Clear';
		END_IF
		
	E_PackState.eClearing :
		IF NOT realButtonAndSignal.In_Estop OR virtualButtonAndSignal.In_VirtualAbort THEN
			cmdState := E_PackCmd.eAbort;
			cmdStringState := 'Abort';
		END_IF
	
	E_PackState.eStopped :
		IF NOT realButtonAndSignal.In_Estop OR virtualButtonAndSignal.In_VirtualAbort THEN
			cmdState := E_PackCmd.eAbort;
			cmdStringState := 'Abort';
		ELSIF realButtonAndSignal.In_Reset OR virtualButtonAndSignal.In_VirtualReset THEN
			cmdState := E_PackCmd.eReset;
			cmdStringState := 'Reset';
		END_IF
		
	E_PackState.eStopping :
		IF NOT realButtonAndSignal.In_Estop OR virtualButtonAndSignal.In_VirtualAbort THEN
			cmdState := E_PackCmd.eAbort;
			cmdStringState := 'Abort';
		END_IF
			
	E_PackState.eResetting : 
		IF NOT realButtonAndSignal.In_Estop OR virtualButtonAndSignal.In_VirtualAbort THEN
			cmdState := E_PackCmd.eAbort;
			cmdStringState := 'Abort';
		ELSIF realButtonAndSignal.In_Stop OR virtualButtonAndSignal.In_VirtualStop THEN
			cmdState := E_PackCmd.eStop;
			cmdStringState := 'Stop';
		END_IF
			
	E_PackState.eIdle :
		IF NOT realButtonAndSignal.In_Estop OR virtualButtonAndSignal.In_VirtualAbort THEN
			cmdState := E_PackCmd.eAbort;
			cmdStringState := 'Abort';
		ELSIF realButtonAndSignal.In_Stop OR virtualButtonAndSignal.In_VirtualStop THEN
			cmdState := E_PackCmd.eStop;
			cmdStringState := 'Stop';
		ELSIF realButtonAndSignal.In_Start OR virtualButtonAndSignal.In_VirtualStart THEN
			cmdState := E_PackCmd.eStart;
			cmdStringState := 'Start';
		END_IF
	
	E_PackState.eStarting :
		IF NOT realButtonAndSignal.In_Estop OR virtualButtonAndSignal.In_VirtualAbort THEN
			cmdState := E_PackCmd.eAbort;
			cmdStringState := 'Abort';
		ELSIF realButtonAndSignal.In_Stop OR virtualButtonAndSignal.In_VirtualStop THEN
			cmdState := E_PackCmd.eStop;
			cmdStringState := 'Stop';
		END_IF
		
	E_PackState.eExecute :
		IF NOT realButtonAndSignal.In_Estop OR virtualButtonAndSignal.In_VirtualAbort THEN
			cmdState := E_PackCmd.eAbort;
			cmdStringState := 'Abort';
		ELSIF realButtonAndSignal.In_Stop OR virtualButtonAndSignal.In_VirtualStop THEN
			cmdState := E_PackCmd.eStop;
			cmdStringState := 'Stop';
		ELSIF virtualButtonAndSignal.In_VirtualHold THEN
			cmdState := E_PackCmd.eHold;
			cmdStringState := 'Hold';
			memoryHold	:= TRUE;
		ELSIF (NOT GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_4) AND (NOT GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_5) AND (NOT GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_6) THEN // These buttons and sensors are only used as exemple to test.
			cmdState := E_PackCmd.eSuspend;
			cmdStringState := 'Suspend';
		ELSIF GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_1 THEN // These buttons and sensors are only used as exemple to test.
			cmdState := E_PackCmd.eComplete;
			cmdStringState := 'Complete';
		END_IF 
			
	E_PackState.eHolding :
		IF NOT realButtonAndSignal.In_Estop OR virtualButtonAndSignal.In_VirtualAbort THEN
			cmdState := E_PackCmd.eAbort;
			cmdStringState := 'Abort';
		ELSIF realButtonAndSignal.In_Stop OR virtualButtonAndSignal.In_VirtualStop THEN
			cmdState := E_PackCmd.eStop;
			cmdStringState := 'Stop';
		END_IF 
		
	E_PackState.eHeld :
		IF NOT realButtonAndSignal.In_Estop OR virtualButtonAndSignal.In_VirtualAbort THEN
			cmdState := E_PackCmd.eAbort;
			cmdStringState := 'Abort';
		ELSIF realButtonAndSignal.In_Stop OR virtualButtonAndSignal.In_VirtualStop THEN
			cmdState := E_PackCmd.eStop;
			cmdStringState := 'Stop';
		ELSIF memoryHold AND NOT virtualButtonAndSignal.In_VirtualHold THEN
			cmdState := E_PackCmd.eUnhold;
			cmdStringState	:= 'Unhold';
		END_IF 

	E_PackState.eUnholding :
		IF NOT realButtonAndSignal.In_Estop OR virtualButtonAndSignal.In_VirtualAbort THEN
			cmdState := E_PackCmd.eAbort;
			cmdStringState := 'Abort';
		ELSIF realButtonAndSignal.In_Stop OR virtualButtonAndSignal.In_VirtualStop THEN
			cmdState := E_PackCmd.eStop;
			cmdStringState := 'Stop';
		END_IF 
	
	E_PackState.eSuspending :
		IF NOT realButtonAndSignal.In_Estop OR virtualButtonAndSignal.In_VirtualAbort THEN
			cmdState := E_PackCmd.eAbort;
			cmdStringState := 'Abort';
		ELSIF realButtonAndSignal.In_Stop OR virtualButtonAndSignal.In_VirtualStop THEN
			cmdState := E_PackCmd.eStop;
			cmdStringState := 'Stop';
		END_IF 
			
	E_PackState.eSuspended :
		IF NOT realButtonAndSignal.In_Estop OR virtualButtonAndSignal.In_VirtualAbort THEN
			cmdState := E_PackCmd.eAbort;
			cmdStringState := 'Abort';
		ELSIF realButtonAndSignal.In_Stop OR virtualButtonAndSignal.In_VirtualStop THEN
			cmdState := E_PackCmd.eStop;
			cmdStringState := 'Stop';
		ELSIF GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_0 THEN // These buttons and sensors are only used as exemple to test.
			cmdState := E_PackCmd.eUnsuspend;
			cmdStringState := 'Unsuspend';
		END_IF 
		
	E_PackState.eUnsuspending :
		IF NOT realButtonAndSignal.In_Estop OR virtualButtonAndSignal.In_VirtualAbort THEN
			cmdState := E_PackCmd.eAbort;
			cmdStringState := 'Abort';
		ELSIF realButtonAndSignal.In_Stop OR virtualButtonAndSignal.In_VirtualStop THEN
			cmdState := E_PackCmd.eStop;
			cmdStringState := 'Stop';
		END_IF 
		
	E_PackState.eCompleting :
		IF NOT realButtonAndSignal.In_Estop OR virtualButtonAndSignal.In_VirtualAbort THEN
			cmdState := E_PackCmd.eAbort;
			cmdStringState := 'Abort';
		ELSIF realButtonAndSignal.In_Stop OR virtualButtonAndSignal.In_VirtualStop THEN
			cmdState := E_PackCmd.eStop;
			cmdStringState := 'Stop';
		END_IF 
			
	E_PackState.eCompleted :
		IF NOT realButtonAndSignal.In_Estop OR virtualButtonAndSignal.In_VirtualAbort THEN
			cmdState := E_PackCmd.eAbort;
			cmdStringState := 'Abort';
		ELSIF realButtonAndSignal.In_Stop OR virtualButtonAndSignal.In_VirtualStop THEN
			cmdState := E_PackCmd.eStop;
			cmdStringState := 'Stop';
		ELSIF realButtonAndSignal.In_Reset OR virtualButtonAndSignal.In_VirtualReset THEN
			cmdState := E_PackCmd.eReset;
			cmdStringState := 'Reset';
		END_IF 

END_CASE

Command_CmdChangeRequest := GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_0;	 // definition of CommandChangeRequest. If TRUE, will allow a state change to happen ( multiple conditions can be chosen for it to be TRUE, and not all states requires it TRUE to change.)
Command_CntrlCmd := cmdState;
</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>7414818b-4391-41d1-984b-52df997407ec</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_BoxStopReasonID" pouType="functionBlock">
              <interface>
                <inOutVars>
                  <variable name="Admin_StopReasonId">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Command_CntrlCmd">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="realButtonAndSignal">
                    <type>
                      <derived name="UA_ButtonAndSignal" />
                    </type>
                  </variable>
                  <variable name="virtualButtonAndSignal">
                    <type>
                      <derived name="UA_HMIVirtualButtonsAndSignals" />
                    </type>
                  </variable>
                </inOutVars>
                <localVars>
                  <variable name="StopReasonState">
                    <type>
                      <derived name="E_PackStopReasonId" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackStopReasonId.Undefined" />
                    </initialValue>
                  </variable>
                  <variable name="StopReasonStringState">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'Undefined'" />
                    </initialValue>
                  </variable>
                  <variable name="cntrlCmd">
                    <type>
                      <derived name="E_PackCmd" />
                    </type>
                  </variable>
                  <variable name="globalButtonsAndSignals">
                    <type>
                      <derived name="UA_GlobalButtonsAndSignals" />
                    </type>
                  </variable>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">cntrlCmd := Command_CntrlCmd;
globalButtonsAndSignals.physicals := realButtonAndSignal;
globalButtonsAndSignals.virtuals := virtualButtonAndSignal;

(*
 	Case to define what value will StopReasonID take depending on cntrlCmd states.
*)
CASE cntrlCmd OF 
	
	E_PackCmd.eAbort :
		IF NOT globalButtonsAndSignals.physicals.In_Estop THEN
			StopReasonState := E_PackStopReasonId.RealEstopButtonPushed;
			StopReasonStringState := 'Physical EStop Button Pushed';
		ELSIF 
			globalButtonsAndSignals.virtuals.In_VirtualAbort THEN
			StopReasonState := E_PackStopReasonId.VirtualAbortButtonPushed;
			StopReasonStringState := 'Abort Screen Button Pushed';
		END_IF

	E_PackCmd.eStop :
		IF globalButtonsAndSignals.physicals.In_Stop THEN
			StopReasonState := E_PackStopReasonId.RealStopButtonPushed;
			StopReasonStringState := 'Physical Stop Button pushed';
		ELSIF globalButtonsAndSignals.virtuals.In_VirtualStop THEN
			StopReasonState := E_PackStopReasonId.VirtualStopButtonPushed;
			StopReasonStringState := 'Virtual Stop button pushed';
		END_IF
		
	E_PackCmd.eHold :	
		IF globalButtonsAndSignals.virtuals.In_VirtualHold THEN
			StopReasonState := E_PackStopReasonId.VirtualHoldButtonPushed;
			StopReasonStringState := 'Virtual Hold button pushed';
		END_IF
		
	// More StopReasonID can be defined. (look at E_PackStopReasonId)
	
	ELSE
        StopReasonState := E_PackStopReasonId.Undefined;
        StopReasonStringState := 'Undefined';
END_CASE

Admin_StopReasonId := StopReasonState;
</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>5cd2a406-d1f0-41c2-b2dd-4c0bc6364db3</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="PRG_MapBox" pouType="program">
              <interface>
                <localVars>
                  <variable name="SoftInOut_Command_UnitModeChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">////////////////////////////////////////////////////// 
 Soft In Out signals (Mainly for TP700 UI and Pack)
//////////////////////////////////////////////////////</xhtml>
                    </documentation>
                  </variable>
                  <variable name="SoftInOut_Command_CmdChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="SoftIn_PlcCycleTime">
                    <type>
                      <BYTE />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used to check if read is running</xhtml>
                    </documentation>
                  </variable>
                  <variable name="SoftIn_HmiControlsPbManual">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> See in HW for commande push buttons
 Linked to GVL_Abox...uaHmiVirtualButtonAndSignal</xhtml>
                    </documentation>
                  </variable>
                  <variable name="SoftIn_HmiControlsPbAuto">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="SoftIn_HmiControlsPbAbort">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="SoftIn_HmiControlsPbStop">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="SoftIn_HmiControlsPbReset">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="SoftIn_HmiControlsPbStart">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="SoftIn_HmiControlsPbHold">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="SoftOut_PlcCycleTime">
                    <type>
                      <BYTE />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">////////////////////////////////////////////////////// 
 Soft Out signals (Mainly for TP700 UI and Pack)
//////////////////////////////////////////////////////</xhtml>
                    </documentation>
                  </variable>
                  <variable name="SoftOut_Idle">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Linked to GVL_Abox...uaButtonAndSignal</xhtml>
                    </documentation>
                  </variable>
                  <variable name="SoftOut_Execute">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="SoftOut_Stopped">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="SoftOut_Held">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="SoftOut_Suspended">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="SoftOut_packtag_admin_union_stopreasonid">
                    <type>
                      <derived name="HEVS_Min_PackTag_Union_Dint_FourBytesArray" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> These six (6) variables are sent to Simatic then TP700
 Linked to GVL_Abox..uaPackBox</xhtml>
                    </documentation>
                  </variable>
                  <variable name="SoftOut_packtag_admin_union_curdisabledstates">
                    <type>
                      <derived name="HEVS_Min_PackTag_Union_Dword_Dint_FourBytesArray" />
                    </type>
                  </variable>
                  <variable name="SoftOut_packtag_status_union_unitmodecurrent">
                    <type>
                      <derived name="HEVS_Min_PackTag_Union_Dint_FourBytesArray" />
                    </type>
                  </variable>
                  <variable name="SoftOut_packtag_status_union_statecurrent">
                    <type>
                      <derived name="HEVS_Min_PackTag_Union_Dint_FourBytesArray" />
                    </type>
                  </variable>
                  <variable name="SoftOut_packtag_command_union_unitmode">
                    <type>
                      <derived name="HEVS_Min_PackTag_Union_Dint_FourBytesArray" />
                    </type>
                  </variable>
                  <variable name="SoftOut_packtag_command_union_cntrlcmd">
                    <type>
                      <derived name="HEVS_Min_PackTag_Union_Dint_FourBytesArray" />
                    </type>
                  </variable>
                  <variable name="HardIn_E_Stop">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">//////////////////////////////////////////////////////
 Hardware In Out signal, (mainly linked to GVL_Abox
 GVL_Abox contains a Structure of Hardware
 Please link to GVL_Abox and not directly to Profinet 
//////////////////////////////////////////////////////</xhtml>
                    </documentation>
                  </variable>
                  <variable name="HardIn_ButtonReset">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_ButtonStart">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_ButtonStop">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLink_port7_Balluf_Data1">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLink_port7_Balluf_Data2">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLink_port7_Balluf_Data3">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port7_ContactTemp_FourBytes">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port7_Status_FourBytes">
                    <type>
                      <DWORD />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port1_O300DL_Value">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port1_O300DL_BCD1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port1_O300DL_Q">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port1_O300DL_A">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port2_O300ZL_BCD1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port2_O300ZL_Q">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port2_O300ZL_A">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port3_U300D50_Value">
                    <type>
                      <DWORD />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port3_U300D50_Scale">
                    <type>
                      <SINT />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port3_U300D50_SSC1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port3_U300D50_SSC2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port3_U300D50_Quality">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port3_U300D50_Alarm">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port3_U300D50_SSC4">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port4_U300P50_Value">
                    <type>
                      <DWORD />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port4_U300P50_Scale">
                    <type>
                      <SINT />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port4_U300P50_SSC1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port4_U300P50_SSC2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port4_U300P50_Quality">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port4_U300P50_Alarm">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port4_U300P50_SSC4">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_IOLINK_Port5_SchunkMMS22_Value">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_0_0">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_0_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_0_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_0_3">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_0_4">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_0_5">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_0_6">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_0_7">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_1_0">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_1_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_1_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_1_3">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_1_4">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_1_5">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_1_6">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_1_7">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_2_0">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_2_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_2_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_2_3">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_2_4">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_2_5">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_2_6">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_2_7">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_3_0">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_3_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_3_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_3_3">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_3_4">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_3_5">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_3_6">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardIn_BackPlane_DI_32_Input_3_7">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="IOBackPlane_AnalogInput_IW4">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="IOBackPlane_AnalogInput_IW6">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="IOBackPlane_AnalogInput_IW8">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="IOBackPlane_AnalogInput_IW10">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="IOBackPlane_AnalogInput_IW12">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="IOBackPlane_AnalogInput_IW14">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="IOBackPlane_AnalogInput_IW16">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="IOBackPlane_AnalogInput_IW18">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="HardOut_IOLink_Port6_Festo_Valve">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_0_0">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Digital Out</xhtml>
                    </documentation>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_0_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_0_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_0_3">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_0_4">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_0_5">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_0_6">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_0_7">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_1_0">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_1_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_1_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_1_3">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_1_4">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_1_5">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_1_6">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_1_7">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_2_0">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_2_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_2_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_2_3">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_2_4">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_2_5">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_2_6">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_2_7">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_3_0">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_3_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_3_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_3_3">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_3_4">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_3_5">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_3_6">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_DO_32_output_3_7">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_AO_QW4">
                    <type>
                      <WORD />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Analog Out</xhtml>
                    </documentation>
                  </variable>
                  <variable name="HardOut_BackPlane_AO_QW6">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_AO_QW8">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="HardOut_BackPlane_AO_QW10">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                  <variable name="HardIn_port7_Data1_FourBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="4" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Intermediate variables to manage WORD, DWORD and REAL values

 Used to manage Profinet bytes attribution</xhtml>
                    </documentation>
                  </variable>
                  <variable name="HardIn_port7_Data2_FourBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="4" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="HardIn_port7_Data3_FourBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="4" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="HardIn_port7_ContTemp_FourBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="4" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="HardIn_port7_Stat_FourBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="4" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="HardIn_port1_Value_TwoBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="2" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="HardIn_port3_Value_FourBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="4" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="HardIn_port3_Scale_Byte">
                    <type>
                      <BYTE />
                    </type>
                  </variable>
                  <variable name="HardIn_port4_Value_FourBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="4" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="HardIn_port4_Scale_Byte">
                    <type>
                      <BYTE />
                    </type>
                  </variable>
                  <variable name="HardIn_port5_Value_TwoBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="2" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="fourBytesDW1">
                    <type>
                      <DWORD />
                    </type>
                  </variable>
                  <variable name="fourBytesPtR1">
                    <type>
                      <pointer>
                        <baseType>
                          <REAL />
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                  <variable name="fourBytesTest">
                    <type>
                      <array>
                        <dimension lower="1" upper="4" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="fourBytesDW2">
                    <type>
                      <DWORD />
                    </type>
                  </variable>
                  <variable name="fourBytesPtR2">
                    <type>
                      <pointer>
                        <baseType>
                          <REAL />
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                  <variable name="fourBytesDW3">
                    <type>
                      <DWORD />
                    </type>
                  </variable>
                  <variable name="fourBytesPtR3">
                    <type>
                      <pointer>
                        <baseType>
                          <REAL />
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                  <variable name="fourBytesDW4">
                    <type>
                      <DWORD />
                    </type>
                  </variable>
                  <variable name="fourBytesPtR4">
                    <type>
                      <pointer>
                        <baseType>
                          <REAL />
                        </baseType>
                      </pointer>
                    </type>
                  </variable>
                  <variable name="HardIn_IW4_TwoBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="2" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Analog Input via Profinet</xhtml>
                    </documentation>
                  </variable>
                  <variable name="HardIn_IW6_TwoBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="2" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="HardIn_IW8_TwoBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="2" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="HardIn_IW10_TwoBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="2" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="HardIn_IW12_TwoBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="2" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="HardIn_IW14_TwoBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="2" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="HardIn_IW16_TwoBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="2" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="HardIn_IW18_TwoBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="2" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="HardOut_QW4_TwoBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="2" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Analog Output via Profinet</xhtml>
                    </documentation>
                  </variable>
                  <variable name="HardOut_QW6_TwoBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="2" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="HardOut_QW8_TwoBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="2" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="HardOut_QW10_TwoBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="2" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="SoftOut_UnitMode_FourBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="4" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Soft Output via Profinet</xhtml>
                    </documentation>
                  </variable>
                  <variable name="SoftOut_CntrlCmd_FourBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="4" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="SoftOut_stopReasonID_FourBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="4" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="SoftOut_CurDisabledStates_FourBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="4" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="SoftOut_UnitModeCurrent_FourBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="4" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="SoftOut_StateCurrent_FourBytes">
                    <type>
                      <array>
                        <dimension lower="1" upper="4" />
                        <baseType>
                          <BYTE />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                </localVars>
              </interface>
              <actions>
                <action name="ACT_GVL_Abox">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">///////////////////////////////////////////////////////// 
/// All GVL_Abox Links are processed in this ACTion
/////////////////////////////////////////////////////////
    (*
        Values from Profinet Station
    *)
	
	// Management of REAL and WORD values
	fourBytesDW1 := SHL(TO_DWORD(HardIn_port7_Data1_FourBytes[1]),24) OR SHL(TO_DWORD(HardIn_port7_Data1_FourBytes[2]),16) OR SHL(TO_DWORD(HardIn_port7_Data1_FourBytes[3]),8) OR (TO_DWORD(HardIn_port7_Data1_FourBytes[4]));
	fourBytesPtR1 := ADR(fourBytesDW1);
	HardIn_IOLink_port7_Balluf_Data1 := fourBytesPtR1^;
	
	fourBytesDW2 := SHL(TO_DWORD(HardIn_port7_Data2_FourBytes[1]),24) OR SHL(TO_DWORD(HardIn_port7_Data2_FourBytes[2]),16) OR SHL(TO_DWORD(HardIn_port7_Data2_FourBytes[3]),8) OR (TO_DWORD(HardIn_port7_Data2_FourBytes[4]));
	fourBytesPtR2 := ADR(fourBytesDW2);
	HardIn_IOLink_port7_Balluf_Data2 := fourBytesPtR2^;
	
	fourBytesDW3 := SHL(TO_DWORD(HardIn_port7_Data3_FourBytes[1]),24) OR SHL(TO_DWORD(HardIn_port7_Data3_FourBytes[2]),16) OR SHL(TO_DWORD(HardIn_port7_Data3_FourBytes[3]),8) OR (TO_DWORD(HardIn_port7_Data3_FourBytes[4]));
	fourBytesPtR3 := ADR(fourBytesDW3);
	HardIn_IOLink_port7_Balluf_Data3 := fourBytesPtR3^;
	
	fourBytesDW4 := SHL(TO_DWORD(HardIn_port7_ContTemp_FourBytes[1]),24) OR SHL(TO_DWORD(HardIn_port7_ContTemp_FourBytes[2]),16) OR SHL(TO_DWORD(HardIn_port7_ContTemp_FourBytes[3]),8) OR (TO_DWORD(HardIn_port7_ContTemp_FourBytes[4]));
	fourBytesPtR4 := ADR(fourBytesDW4);
	HardIn_IOLINK_Port7_ContactTemp_FourBytes := fourBytesPtR4^;
	
	HardIn_IOLINK_Port7_Status_FourBytes := SHL(TO_DWORD(HardIn_port7_Stat_FourBytes[1]),24) OR SHL(TO_DWORD(HardIn_port7_Stat_FourBytes[2]),16) OR SHL(TO_DWORD(HardIn_port7_Stat_FourBytes[3]),8) OR (TO_DWORD(HardIn_port7_Stat_FourBytes[4]));
	HardIn_IOLINK_Port1_O300DL_Value := SHL(TO_WORD(HardIn_port1_Value_TwoBytes[1]),8) OR TO_WORD((HardIn_port1_Value_TwoBytes[2]));
	HardIn_IOLINK_Port3_U300D50_Value := SHL(TO_DWORD(HardIn_port3_Value_FourBytes[1]),24) OR SHL(TO_DWORD(HardIn_port3_Value_FourBytes[2]),16) OR SHL(TO_DWORD(HardIn_port3_Value_FourBytes[3]),8) OR (TO_DWORD(HardIn_port3_Value_FourBytes[4]));
	HardIn_IOLINK_Port3_U300D50_Scale := TO_SINT(HardIn_port3_Scale_Byte);
	HardIn_IOLINK_Port4_U300P50_Value := SHL(TO_DWORD(HardIn_port4_Value_FourBytes[1]),24) OR SHL(TO_DWORD(HardIn_port4_Value_FourBytes[2]),16) OR SHL(TO_DWORD(HardIn_port4_Value_FourBytes[3]),8) OR (TO_DWORD(HardIn_port4_Value_FourBytes[4]));
	HardIn_IOLINK_Port4_U300P50_Scale := TO_SINT(HardIn_port4_Scale_Byte);
	HardIn_IOLINK_Port5_SchunkMMS22_Value := SHL(TO_WORD(HardIn_port5_Value_TwoBytes[1]),8) OR TO_WORD((HardIn_port5_Value_TwoBytes[2]));
	
	IOBackPlane_AnalogInput_IW4		:= SHL(TO_WORD(HardIn_IW4_TwoBytes[1]),8) OR TO_WORD((HardIn_IW4_TwoBytes[2]));
	IOBackPlane_AnalogInput_IW6		:= SHL(TO_WORD(HardIn_IW6_TwoBytes[1]),8) OR TO_WORD((HardIn_IW6_TwoBytes[2]));
	IOBackPlane_AnalogInput_IW8		:= SHL(TO_WORD(HardIn_IW8_TwoBytes[1]),8) OR TO_WORD((HardIn_IW8_TwoBytes[2]));
	IOBackPlane_AnalogInput_IW10	:= SHL(TO_WORD(HardIn_IW10_TwoBytes[1]),8) OR TO_WORD((HardIn_IW10_TwoBytes[2]));
	IOBackPlane_AnalogInput_IW12	:= SHL(TO_WORD(HardIn_IW12_TwoBytes[1]),8) OR TO_WORD((HardIn_IW12_TwoBytes[2]));
	IOBackPlane_AnalogInput_IW14	:= SHL(TO_WORD(HardIn_IW14_TwoBytes[1]),8) OR TO_WORD((HardIn_IW14_TwoBytes[2]));
	IOBackPlane_AnalogInput_IW16	:= SHL(TO_WORD(HardIn_IW16_TwoBytes[1]),8) OR TO_WORD((HardIn_IW16_TwoBytes[2]));
	IOBackPlane_AnalogInput_IW18	:= SHL(TO_WORD(HardIn_IW18_TwoBytes[1]),8) OR TO_WORD((HardIn_IW18_TwoBytes[2]));
	
	
    
    // Get Value from Profinet Station with UA Client Write
	GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Estop     := HardIn_E_Stop;
	GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Reset     := HardIn_ButtonReset;
	GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Start     := HardIn_ButtonStart;
	GVL_Abox.uaAboxInterface.uaButtonAndSignal.In_Stop      := HardIn_ButtonStop;
	
    // Values from Balluff accelerometer
    GVL_Abox.uaAboxInterface.uaAccelerometer.Data_1         := HardIn_IOLink_port7_Balluf_Data1;
    GVL_Abox.uaAboxInterface.uaAccelerometer.Data_2         := HardIn_IOLink_port7_Balluf_Data2;
    GVL_Abox.uaAboxInterface.uaAccelerometer.Data_3         := HardIn_IOLink_port7_Balluf_Data3;
    GVL_Abox.uaAboxInterface.uaAccelerometer.Status         := HardIn_IOLINK_Port7_Status_FourBytes;
    GVL_Abox.uaAboxInterface.uaAccelerometer.Temperature    := HardIn_IOLINK_Port7_ContactTemp_FourBytes;

    // Values from Baumer O300 DL
    GVL_Abox.uaAboxInterface.uaO300_DL_Optic.Value          := HardIn_IOLINK_Port1_O300DL_Value;                
    GVL_Abox.uaAboxInterface.uaO300_DL_Optic.A              := HardIn_IOLINK_Port1_O300DL_A;                
    GVL_Abox.uaAboxInterface.uaO300_DL_Optic.Q              := HardIn_IOLINK_Port1_O300DL_Q;                
    GVL_Abox.uaAboxInterface.uaO300_DL_Optic.BCD1           := HardIn_IOLINK_Port1_O300DL_BCD1;     

    // Values from Baumer O300 ZL                
    GVL_Abox.uaAboxInterface.uaO300_ZL_Optic.A              := HardIn_IOLINK_Port2_O300ZL_A;                
    GVL_Abox.uaAboxInterface.uaO300_ZL_Optic.Q              := HardIn_IOLINK_Port2_O300ZL_Q;                
    GVL_Abox.uaAboxInterface.uaO300_ZL_Optic.BCD1           := HardIn_IOLINK_Port2_O300ZL_BCD1;                 

    // Values from Baumer U300 D50
    GVL_Abox.uaAboxInterface.uaU300_D50_Sound.Value         := HardIn_IOLINK_Port3_U300D50_Value;  
    GVL_Abox.uaAboxInterface.uaU300_D50_Sound.A             := HardIn_IOLINK_Port3_U300D50_Alarm;  
    GVL_Abox.uaAboxInterface.uaU300_D50_Sound.Q             := HardIn_IOLINK_Port3_U300D50_Quality;  
    GVL_Abox.uaAboxInterface.uaU300_D50_Sound.Scale         := HardIn_IOLINK_Port3_U300D50_Scale;  
    GVL_Abox.uaAboxInterface.uaU300_D50_Sound.SSC1          := HardIn_IOLINK_Port3_U300D50_SSC1;  
    GVL_Abox.uaAboxInterface.uaU300_D50_Sound.SSC2          := HardIn_IOLINK_Port3_U300D50_SSC2;  
    GVL_Abox.uaAboxInterface.uaU300_D50_Sound.SSC4          := HardIn_IOLINK_Port3_U300D50_SSC4;  
	
    // Values from Baumer U300 P50
    GVL_Abox.uaAboxInterface.uaU300_P50_Sound.Value         := HardIn_IOLINK_Port4_U300P50_Value;  
    GVL_Abox.uaAboxInterface.uaU300_P50_Sound.A             := HardIn_IOLINK_Port4_U300P50_Alarm;  
    GVL_Abox.uaAboxInterface.uaU300_P50_Sound.Q             := HardIn_IOLINK_Port4_U300P50_Quality;  
    GVL_Abox.uaAboxInterface.uaU300_P50_Sound.Scale         := HardIn_IOLINK_Port4_U300P50_Scale;  
    GVL_Abox.uaAboxInterface.uaU300_P50_Sound.SSC1          := HardIn_IOLINK_Port4_U300P50_SSC1;  
    GVL_Abox.uaAboxInterface.uaU300_P50_Sound.SSC2          := HardIn_IOLINK_Port4_U300P50_SSC2;  
    GVL_Abox.uaAboxInterface.uaU300_P50_Sound.SSC4          := HardIn_IOLINK_Port4_U300P50_SSC4;  
    
    // Values from Gripper sensor
    GVL_Abox.uaAboxInterface.uaSchunk.Value                 := HardIn_IOLINK_Port5_SchunkMMS22_Value;  
	
    // Get 32 Digital Input
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_0          := HardIn_BackPlane_DI_32_Input_0_0;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_1          := HardIn_BackPlane_DI_32_Input_0_1;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_2          := HardIn_BackPlane_DI_32_Input_0_2;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_3          := HardIn_BackPlane_DI_32_Input_0_3;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_4          := HardIn_BackPlane_DI_32_Input_0_4;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_5          := HardIn_BackPlane_DI_32_Input_0_5;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_6          := HardIn_BackPlane_DI_32_Input_0_6;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_0_7          := HardIn_BackPlane_DI_32_Input_0_7;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_0          := HardIn_BackPlane_DI_32_Input_1_0;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_1          := HardIn_BackPlane_DI_32_Input_1_1;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_2          := HardIn_BackPlane_DI_32_Input_1_2;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_3          := HardIn_BackPlane_DI_32_Input_1_3;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_4          := HardIn_BackPlane_DI_32_Input_1_4;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_5          := HardIn_BackPlane_DI_32_Input_1_5;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_6          := HardIn_BackPlane_DI_32_Input_1_6;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_1_7          := HardIn_BackPlane_DI_32_Input_1_7;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_0          := HardIn_BackPlane_DI_32_Input_2_0;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_1          := HardIn_BackPlane_DI_32_Input_2_1;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_2          := HardIn_BackPlane_DI_32_Input_2_2;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_3          := HardIn_BackPlane_DI_32_Input_2_3;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_4          := HardIn_BackPlane_DI_32_Input_2_4;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_5          := HardIn_BackPlane_DI_32_Input_2_5;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_6          := HardIn_BackPlane_DI_32_Input_2_6;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_2_7          := HardIn_BackPlane_DI_32_Input_2_7;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_0          := HardIn_BackPlane_DI_32_Input_3_0;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_1          := HardIn_BackPlane_DI_32_Input_3_1;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_2          := HardIn_BackPlane_DI_32_Input_3_2;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_3          := HardIn_BackPlane_DI_32_Input_3_3;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_4          := HardIn_BackPlane_DI_32_Input_3_4;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_5          := HardIn_BackPlane_DI_32_Input_3_5;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_6          := HardIn_BackPlane_DI_32_Input_3_6;
    GVL_Abox.uaAboxInterface.uaDigitalIn.Input_3_7          := HardIn_BackPlane_DI_32_Input_3_7;
	
	// Get 8 Analog Input
	GVL_Abox.uaAboxInterface.uaAnalogIn.IW_04 := IOBackPlane_AnalogInput_IW4;
	GVL_Abox.uaAboxInterface.uaAnalogIn.IW_06 := IOBackPlane_AnalogInput_IW6;
	GVL_Abox.uaAboxInterface.uaAnalogIn.IW_08 := IOBackPlane_AnalogInput_IW8;
	GVL_Abox.uaAboxInterface.uaAnalogIn.IW_10 := IOBackPlane_AnalogInput_IW10;
	GVL_Abox.uaAboxInterface.uaAnalogIn.IW_12 := IOBackPlane_AnalogInput_IW12;
	GVL_Abox.uaAboxInterface.uaAnalogIn.IW_14 := IOBackPlane_AnalogInput_IW14;
	GVL_Abox.uaAboxInterface.uaAnalogIn.IW_16 := IOBackPlane_AnalogInput_IW16;
	GVL_Abox.uaAboxInterface.uaAnalogIn.IW_18 := IOBackPlane_AnalogInput_IW18;
	
	// Get TP700 HMI Virtual Buttons value
	GVL_Abox.uaAboxInterface.uaHmiVirtualButtonAndSignal.In_VirtualManual := SoftIn_HmiControlsPbManual;
	GVL_Abox.uaAboxInterface.uaHmiVirtualButtonAndSignal.In_VirtualAuto := SoftIn_HmiControlsPbAuto;
	GVL_Abox.uaAboxInterface.uaHmiVirtualButtonAndSignal.In_VirtualAbort := SoftIn_HmiControlsPbAbort;
	GVL_Abox.uaAboxInterface.uaHmiVirtualButtonAndSignal.In_VirtualStop := SoftIn_HmiControlsPbStop;
	GVL_Abox.uaAboxInterface.uaHmiVirtualButtonAndSignal.In_VirtualReset := SoftIn_HmiControlsPbReset;
	GVL_Abox.uaAboxInterface.uaHmiVirtualButtonAndSignal.In_VirtualStart := SoftIn_HmiControlsPbStart;
	GVL_Abox.uaAboxInterface.uaHmiVirtualButtonAndSignal.In_VirtualHold := SoftIn_HmiControlsPbHold;

    // Set ABox Hardware Visual Signals
	SoftOut_Idle		:= GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Idle;
	SoftOut_Execute 	:= GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Execute;
	SoftOut_Stopped		:= GVL_Abox.uaAboxInterface.uaButtonAndSignal.Out_Stopped;
    
    // Set Gripper value
    HardOut_IOLink_Port6_Festo_Valve := NOT GVL_Abox.uaAboxInterface.uaSchunkGripper.SetOut;
    
    // Set 32 digital outputs
    HardOut_BackPlane_DO_32_output_0_0 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_0;
    HardOut_BackPlane_DO_32_output_0_1 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_1;
    HardOut_BackPlane_DO_32_output_0_2 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_2;
    HardOut_BackPlane_DO_32_output_0_3 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_3;
    HardOut_BackPlane_DO_32_output_0_4 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_4;
    HardOut_BackPlane_DO_32_output_0_5 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_5;
    HardOut_BackPlane_DO_32_output_0_6 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_6;
    HardOut_BackPlane_DO_32_output_0_7 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_0_7;
	
    HardOut_BackPlane_DO_32_output_1_0 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_0;
    HardOut_BackPlane_DO_32_output_1_1 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_1;
    HardOut_BackPlane_DO_32_output_1_2 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_2;
    HardOut_BackPlane_DO_32_output_1_3 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_3;
    HardOut_BackPlane_DO_32_output_1_4 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_4;
    HardOut_BackPlane_DO_32_output_1_5 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_5;
    HardOut_BackPlane_DO_32_output_1_6 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_6;
    HardOut_BackPlane_DO_32_output_1_7 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_1_7;
	
    HardOut_BackPlane_DO_32_output_2_0 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_0;
    HardOut_BackPlane_DO_32_output_2_1 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_1;
    HardOut_BackPlane_DO_32_output_2_2 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_2;
    HardOut_BackPlane_DO_32_output_2_3 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_3;
    HardOut_BackPlane_DO_32_output_2_4 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_4;
    HardOut_BackPlane_DO_32_output_2_5 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_5;
    HardOut_BackPlane_DO_32_output_2_6 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_6;
    HardOut_BackPlane_DO_32_output_2_7 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_2_7;
	
    HardOut_BackPlane_DO_32_output_3_0 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_0;
    HardOut_BackPlane_DO_32_output_3_1 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_1;
    HardOut_BackPlane_DO_32_output_3_2 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_2;
    HardOut_BackPlane_DO_32_output_3_3 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_3;
    HardOut_BackPlane_DO_32_output_3_4 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_4;
    HardOut_BackPlane_DO_32_output_3_5 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_5;
    HardOut_BackPlane_DO_32_output_3_6 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_6;
    HardOut_BackPlane_DO_32_output_3_7 := GVL_Abox.uaAboxInterface.uaDigitalOut.Output_3_7;
	
	// Set 32 analog outputs
	HardOut_BackPlane_AO_QW4	:= GVL_Abox.uaAboxInterface.uaAnalogOut.QW_04;
	HardOut_QW4_TwoBytes[1] 	:= TO_BYTE(SHR(HardOut_BackPlane_AO_QW4,8));
	HardOut_QW4_TwoBytes[2] 	:= TO_BYTE(HardOut_BackPlane_AO_QW4 AND 255);
	
	HardOut_BackPlane_AO_QW6	:= GVL_Abox.uaAboxInterface.uaAnalogOut.QW_06;
	HardOut_QW6_TwoBytes[1] 	:= TO_BYTE(SHR(HardOut_BackPlane_AO_QW6,8));
	HardOut_QW6_TwoBytes[2] 	:= TO_BYTE(HardOut_BackPlane_AO_QW6 AND 255);
	
	HardOut_BackPlane_AO_QW8	:= GVL_Abox.uaAboxInterface.uaAnalogOut.QW_08;
	HardOut_QW8_TwoBytes[1] 	:= TO_BYTE(SHR(HardOut_BackPlane_AO_QW8,8));
	HardOut_QW8_TwoBytes[2] 	:= TO_BYTE(HardOut_BackPlane_AO_QW8 AND 255);
	
	HardOut_BackPlane_AO_QW10	:= GVL_Abox.uaAboxInterface.uaAnalogOut.QW_10;
	HardOut_QW10_TwoBytes[1] 	:= TO_BYTE(SHR(HardOut_BackPlane_AO_QW10,8));
	HardOut_QW10_TwoBytes[2] 	:= TO_BYTE(HardOut_BackPlane_AO_QW10 AND 255);
</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>40485c06-955d-4193-a1c7-b9f39402ff17</ObjectId>
                    </data>
                  </addData>
                </action>
              </actions>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">///////////////////////////////////////////////////////// 
/// All GVL_Abox Links are processed in this ACTion
/////////////////////////////////////////////////////////
ACT_GVL_Abox();

(*
	Values to Profinet Station
*)
SoftOut_PlcCycleTime := SoftOut_PlcCycleTime + 1;
	
// Set PackML Status, Admin and Command values
SoftOut_packtag_admin_union_stopreasonid.DintAccess	:= GVL_Abox.uaPackBox.uAdmin_union_stopreasonid.DintAccess;
SoftOut_stopReasonID_FourBytes[1] 		:= SoftOut_packtag_admin_union_stopreasonid.FourBytesArrayAccess[4];
SoftOut_stopReasonID_FourBytes[2]		:= SoftOut_packtag_admin_union_stopreasonid.FourBytesArrayAccess[3];
SoftOut_stopReasonID_FourBytes[3] 		:= SoftOut_packtag_admin_union_stopreasonid.FourBytesArrayAccess[2];
SoftOut_stopReasonID_FourBytes[4] 		:= SoftOut_packtag_admin_union_stopreasonid.FourBytesArrayAccess[1];
	
SoftOut_packtag_admin_union_curdisabledstates.DwordAccess := GVL_Abox.uaPackBox.uAdmin_union_curdisabledstates.DwordAccess;
SoftOut_CurDisabledStates_FourBytes[1] 	:= SoftOut_packtag_admin_union_curdisabledstates.FourBytesArrayAccess[4];
SoftOut_CurDisabledStates_FourBytes[2] 	:= SoftOut_packtag_admin_union_curdisabledstates.FourBytesArrayAccess[3];
SoftOut_CurDisabledStates_FourBytes[3] 	:= SoftOut_packtag_admin_union_curdisabledstates.FourBytesArrayAccess[2];
SoftOut_CurDisabledStates_FourBytes[4] 	:= SoftOut_packtag_admin_union_curdisabledstates.FourBytesArrayAccess[1];
	
SoftOut_packtag_status_union_unitmodecurrent.DintAccess := GVL_Abox.uaPackBox.uStatus_union_unitmodecurrent .DintAccess;
SoftOut_UnitModeCurrent_FourBytes[1] 	:= SoftOut_packtag_status_union_unitmodecurrent.FourBytesArrayAccess[4];
SoftOut_UnitModeCurrent_FourBytes[2] 	:= SoftOut_packtag_status_union_unitmodecurrent.FourBytesArrayAccess[3];
SoftOut_UnitModeCurrent_FourBytes[3] 	:= SoftOut_packtag_status_union_unitmodecurrent.FourBytesArrayAccess[2];
SoftOut_UnitModeCurrent_FourBytes[4] 	:= SoftOut_packtag_status_union_unitmodecurrent.FourBytesArrayAccess[1];
	
SoftOut_packtag_status_union_statecurrent.DintAccess := GVL_Abox.uaPackBox.uStatus_union_statecurrent.DintAccess;
SoftOut_StateCurrent_FourBytes[1] 		:= SoftOut_packtag_status_union_statecurrent.FourBytesArrayAccess[4];
SoftOut_StateCurrent_FourBytes[2] 		:= SoftOut_packtag_status_union_statecurrent.FourBytesArrayAccess[3];
SoftOut_StateCurrent_FourBytes[3] 		:= SoftOut_packtag_status_union_statecurrent.FourBytesArrayAccess[2];
SoftOut_StateCurrent_FourBytes[4] 		:= SoftOut_packtag_status_union_statecurrent.FourBytesArrayAccess[1];
	
SoftOut_packtag_command_union_unitmode.DintAccess := GVL_Abox.uaPackBox.uCommand_union_unitmode.DintAccess;
SoftOut_UnitMode_FourBytes[1] 			:= SoftOut_packtag_command_union_unitmode.FourBytesArrayAccess[4];
SoftOut_UnitMode_FourBytes[2] 			:= SoftOut_packtag_command_union_unitmode.FourBytesArrayAccess[3];
SoftOut_UnitMode_FourBytes[3] 			:= SoftOut_packtag_command_union_unitmode.FourBytesArrayAccess[2];
SoftOut_UnitMode_FourBytes[4] 			:= SoftOut_packtag_command_union_unitmode.FourBytesArrayAccess[1];
	
SoftOut_packtag_command_union_cntrlcmd.DintAccess := GVL_Abox.uaPackBox.uCommand_union_cntrlcmd.DintAccess ;
SoftOut_CntrlCmd_FourBytes[1] 			:= SoftOut_packtag_command_union_cntrlcmd.FourBytesArrayAccess[4];
SoftOut_CntrlCmd_FourBytes[2] 			:= SoftOut_packtag_command_union_cntrlcmd.FourBytesArrayAccess[3];
SoftOut_CntrlCmd_FourBytes[3] 			:= SoftOut_packtag_command_union_cntrlcmd.FourBytesArrayAccess[2];
SoftOut_CntrlCmd_FourBytes[4] 			:= SoftOut_packtag_command_union_cntrlcmd.FourBytesArrayAccess[1];
	
SoftInOut_Command_UnitModeChangeRequest := GVL_Abox.uaPackBox.Command_UnitModeChangeRequest;
SoftInOut_Command_CmdChangeRequest 		:= GVL_Abox.uaPackBox.Command_CmdChangeRequest;
</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>81a742c1-f168-4201-931a-c5044bbbda80</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="PRG_DeviceManager" pouType="program">
              <interface>
                <localVars>
                  <variable name="SetOpenGripper">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Gripper Pneumatic Device</xhtml>
                    </documentation>
                  </variable>
                  <variable name="SetCloseGripper">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="GetGripperSensor_mm">
                    <type>
                      <REAL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">Gripper Sensor Device</xhtml>
                    </documentation>
                  </variable>
                  <variable name="gripperSensor">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">(* Manage IO*)
gripperSensor := GVL_Abox.uaAboxInterface.uaSchunk.Value;

(*
	Gripper Pneumatic Device
*)
IF SetOpenGripper THEN
	// Reset value after receiving a message
	SetOpenGripper := FALSE;
	GVL_Abox.uaAboxInterface.uaSchunkGripper.SetOut := TRUE;
END_IF

IF SetCloseGripper THEN
	// Reset value after receiving a message
	SetCloseGripper := FALSE;
	GVL_Abox.uaAboxInterface.uaSchunkGripper.SetOut := FALSE;
END_IF

(*
	Gripper Sensor Device
*)
GetGripperSensor_mm := WORD_TO_REAL(gripperSensor) * 0.01;

</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>26905daf-c775-4a0b-b50c-54d5b79fec3f</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="PRG_PackUpdate" pouType="program">
              <interface />
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">PackTag.Status.Parameter_Lreal[1].ID := 1001;
PackTag.Status.Parameter_Lreal[1].Name := 'Axes Velocity';
PackTag.Status.Parameter_Lreal[1].Unit := 'm/s';
PackTag.Status.Parameter_Lreal[1].Value := PRG_Process.stSetParam.rVelocity_m_s;

PackTag.Status.Parameter_Lreal[2].ID := 1002;
PackTag.Status.Parameter_Lreal[2].Name := 'Axes Acceleration';
PackTag.Status.Parameter_Lreal[2].Unit := 'm/s2';
PackTag.Status.Parameter_Lreal[2].Value := PRG_Process.stSetParam.rAcceleration_m_s2;

PackTag.Status.Parameter_Lreal[3].ID := 1003;
PackTag.Status.Parameter_Lreal[3].Name := 'Axes Deceleration';
PackTag.Status.Parameter_Lreal[3].Unit := 'm/s2';
PackTag.Status.Parameter_Lreal[3].Value := PRG_Process.stSetParam.rDeceleration_m_s2;

PackTag.Status.Parameter_Lreal[4].ID := 1004;
PackTag.Status.Parameter_Lreal[4].Name := 'Axes Jerk';
PackTag.Status.Parameter_Lreal[4].Unit := 'm/s3';
PackTag.Status.Parameter_Lreal[4].Value := PRG_Process.stSetParam.rJerk_m_s3;
</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>ccd85e3e-50dc-43d5-914b-92d587f60cc5</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="PRG_PackModule_Template" pouType="program">
              <interface>
                <inOutVars>
                  <variable name="Status_StateCurrent">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> has to take the PackTag Status.StateCurrent</xhtml>
                    </documentation>
                  </variable>
                </inOutVars>
                <localVars>
                  <variable name="stateLastCycie">
                    <type>
                      <derived name="E_PackState" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackState.eUndefined" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Store last cycle at the en of FB call to detect and state change
 Used to force minimum of one testSC.In = 0 and reset SC once between each SC</xhtml>
                    </documentation>
                  </variable>
                  <variable name="actualState">
                    <type>
                      <derived name="E_PackState" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackState.eAborted" />
                    </initialValue>
                  </variable>
                  <variable name="uliLoop">
                    <type>
                      <ULINT />
                    </type>
                  </variable>
                  <variable name="init">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="testSC">
                    <type>
                      <derived name="TON" />
                    </type>
                  </variable>
                  <variable name="setSC">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> This Flag is used as result on SC State complete.</xhtml>
                    </documentation>
                  </variable>
                  <variable name="stActing">
                    <type>
                      <derived name="ST_Acting" />
                    </type>
                  </variable>
                  <variable name="LockResetting">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> For test, wait variable TRUE for resetting SC</xhtml>
                    </documentation>
                  </variable>
                </localVars>
              </interface>
              <actions>
                <action name="ACT_Aborting">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Manage Aborting
*)
IF actualState = E_PackState.eAborting THEN
	// Set to TRUE if no action requested
	stActing.Aborting_SC := TRUE;
ELSE
	stActing.Aborting_SC := FALSE;
END_IF
</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>7a257f5c-3c15-4ed7-9ad9-8c4351d4b71e</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="ACT_Clearing">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Manage Clearing
*)
IF actualState = E_PackState.eClearing THEN
	// Set to TRUE if no action requested
	stActing.Clearing_SC := TRUE;
ELSE
	stActing.Clearing_SC := FALSE;
END_IF</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>0efd517f-6538-4535-a996-211a3e4e12a2</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="ACT_Completing">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Manage Completing
*)
IF actualState = E_PackState.eCompleting THEN
	// Set to TRUE if no action requested
	stActing.Completing_SC := TRUE;
ELSE
	stActing.Completing_SC := FALSE;
END_IF
</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>8f1657d5-1ee7-428a-806b-446ac07e09e6</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="ACT_Execute">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>e9f2fe18-8738-484f-bb3b-f3c1888e9b42</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="ACT_Holding">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Manage Holding
*)
IF actualState = E_PackState.eHolding THEN
	// Set to TRUE if no action requested
	stActing.Holding_SC := TRUE;
ELSE
	stActing.Holding_SC := FALSE;
END_IF</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>44a20169-f3f2-4587-b8ed-096cc853c8c1</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="ACT_Resetting">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Manage Resetting
*)
IF actualState = E_PackState.eResetting THEN
	// Set to TRUE if no action requested
	IF NOT LockResetting THEN
		stActing.Resetting_SC := TRUE;
	ELSE
		stActing.Resetting_SC := FALSE;		
	END_IF

ELSE
	stActing.Resetting_SC := FALSE;
END_IF</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>8c970420-54e4-41d1-999c-980d856ef33e</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="ACT_Starting">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Manage Starting
*)
IF actualState = E_PackState.eStarting THEN
	// Set to TRUE if no action requested
	stActing.Starting_SC := TRUE;
ELSE
	stActing.Starting_SC := FALSE;
END_IF</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>fcff438d-f438-4fef-8cb4-88a5b5d540d2</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="ACT_Stopping">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Manage Stopping
*)
IF actualState = E_PackState.eStopping THEN
	// Set to TRUE if no action requested
	stActing.Stopping_SC := TRUE;
ELSE
	stActing.Stopping_SC := FALSE;
END_IF</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>9759f70a-746b-4576-88ba-9f190091eb8d</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="ACT_Suspending">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Manage Suspending
*)
IF actualState = E_PackState.eSuspending THEN
	// Set to TRUE if no action requested
	stActing.Suspending_SC := TRUE;
ELSE
	stActing.Suspending_SC := FALSE;
END_IF</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>48a4723a-cd3d-463d-b3ff-e9d512b93f1c</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="ACT_Unholding">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Manage Unholding
*)
IF actualState = E_PackState.eUnholding THEN
	// Set to TRUE if no action requested
	stActing.Unholding_SC := TRUE;
ELSE
	stActing.Unholding_SC := FALSE;
END_IF</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>06e70484-746a-4331-a0a7-9b83bcabac2b</ObjectId>
                    </data>
                  </addData>
                </action>
                <action name="ACT_Unsuspending">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Manage Unsuspending
*)
IF actualState = E_PackState.eUnsuspending THEN
	// Set to TRUE if no action requested
	stActing.Unsuspending_SC := TRUE;
ELSE
	stActing.Unsuspending_SC := FALSE;
END_IF</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>d8576446-8ad0-4396-9ba0-f7c730abdfdf</ObjectId>
                    </data>
                  </addData>
                </action>
              </actions>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT init THEN
    init := TRUE;
END_IF
actualState := Status_StateCurrent;

(*
	Your code here
	For code in States, modify the actions. ACT
	
	Code for mode is still not impletemented
*)

ACT_Aborting();
ACT_Clearing();
ACT_Completing();
ACT_Execute();
ACT_Holding();
ACT_Resetting();
ACT_Starting();
ACT_Stopping();
ACT_Suspending();
ACT_Unholding();
ACT_Unsuspending();

(*
	Footer, do not modify the code below.

	For test of State Machine, we use a timer.
	Its allow to have some time to visualise it
	We should remove this timer in production version
*)
testSC(IN := stActing.Clearing_SC 		OR
             stActing.Starting_SC      	OR
             stActing.Execute_SC       	OR
             stActing.Stopping_SC      	OR
             stActing.Aborting_SC      	OR
             stActing.Holding_SC       	OR
             stActing.Unholding_SC     	OR
             stActing.Suspending_SC		OR
             stActing.Unsuspending_SC	OR
             stActing.Resetting_SC     	OR
             stActing.Completing_SC,
        PT := T#500MS); 
           
// State Complete if setSC is TRUE,
setSC := testSC.Q AND (stateLastCycie = actualState);

// This Statement MUST be written AFTER evaluation of setSC
stateLastCycie := actualState;</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                  <Property name="SC" ObjectId="07773c8f-15ed-4058-97d4-b60ed94d2e47">
                    <interface>
                      <returnType>
                        <BOOL />
                      </returnType>
                    </interface>
                    <GetAccessor>
                      <interface />
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">SC := setSC;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </GetAccessor>
                    <addData />
                  </Property>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>d0205955-cd21-48f1-8aa9-6f61db831e0e</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="PRG_Student" pouType="program">
              <interface />
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml" />
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>c9f960ab-437a-4ccb-a775-9ffbb4ec0b02</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/union" handleUnknown="implementation">
            <union name="HEVS_Min_PackTag_Union_Dint_FourBytesArray">
              <variable name="DintAccess">
                <type>
                  <DINT />
                </type>
              </variable>
              <variable name="FourBytesArrayAccess">
                <type>
                  <array>
                    <dimension lower="1" upper="4" />
                    <baseType>
                      <BYTE />
                    </baseType>
                  </array>
                </type>
              </variable>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>7ba07ba7-6982-44af-943b-9da318143d1b</ObjectId>
                </data>
              </addData>
            </union>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/union" handleUnknown="implementation">
            <union name="HEVS_Min_PackTag_Union_Dword_Dint_FourBytesArray">
              <variable name="DwordAccess">
                <type>
                  <DWORD />
                </type>
              </variable>
              <variable name="DintAccess">
                <type>
                  <DINT />
                </type>
              </variable>
              <variable name="FourBytesArrayAccess">
                <type>
                  <array>
                    <dimension lower="1" upper="4" />
                    <baseType>
                      <BYTE />
                    </baseType>
                  </array>
                </type>
              </variable>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>8c82d660-cb2c-4b9d-9829-db398a9d1404</ObjectId>
                </data>
              </addData>
            </union>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/union" handleUnknown="implementation">
            <union name="U_StateBitDword">
              <variable name="dwState">
                <type>
                  <DWORD />
                </type>
              </variable>
              <variable name="boolState">
                <type>
                  <derived name="ST_PackState" />
                </type>
              </variable>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>5714f1a6-9b68-4006-a1cf-1d6f41db9c42</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 29
	
	For bit access fo DWORD States
	States Transitions and Enabled States
</xhtml>
              </documentation>
            </union>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/union" handleUnknown="implementation">
            <union name="U_ModeBitDword">
              <variable name="dwMode">
                <type>
                  <DWORD />
                </type>
              </variable>
              <variable name="boolMode">
                <type>
                  <derived name="ST_PackMode" />
                </type>
              </variable>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>c9ef1393-9d66-4dd6-a655-1325e14eab74</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 29
	
	For bit access fo DWORD Modes
</xhtml>
              </documentation>
            </union>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
            <Libraries>
              <Library Name="#IecVarAccess" Namespace="IecVarAccessLibrary" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="IecVarAccess, 3.3.1.20 (System)" />
              <Library Name="#CmpLog" Namespace="CmpLog" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="" />
              <Library Name="#BreakpointLogging" Namespace="BPLog" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Breakpoint Logging Functions, * (3S - Smart Software Solutions GmbH)" />
              <Library Name="#SysTimeRtc" Namespace="SysTimeRtc" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="SysTimeRtc, * (System)" />
              <Library Name="#SysTypes" Namespace="SysTypes" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="SysTypes, * (System)" />
              <Library Name="#CXA_DIAGNOSTICS" Namespace="CXAC_Diagnostics" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="CXAC_Diagnostics, * (Bosch Rexroth AG)" />
              <Library Name="#CXA_PLCOPEN" Namespace="CXA_PLCopen" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="CXA_PLCopen, * (Bosch Rexroth AG)" />
              <Library Name="#CXA_MOTION" Namespace="CXA_Motion" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="CXA_Motion, * (Bosch Rexroth AG)" />
              <Library Name="#CXA_MOTION_INTERFACE" Namespace="CXA_MotionInterface" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="CXA_MotionInterface, * (Bosch Rexroth AG)" />
              <Library Name="#IoStandard" Namespace="IoStandard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="true" DefaultResolution="IoStandard, 3.5.17.0 (System)" />
              <Library Name="#CXA_BASE" Namespace="CXAC_Base" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CXAC_Base, 1.18.3.0 (Bosch Rexroth AG)" />
              <Library Name="#CXA_COMMONTYPES" Namespace="CXA_CommonTypes" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CXA_CommonTypes, 1.18.1.0 (Bosch Rexroth AG)" />
              <Library Name="#CXA_UTILITIES" Namespace="CXA_Utilities" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CXA_Utilities, 1.20.1.0 (Bosch Rexroth AG)" />
              <Library Name="#Standard" Namespace="Standard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Standard, 3.5.18.0 (System)" />
              <Library Name="#3SLicense" Namespace="_3S_LICENSE" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="3SLicense, 0.0.0.0 (3S - Smart Software Solutions GmbH)" ResolverGuid="97c3b452-d9fa-4ac2-9d0c-3d420aa6d95b" />
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>f3b983b2-4e8f-4fdd-ac75-e5f58fa2f22b</ObjectId>
                </data>
              </addData>
            </Libraries>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b0264aff-d2a0-4da7-bb5e-931fd83bdeca</ObjectId>
          </data>
        </addData>
      </resource>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
      <ProjectStructure>
        <Object Name="Application" ObjectId="b0264aff-d2a0-4da7-bb5e-931fd83bdeca">
          <Object Name="Library Manager" ObjectId="f3b983b2-4e8f-4fdd-ac75-e5f58fa2f22b" />
          <Object Name="MainTask" ObjectId="7f87f880-f708-45a0-b4ca-cc102dabc36b" />
          <Folder Name="HEVS_Pack_2022">
            <Folder Name="HEVS_PackTag">
              <Object Name="HEVS_PackTag_Admin" ObjectId="d108cbab-6e90-4ef9-a391-289fa9a98980" />
              <Object Name="HEVS_PackTag_Command" ObjectId="0b4060a5-ab77-408d-bfc1-5a7cf1bbaac8" />
              <Object Name="HEVS_PackTag_GVL" ObjectId="4085d374-ce51-4e14-9918-b32f4c284545" />
              <Object Name="HEVS_PackTag_Ingredients" ObjectId="82c9fbec-028e-4b74-984e-6e8f1eabba7d" />
              <Object Name="HEVS_PackTag_Status" ObjectId="c49232f3-8d6a-444f-b018-be658dc0e900" />
              <Object Name="HEVS_PackTag_V2022" ObjectId="ede584f4-faea-4edc-ac4f-26e11158079f" />
              <Object Name="HEVS_PackTag_DateTime" ObjectId="75ba484e-dc21-4db8-9603-488e87a6e26f" />
              <Object Name="HEVS_PackTag_Parameter_Real" ObjectId="d2837c06-ebe6-4f26-9245-94edca3e7121" />
              <Object Name="HEVS_PackTag_Parameter_String" ObjectId="009e0116-23d4-45fb-b879-708dea550fd9" />
              <Object Name="HEVS_PackTag_Parameter_Lreal" ObjectId="45d5e6b7-0b56-4e4f-ae34-9664522a836e" />
              <Object Name="HEVS_PackTag_Parameter_Dint" ObjectId="eb334bfc-9e8f-458d-bef5-d6a961676728" />
              <Object Name="HEVS_PackTag_Recipe" ObjectId="b76c5b45-a44a-4a62-8024-a9767004cdf1" />
              <Object Name="HEVS_PackTag_ProductData" ObjectId="a6d48100-70aa-4264-894a-9da5295d973b" />
              <Object Name="HEVS_PackTag_CumulativeTimes" ObjectId="49131235-aab3-4d38-a937-50f47faa23f2" />
              <Object Name="HEVS_PackTag_ModeStateTimes" ObjectId="28770257-7468-46c1-b9e4-d78e8d2c5114" />
              <Object Name="HEVS_PackTag_Process_Variables" ObjectId="9aabf17d-e21a-4f8e-9b32-f667a6c3dbb8" />
              <Object Name="HEVS_PackTag_Event" ObjectId="690ae37f-d77f-4d91-aaf1-6a5d8e6e0795" />
              <Object Name="HEVS_PackTag_Equipment_Interlock" ObjectId="f382b094-734b-4952-b47e-2816cff8d29f" />
              <Object Name="HEVS_Min_PackTag_V2022" ObjectId="faffa4d6-c6bc-457a-9efa-07f65f485ffc" />
              <Object Name="HEVS_Min_PackTag_Admin" ObjectId="a43cddf4-c8a5-44d1-8ba4-9f1f7a937613" />
              <Object Name="HEVS_Min_PackTag_Command" ObjectId="65889f7d-d5e2-4470-999d-f8480f921136" />
              <Object Name="HEVS_Min_PackTag_Status" ObjectId="0d613522-abc4-40b6-a451-6e71583df5e1" />
              <Object Name="HEVS_Min_PackTag_ProductData" ObjectId="7ab4fa7d-1459-4db4-b429-607e425318b0" />
              <Object Name="HEVS_Min_PackTag_Event" ObjectId="e1863f81-df82-4b38-af75-947ee5ffedda" />
              <Object Name="HEVS_Min_PackTag_Union_Dint_FourBytesArray" ObjectId="7ba07ba7-6982-44af-943b-9da318143d1b" />
              <Object Name="HEVS_Min_PackTag_Union_Dword_Dint_FourBytesArray" ObjectId="8c82d660-cb2c-4b9d-9829-db398a9d1404" />
            </Folder>
            <Folder Name="HEVS_DUT_Pack">
              <Object Name="HEVS_PackTag_UI" ObjectId="16b6481b-a00d-4b5c-b59c-fa631f342f7f" />
              <Object Name="E_PackCmd" ObjectId="0201c49d-7c4f-44a5-a3fb-73388760e8e0" />
              <Object Name="E_PackState" ObjectId="00faab18-5d99-44a7-b706-06eacad107ed" />
              <Object Name="ST_PackCmd" ObjectId="ff08f30b-a0ba-4953-a108-b05c11eb97fa" />
              <Object Name="ST_PackState" ObjectId="fb64425a-81bf-45a4-b7ac-34663996dfac" />
              <Object Name="E_PackModes" ObjectId="8fa2b963-faae-404f-b23c-89e5d0dc2df6" />
              <Object Name="E_PackDisabledStates" ObjectId="435efc4c-bc80-4545-b2ec-769cbd1bcfa1" />
              <Object Name="E_PackStopReasonId" ObjectId="f873540b-ef3d-4de7-a6c3-d3658604fe37" />
              <Object Name="U_StateBitDword" ObjectId="5714f1a6-9b68-4006-a1cf-1d6f41db9c42" />
              <Object Name="ST_PackMode" ObjectId="d5af7f8a-b39b-47dd-86ee-b272e7252114" />
              <Object Name="U_ModeBitDword" ObjectId="c9ef1393-9d66-4dd6-a655-1325e14eab74" />
              <Object Name="HEVS_Time" ObjectId="7dc2f57e-8cb2-44c1-a7f1-32d1a629ed5a" />
              <Object Name="HEVS_PackAlarm_UI" ObjectId="b8873650-2c47-4f19-8385-84758d8f612e" />
            </Folder>
            <Folder Name="HEVS_POU_Pack">
              <Object Name="FB_PackStateCmdBoolInterface" ObjectId="18e2dbbf-058a-44fd-ab8d-b7b06a9625c1" />
              <Object Name="PLC_PACK" ObjectId="5c35c50a-157a-4d4c-902b-ae375026ac63">
                <Object Name="ACT_SetDefaultSettings" ObjectId="87b02d6d-71ac-471e-aa2b-ce43d0a30872" />
              </Object>
              <Object Name="FB_PackModeBoolInterface" ObjectId="4f86ac17-014e-4bfb-9159-6b8b7f3e80cf" />
              <Object Name="FB_ModuleTest" ObjectId="601ff330-a649-4e31-80da-fb610f5e1307">
                <Object Name="SC" ObjectId="efa286d9-f5c0-40b3-bb08-a9d6eedea102" />
              </Object>
              <Object Name="FB_PackMasterState" ObjectId="0de1fa31-8e47-4928-9177-469e85c196ac">
                <Object Name="M_SkipDisabledState" ObjectId="2f2f8118-76b4-4f15-9b26-e73c2e248849" />
              </Object>
              <Object Name="FB_GetActualBoolState" ObjectId="6affd389-50f5-4341-b972-670c6d1ab193" />
              <Object Name="FB_PackMasterMode" ObjectId="e6266108-2902-4df5-af45-0b3e6b914fe1" />
              <Object Name="FB_PackStatistic" ObjectId="c53a1014-11e2-44bb-99ff-7adc8f32ccbf" />
            </Folder>
            <Object Name="PackTag" ObjectId="16825ecc-ff12-4bc7-b33f-3c03e1a40b22" />
            <Folder Name="HEVS_Alarm_POU">
              <Object Name="PRG_TestAlarm" ObjectId="09683879-db5b-4678-82e2-5b2fac3761e1">
                <Object Name="ACT_Build_Ui_Strings" ObjectId="4d0e9839-f44e-4626-87d2-794d0ab9bc82" />
              </Object>
              <Object Name="PRG_GetTime_CtrlX" ObjectId="80fdabaa-4283-4d32-ab4e-3a431464d5d7" />
              <Object Name="FB_ExecuteDone" ObjectId="1001b4d1-b93a-4e02-b5f9-07f3fac1f94f" />
              <Object Name="FB_HEVS_SetAlarm" ObjectId="e0c70801-596b-4b02-bab4-4ef280aa3abb" />
              <Object Name="FB_HEVS_SetWarning" ObjectId="0bc69e37-dde3-4ad5-bccc-caaee1e90548" />
              <Object Name="FB_HEVS_StopReason" ObjectId="25b844c3-bc7e-4b00-a9a0-014cdb5f5203" />
              <Object Name="FB_InOpBase" ObjectId="f8f38993-84e0-4aec-94d9-f4eb583a1dc4" />
              <Object Name="PRG_Sandbox" ObjectId="4061fb18-cc46-4ea0-aa14-00c5bbba1682">
                <Object Name="ACT_TestNode" ObjectId="5f7daf80-8355-4df0-a828-03e8f8ac8616" />
              </Object>
            </Folder>
            <Folder Name="HEVS_Alarm_DUTs">
              <Object Name="E_EventCategory" ObjectId="f90ad14e-1baf-4d21-8bd3-5b7969a8b0ab" />
              <Object Name="E_ExecuteDone" ObjectId="a9cfd599-1924-4493-b8e0-4d09e4e1ae3d" />
              <Object Name="E_InOperationBase" ObjectId="adac47c1-6eb2-411d-9a6d-67975f8b3e46" />
            </Folder>
            <Object Name="GVL_Node" ObjectId="396a7b9c-ec2e-4ea3-a276-8f8545127323" />
          </Folder>
          <Folder Name="HEVS_Robot">
            <Folder Name="POU_Robot">
              <Object Name="FB_ModuleAxis" ObjectId="2b7a5db6-e170-4317-aa53-214ae5018204">
                <Object Name="SC" ObjectId="628685b2-3ccb-474c-9d90-515e61935317" />
                <Object Name="ACT_Clearing" ObjectId="c736260b-1d57-4ebc-a10c-3d45f02d224a" />
                <Object Name="ACT_Starting" ObjectId="4de5c9e1-4d90-480f-a0c1-adc395560816" />
                <Object Name="ACT_Execute" ObjectId="36985ca8-ffe5-4239-a0db-afa84fb3f3d5" />
                <Object Name="ACT_Stopping" ObjectId="c92d7863-33a1-45b2-84f1-ec8d163bb07f" />
                <Object Name="ACT_Aborting" ObjectId="c38d1c79-ea43-4eaf-960c-939e0d4d4d33" />
                <Object Name="ACT_Holding" ObjectId="8d73427c-21dc-4d03-9aab-4aa435e58cdf" />
                <Object Name="ACT_Unholding" ObjectId="5030c7e8-08bc-42ed-abb1-9e488c7bac80" />
                <Object Name="ACT_Suspending" ObjectId="f0d1bad8-4252-4099-917b-786fc27d50d9" />
                <Object Name="ACT_Unsuspending" ObjectId="4565ceb4-1a19-4196-a11f-0ac98af2167e" />
                <Object Name="ACT_Resetting" ObjectId="fdb3ae43-35ee-4d28-8ea8-4bc52650a9fd" />
                <Object Name="ACT_Completing" ObjectId="ec9483fc-d60e-47d5-9fe0-627e0e71e70d" />
              </Object>
              <Object Name="PRG_Process" ObjectId="b7ba01cf-22f6-45c0-a794-f5960a162608">
                <Object Name="ACT_OneUnitPick" ObjectId="53ce07f3-2c18-44d8-a57f-c04e920a9726" />
                <Object Name="ACT_ManualJog" ObjectId="743b6ec3-e840-47b4-9142-de2fde427477" />
                <Object Name="ACT_InitListOfOffset" ObjectId="3eae71af-a676-48d3-ab76-0b239f00df40" />
              </Object>
              <Object Name="PRG_DeviceManager" ObjectId="26905daf-c775-4a0b-b50c-54d5b79fec3f" />
              <Object Name="PRG_PackUpdate" ObjectId="ccd85e3e-50dc-43d5-914b-92d587f60cc5" />
              <Object Name="PRG_PackModule_Template" ObjectId="d0205955-cd21-48f1-8aa9-6f61db831e0e">
                <Object Name="SC" ObjectId="07773c8f-15ed-4058-97d4-b60ed94d2e47" />
                <Object Name="ACT_Aborting" ObjectId="7a257f5c-3c15-4ed7-9ad9-8c4351d4b71e" />
                <Object Name="ACT_Clearing" ObjectId="0efd517f-6538-4535-a996-211a3e4e12a2" />
                <Object Name="ACT_Completing" ObjectId="8f1657d5-1ee7-428a-806b-446ac07e09e6" />
                <Object Name="ACT_Execute" ObjectId="e9f2fe18-8738-484f-bb3b-f3c1888e9b42" />
                <Object Name="ACT_Holding" ObjectId="44a20169-f3f2-4587-b8ed-096cc853c8c1" />
                <Object Name="ACT_Resetting" ObjectId="8c970420-54e4-41d1-999c-980d856ef33e" />
                <Object Name="ACT_Starting" ObjectId="fcff438d-f438-4fef-8cb4-88a5b5d540d2" />
                <Object Name="ACT_Stopping" ObjectId="9759f70a-746b-4576-88ba-9f190091eb8d" />
                <Object Name="ACT_Suspending" ObjectId="48a4723a-cd3d-463d-b3ff-e9d512b93f1c" />
                <Object Name="ACT_Unholding" ObjectId="06e70484-746a-4331-a0a7-9b83bcabac2b" />
                <Object Name="ACT_Unsuspending" ObjectId="d8576446-8ad0-4396-9ba0-f7c730abdfdf" />
              </Object>
            </Folder>
            <Folder Name="DUT_Robot">
              <Object Name="E_AxisAborting" ObjectId="38acc82c-b7d9-4192-b4fb-326340db6f3a" />
              <Object Name="E_AxisClearing" ObjectId="c2c8432c-60b0-42ed-935e-917d6ddf7b68" />
              <Object Name="E_AxisResetting" ObjectId="ffc13a4f-71bd-4053-b816-c3e7353884a7" />
              <Object Name="E_AxisStarting" ObjectId="8574ae67-1fc0-4656-8e16-571529f1a584" />
              <Object Name="E_AxisStopping" ObjectId="1082dedb-5527-49df-b110-5490512a58f7" />
              <Object Name="ST_Acting" ObjectId="daa55a2e-1432-442e-870b-a06bad4e1794" />
              <Object Name="ST_Corner" ObjectId="8327f50d-49bb-4a02-8cd7-e4a50f4afce4" />
              <Object Name="ST_SetMotionParam" ObjectId="4ebefe34-98e8-4b46-a015-351f1e587d13" />
              <Object Name="E_AxisExecute" ObjectId="de84a6d0-527f-4cd0-ab10-31c5270cf016" />
              <Object Name="E_ManualJog" ObjectId="0d57bce7-a9ad-4308-92f4-a0527ad7fdf6" />
              <Object Name="E_UnitMoveForPickAndPlace" ObjectId="17024875-c149-4a2b-a929-33f28a5734b5" />
              <Object Name="ST_XYZ_Offset" ObjectId="051c7ecf-66f6-4bfb-b0ec-5a7b8dacee2b" />
            </Folder>
            <Object Name="GVL_AxisDefines" ObjectId="fbed7d43-1b1d-44ab-b273-bda7af868979" />
          </Folder>
          <Folder Name="ABox">
            <Folder Name="POU_ABox">
              <Object Name="FB_BoxModeInterface" ObjectId="85b57aa9-5e99-4cb8-9717-35104663d687" />
              <Object Name="FB_BoxStateInterface" ObjectId="7414818b-4391-41d1-984b-52df997407ec" />
              <Object Name="FB_BoxStopReasonID" ObjectId="5cd2a406-d1f0-41c2-b2dd-4c0bc6364db3" />
              <Object Name="PRG_MapBox" ObjectId="81a742c1-f168-4201-931a-c5044bbbda80">
                <Object Name="ACT_GVL_Abox" ObjectId="40485c06-955d-4193-a1c7-b9f39402ff17" />
              </Object>
            </Folder>
            <Object Name="GVL_Abox" ObjectId="31b95c15-5cf4-485c-8394-f9c0ad5586f3" />
            <Folder Name="DUT_ABox">
              <Object Name="UA_AboxInterface" ObjectId="03a0b2ac-89d3-4829-82ce-c9ce9256e8f7" />
              <Object Name="UA_AnalogIn" ObjectId="9609e6b4-7275-4343-861c-fef510482801" />
              <Object Name="UA_AnalogOut" ObjectId="c2ad5a14-bba9-482f-9eb2-2a91ac4fe72c" />
              <Object Name="UA_Balluf_bcm0002" ObjectId="6fac8e51-2212-48d9-b853-8070ad243c78" />
              <Object Name="UA_ButtonAndSignal" ObjectId="b3f9a3b5-82f9-447e-a261-cb2d18ffb6eb" />
              <Object Name="UA_DigitalInput_32" ObjectId="a8f884db-ac4f-40d0-bcab-8badc6587dcc" />
              <Object Name="UA_DigitalOutput_32" ObjectId="7b52e73f-21ed-4643-ae78-7cbc7194e35a" />
              <Object Name="UA_Festo" ObjectId="634e16b1-da38-4e2b-b9e1-42ee4bdb38cc" />
              <Object Name="UA_GlobalButtonsAndSignals" ObjectId="34e17f42-b1fb-4971-a297-848e77c0d42e" />
              <Object Name="UA_HMIVirtualButtonsAndSignals" ObjectId="5e66e8f6-9a36-4d69-b877-3d4885c8239e" />
              <Object Name="UA_O300_DL" ObjectId="6026491a-5615-4c42-b2f8-5562044ffab5" />
              <Object Name="UA_O300_ZL" ObjectId="0292b894-9834-4595-b44c-87810191b2ca" />
              <Object Name="UA_PackBox" ObjectId="8b65d69c-f66c-4902-afe6-efcbcced6503" />
              <Object Name="UA_Schunk_mms" ObjectId="e1630ce8-bc96-43e5-9e0c-58c82b66b1bc" />
              <Object Name="UA_U300_D50" ObjectId="9f70432a-c970-455e-a9e2-baa1b526f168" />
              <Object Name="UA_U300_P50" ObjectId="7f0e2eb1-ba19-4d1b-be94-9623d8b4ba56" />
            </Folder>
          </Folder>
          <Folder Name="Student">
            <Object Name="PRG_Student" ObjectId="c9f960ab-437a-4ccb-a775-9ffbb4ec0b02" />
          </Folder>
        </Object>
      </ProjectStructure>
    </data>
  </addData>
</project>