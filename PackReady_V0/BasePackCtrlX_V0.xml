<?xml version="1.0" encoding="utf-8"?>
<project xmlns="http://www.plcopen.org/xml/tc6_0200">
  <fileHeader companyName="Rexroth" productName="ctrlX PLC Engineering" productVersion="ctrlX PLC 1.20.7" creationDateTime="2024-09-02T13:56:15.8464515" />
  <contentHeader name="BasePackCtrlX.project" modificationDateTime="2024-09-02T13:55:35.8544834">
    <coordinateInfo>
      <fbd>
        <scaling x="1" y="1" />
      </fbd>
      <ld>
        <scaling x="1" y="1" />
      </ld>
      <sfc>
        <scaling x="1" y="1" />
      </sfc>
    </coordinateInfo>
    <addData>
      <data name="http://www.3s-software.com/plcopenxml/projectinformation" handleUnknown="implementation">
        <ProjectInformation />
      </data>
    </addData>
  </contentHeader>
  <types>
    <dataTypes />
    <pous />
  </types>
  <instances>
    <configurations />
  </instances>
  <addData>
    <data name="http://www.3s-software.com/plcopenxml/application" handleUnknown="implementation">
      <resource name="Application">
        <task name="MainTask" interval="PT0.004S" priority="30">
          <pouInstance name="PRG_GetTime_CtrlX" typeName="">
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml" />
            </documentation>
          </pouInstance>
          <pouInstance name="PLC_PACK" typeName="">
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml" />
            </documentation>
          </pouInstance>
          <pouInstance name="PRG_TestAlarm" typeName="">
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml" />
            </documentation>
          </pouInstance>
          <pouInstance name="PRG_Sandbox" typeName="">
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml" />
            </documentation>
          </pouInstance>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/tasksettings" handleUnknown="implementation">
              <TaskSettings KindOfTask="Cyclic" Interval="4" IntervalUnit="ms" WithinSPSTimeSlicing="true">
                <Watchdog Enabled="true" Time="20" TimeUnit="ms" Sensitivity="1" />
              </TaskSettings>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>7f87f880-f708-45a0-b4ca-cc102dabc36b</ObjectId>
            </data>
          </addData>
        </task>
        <globalVars name="HEVS_PackTag_GVL" constant="true">
          <variable name="C_MAXSTATES">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="17" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> Max State number. 0 is invalid</xhtml>
            </documentation>
          </variable>
          <variable name="C_COMMAND_MAXREALPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_COMMAND_MAXSTRINGPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="2" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">/		</xhtml>
            </documentation>
          </variable>
          <variable name="C_COMMAND_MAXLREALPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used in one of the main PackTag branch of the HEVS_PackTag_V30 : Command</xhtml>
            </documentation>
          </variable>
          <variable name="C_COMMAND_MAXDINTPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_COMMAND_MAXRECIPE">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_STATUS_MAXREALPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">/</xhtml>
            </documentation>
          </variable>
          <variable name="C_STATUS_MAXSTRINGPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="2" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">/</xhtml>
            </documentation>
          </variable>
          <variable name="C_STATUS_MAXLREALPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_STATUS_MAXDINTPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used in one of the main PackTag branch of the HEVS_PackTag_V30 : Status</xhtml>
            </documentation>
          </variable>
          <variable name="C_STATUS_MAXRECIPE">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_STATUS_MAXSTACKLIGHT">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_ADMIN_MAXREALPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">/</xhtml>
            </documentation>
          </variable>
          <variable name="C_ADMIN_MAXSTRINGPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="2" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml">/</xhtml>
            </documentation>
          </variable>
          <variable name="C_ADMIN_MAXLREALPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_ADMIN_MAXDINTPARAMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_ADMIN_MAXALARMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="20" />
            </initialValue>
          </variable>
          <variable name="C_ADMIN_MAXHISTORYALARMS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="20" />
            </initialValue>
          </variable>
          <variable name="C_ADMIN_MAXWARNINGS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="20" />
            </initialValue>
          </variable>
          <variable name="C_ADMIN_MAXCUMULATIVETIMES">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="3" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> Minimum is 0 for [0], Arbitrarily initialized to 3</xhtml>
            </documentation>
          </variable>
          <variable name="C_ADMIN_MAXPRODUCTDATA">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="11" />
            </initialValue>
          </variable>
          <variable name="C_ADMIN_MAXDISABLEDSTATES">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_ADMIN_MAXMODESTRANSITION">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> is absolutely limited by C_ADMIN_MAXMODESTRANSITIONPACK</xhtml>
            </documentation>
          </variable>
          <variable name="C_ADMIN_MAXMODESTRANSITIONPACK">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="31" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> as Pack used DWORD and 0 is reserved, max is limited to 31</xhtml>
            </documentation>
          </variable>
          <variable name="C_MAXMODSTATESTIMES">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_MAXREALVARIABLES">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_MAXSTRINGVARIABLES">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_MAXLREALVARIABLES">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_MAXDINTVARIABLES">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used in lower branches of the HEVS_PackTag_V30</xhtml>
            </documentation>
          </variable>
          <variable name="C_MAXREALINGREDIENTS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_MAXSTRINGINGREDIENTS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_MAXLREALINGREDIENTS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="C_MAXDINTINGREDIENTS">
            <type>
              <INT />
            </type>
            <initialValue>
              <simpleValue value="8" />
            </initialValue>
          </variable>
          <variable name="hevs_min_packtag_v2022">
            <type>
              <derived name="HEVS_Min_PackTag_V2022" />
            </type>
          </variable>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="qualified_only" Value="" />
              </Attributes>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/buildproperties" handleUnknown="implementation">
              <BuildProperties>
                <LinkAlways>true</LinkAlways>
              </BuildProperties>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>4085d374-ce51-4e14-9918-b32f4c284545</ObjectId>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/mixedattrsvarlist" handleUnknown="implementation">
              <MixedAttrsVarList>
                <globalVars name="HEVS_PackTag_GVL" constant="true">
                  <variable name="C_MAXSTATES">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="17" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Max State number. 0 is invalid</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_COMMAND_MAXREALPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_COMMAND_MAXSTRINGPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="2" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">/		</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_COMMAND_MAXLREALPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used in one of the main PackTag branch of the HEVS_PackTag_V30 : Command</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_COMMAND_MAXDINTPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_COMMAND_MAXRECIPE">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_STATUS_MAXREALPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">/</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_STATUS_MAXSTRINGPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="2" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">/</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_STATUS_MAXLREALPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_STATUS_MAXDINTPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used in one of the main PackTag branch of the HEVS_PackTag_V30 : Status</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_STATUS_MAXRECIPE">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_STATUS_MAXSTACKLIGHT">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_ADMIN_MAXREALPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">/</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_ADMIN_MAXSTRINGPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="2" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">/</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_ADMIN_MAXLREALPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_ADMIN_MAXDINTPARAMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_ADMIN_MAXALARMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="20" />
                    </initialValue>
                  </variable>
                  <variable name="C_ADMIN_MAXHISTORYALARMS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="20" />
                    </initialValue>
                  </variable>
                  <variable name="C_ADMIN_MAXWARNINGS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="20" />
                    </initialValue>
                  </variable>
                  <variable name="C_ADMIN_MAXCUMULATIVETIMES">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="3" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Minimum is 0 for [0], Arbitrarily initialized to 3</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_ADMIN_MAXPRODUCTDATA">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="11" />
                    </initialValue>
                  </variable>
                  <variable name="C_ADMIN_MAXDISABLEDSTATES">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_ADMIN_MAXMODESTRANSITION">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> is absolutely limited by C_ADMIN_MAXMODESTRANSITIONPACK</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_ADMIN_MAXMODESTRANSITIONPACK">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="31" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> as Pack used DWORD and 0 is reserved, max is limited to 31</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_MAXMODSTATESTIMES">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_MAXREALVARIABLES">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_MAXSTRINGVARIABLES">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_MAXLREALVARIABLES">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_MAXDINTVARIABLES">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used in lower branches of the HEVS_PackTag_V30</xhtml>
                    </documentation>
                  </variable>
                  <variable name="C_MAXREALINGREDIENTS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_MAXSTRINGINGREDIENTS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_MAXLREALINGREDIENTS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                  <variable name="C_MAXDINTINGREDIENTS">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="8" />
                    </initialValue>
                  </variable>
                </globalVars>
                <globalVars name="HEVS_PackTag_GVL">
                  <variable name="hevs_min_packtag_v2022">
                    <type>
                      <derived name="HEVS_Min_PackTag_V2022" />
                    </type>
                  </variable>
                </globalVars>
              </MixedAttrsVarList>
            </data>
          </addData>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 31

!!!!!!	The value of these constants have to be set by the user depending on the system it is implemented on.	!!!!!!\\</xhtml>
          </documentation>
        </globalVars>
        <globalVars name="PackTag">
          <variable name="Command">
            <type>
              <derived name="HEVS_PackTag_Command" />
            </type>
          </variable>
          <variable name="Status">
            <type>
              <derived name="HEVS_PackTag_Status" />
            </type>
          </variable>
          <variable name="Admin">
            <type>
              <derived name="HEVS_PackTag_Admin" />
            </type>
          </variable>
          <variable name="hevsPackTime">
            <type>
              <derived name="HEVS_Time" />
            </type>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> HEVS Time, needed for Alarms and Time in Pack
 Computed with PRG_GetTime_CtrlX
          or   PRG_GetTime_TwinCAT
			or   Your own system</xhtml>
            </documentation>
          </variable>
          <variable name="hevsUI">
            <type>
              <derived name="HEVS_PackTag_UI" />
            </type>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> Help for interface and diagnostic
 HEVS Pack could be used without this Struct.

 Can be used with fbCmdBoolInterface
 Can be used with fbGetActualBoolState</xhtml>
            </documentation>
          </variable>
          <variable name="hevsPackAlarm_UI">
            <type>
              <derived name="HEVS_PackAlarm_UI" />
            </type>
            <documentation>
              <xhtml xmlns="http://www.w3.org/1999/xhtml"> Help for interface and diagnostic
 HEVS Pack could be used without this Struct.

 Can be used with program PRG_TestAlarm</xhtml>
            </documentation>
          </variable>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="qualified_only" Value="" />
              </Attributes>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>16825ecc-ff12-4bc7-b33f-3c03e1a40b22</ObjectId>
            </data>
          </addData>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 29
	
	Base GVL for HEVS Pack Tag
 File name should be PackTag
</xhtml>
          </documentation>
        </globalVars>
        <globalVars name="GVL_Node">
          <variable name="readREAL">
            <type>
              <REAL />
            </type>
          </variable>
          <variable name="readDINT">
            <type>
              <DINT />
            </type>
          </variable>
          <variable name="readBOOL">
            <type>
              <BOOL />
            </type>
          </variable>
          <variable name="readString">
            <type>
              <string />
            </type>
          </variable>
          <variable name="writeREAL">
            <type>
              <REAL />
            </type>
          </variable>
          <variable name="writeDINT">
            <type>
              <DINT />
            </type>
          </variable>
          <variable name="writeBOOL">
            <type>
              <BOOL />
            </type>
          </variable>
          <addData>
            <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
              <Attributes>
                <Attribute Name="qualified_only" Value="" />
              </Attributes>
            </data>
            <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
              <ObjectId>396a7b9c-ec2e-4ea3-a276-8f8545127323</ObjectId>
            </data>
          </addData>
          <documentation>
            <xhtml xmlns="http://www.w3.org/1999/xhtml">
	Some GVL to test var with NodeRED.
	
	Source: www.hevs.ch
	Author: Cedric Lenoir
	Date: 22 August 2024
</xhtml>
          </documentation>
        </globalVars>
        <addData>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Admin">
              <baseType>
                <struct>
                  <variable name="Parameter_Real">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_ADMIN_MAXREALPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Real" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_String">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_ADMIN_MAXSTRINGPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_String" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_Lreal">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_ADMIN_MAXLREALPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Lreal" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_Dint">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_ADMIN_MAXDINTPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Dint" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Alarm">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXALARMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Event" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="AlarmExtent">
                    <type>
                      <DINT />
                    </type>
                    <initialValue>
                      <simpleValue value="HEVS_PackTag_GVL.C_ADMIN_MAXALARMS" />
                    </initialValue>
                  </variable>
                  <variable name="AlarmHistory">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXHISTORYALARMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Event" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="AlarmHistoryExtent">
                    <type>
                      <DINT />
                    </type>
                    <initialValue>
                      <simpleValue value="HEVS_PackTag_GVL.C_ADMIN_MAXHISTORYALARMS" />
                    </initialValue>
                  </variable>
                  <variable name="StopReason">
                    <type>
                      <derived name="HEVS_PackTag_Event" />
                    </type>
                  </variable>
                  <variable name="Warning">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXWARNINGS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Event" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="WarningExtent">
                    <type>
                      <DINT />
                    </type>
                    <initialValue>
                      <simpleValue value="HEVS_PackTag_GVL.C_ADMIN_MAXWARNINGS" />
                    </initialValue>
                  </variable>
                  <variable name="ModeTimeCurrent">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="StateTimeCurrent">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="CumulativeTime">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXCUMULATIVETIMES" />
                        <baseType>
                          <derived name="HEVS_PackTag_CumulativeTimes" />
                        </baseType>
                      </array>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> From TR88 2022: §7.5.3.14 The minimum array extent is 1 (Admin.CumulativeTimes[0]).</xhtml>
                    </documentation>
                  </variable>
                  <variable name="ProductData">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXPRODUCTDATA" />
                        <baseType>
                          <derived name="HEVS_PackTag_ProductData" />
                        </baseType>
                      </array>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> From TR88 2022: §7.5.3.19  The array index of # = 0 can typically be reserved for data regarding the primary product stream</xhtml>
                    </documentation>
                  </variable>
                  <variable name="MachDesignSpeed">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="DisabledStatesCfg">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_ADMIN_MAXDISABLEDSTATES" />
                        <baseType>
                          <DWORD />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="CurDisabledStates">
                    <type>
                      <DWORD />
                    </type>
                  </variable>
                  <variable name="EnabledModesCfg">
                    <type>
                      <DWORD />
                    </type>
                  </variable>
                  <variable name="ModeTransitionCfg">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_ADMIN_MAXMODESTRANSITION" />
                        <baseType>
                          <DWORD />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="PLCDateTime">
                    <type>
                      <DT />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>d108cbab-6e90-4ef9-a391-289fa9a98980</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 31
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Command">
              <baseType>
                <struct>
                  <variable name="UnitMode">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="UnitModeChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="MachSpeed">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="MaterialIntelock">
                    <type>
                      <DWORD />
                    </type>
                  </variable>
                  <variable name="CntrlCmd">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="CmdChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Parameter_Real">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_COMMAND_MAXSTRINGPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Real" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_String">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_COMMAND_MAXREALPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_String" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_Lreal">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_COMMAND_MAXLREALPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Lreal" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_Dint">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_COMMAND_MAXDINTPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Dint" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="SelectedRecipe">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="RecipeChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Recipe">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_COMMAND_MAXRECIPE" />
                        <baseType>
                          <derived name="HEVS_PackTag_Recipe" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>0b4060a5-ab77-408d-bfc1-5a7cf1bbaac8</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 31
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Ingredients">
              <baseType>
                <struct>
                  <variable name="Parameter_Real">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_MAXREALINGREDIENTS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Real" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_String">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_MAXSTRINGINGREDIENTS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_String" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_Lreal">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_MAXLREALINGREDIENTS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Lreal" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_Dint">
                    <type>
                      <array>
                        <dimension lower="1" upper=".HEVS_PackTag_GVL.C_MAXDINTINGREDIENTS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Dint" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>82c9fbec-028e-4b74-984e-6e8f1eabba7d</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA-TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Status">
              <baseType>
                <struct>
                  <variable name="UnitModeCurrent">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="UnitModeRequested">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> I consider that there is an error in TR88 2022 §7.5.2.2</xhtml>
                    </documentation>
                  </variable>
                  <variable name="UnitModeChangeInProcess">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="StateCurrent">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="StateRequested">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="StateChangeInProcess">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="MachSpeed">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="CurMachSpeed">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="MaterialInterlock">
                    <type>
                      <DWORD />
                    </type>
                  </variable>
                  <variable name="EquipmentInterlock">
                    <type>
                      <derived name="HEVS_PackTag_Equipment_Interlock" />
                    </type>
                  </variable>
                  <variable name="Parameter_Real">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_STATUS_MAXREALPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Real" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_String">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_STATUS_MAXSTRINGPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_String" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_Lreal">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_STATUS_MAXLREALPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Lreal" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_Dint">
                    <type>
                      <array>
                        <dimension lower="1" upper=".HEVS_PackTag_GVL.C_STATUS_MAXDINTPARAMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Dint" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="RecipeCurrent">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="RecipeRequested">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="RecipeChangeInProcess">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Recipe">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_STATUS_MAXRECIPE" />
                        <baseType>
                          <derived name="HEVS_PackTag_Recipe" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Stacklight">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_STATUS_MAXSTACKLIGHT" />
                        <baseType>
                          <DWORD />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>c49232f3-8d6a-444f-b018-be658dc0e900</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 31
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_V2022">
              <baseType>
                <struct>
                  <variable name="Command">
                    <type>
                      <derived name="HEVS_PackTag_Command" />
                    </type>
                  </variable>
                  <variable name="Status">
                    <type>
                      <derived name="HEVS_PackTag_Status" />
                    </type>
                  </variable>
                  <variable name="Admin">
                    <type>
                      <derived name="HEVS_PackTag_Admin" />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>ede584f4-faea-4edc-ac4f-26e11158079f</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 31
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_UI">
              <baseType>
                <struct>
                  <variable name="uiCmdReset">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Bool commands for UI User inteface</xhtml>
                    </documentation>
                  </variable>
                  <variable name="uiCmdStart">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiCmdStop">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiCmdHold">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiCmdUnhold">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiCmdSuspend">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiCmdUnsuspend">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiCmdAbort">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiCmdClear">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiCmdComplete">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateClearing">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Bool states for UI User Inteface</xhtml>
                    </documentation>
                  </variable>
                  <variable name="uiStateStopped">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateStarting">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateIdle">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateSuspended">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateExecute">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateStopping">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateAborting">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateAborted">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateHolding">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateHeld">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateUnholding">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateSuspending">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateUnsuspending">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateResetting">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateCompleting">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateCompleted">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiModeProduction">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Some Modes of UI User Interface</xhtml>
                    </documentation>
                  </variable>
                  <variable name="uiModeMaintenance">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiModeManual">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiModeTest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiModeUser_05">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiModeUser_06">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiModeUser_07">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiModeUser_08">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiStateMasterCurrent">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'Not linked'" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Some strings for diagnostic</xhtml>
                    </documentation>
                  </variable>
                  <variable name="uiStateMasterDiagnostic">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'Not linked'" />
                    </initialValue>
                  </variable>
                  <variable name="uiModeMasterCurrent">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'Not linked'" />
                    </initialValue>
                  </variable>
                  <variable name="uiModeMasterDiagnostic">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'Not linked'" />
                    </initialValue>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>16b6481b-a00d-4b5c-b59c-fa631f342f7f</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 29
	
	This structure is made to be available in GVL PackTag
 With name hevsUI to help diagnositic and interface of this implementation

	To avoid to lose links if code is modified for info not in base PackTag 
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_DateTime">
              <baseType>
                <struct>
                  <variable name="Year">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Can be changed to SINT, INT, or DINT only!!</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Month">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Can be changed to SINT, INT, or DINT only!!</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Day">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Can be changed to SINT, INT, or DINT only!!</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Hour">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Can be changed to SINT, INT, or DINT only!!</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Minute">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Can be changed to SINT, INT, or DINT only!!</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Second">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Can be changed to SINT, INT, or DINT only!!</xhtml>
                    </documentation>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>75ba484e-dc21-4db8-9603-488e87a6e26f</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Parameter_Real">
              <baseType>
                <struct>
                  <variable name="ID">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Name">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="Unit">
                    <type>
                      <string length="6" />
                    </type>
                  </variable>
                  <variable name="Value">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>d2837c06-ebe6-4f26-9245-94edca3e7121</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Parameter_String">
              <baseType>
                <struct>
                  <variable name="ID">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Name">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="Unit">
                    <type>
                      <string length="6" />
                    </type>
                  </variable>
                  <variable name="Value">
                    <type>
                      <string />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>009e0116-23d4-45fb-b879-708dea550fd9</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Parameter_Lreal">
              <baseType>
                <struct>
                  <variable name="ID">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Name">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="Unit">
                    <type>
                      <string length="6" />
                    </type>
                  </variable>
                  <variable name="Value">
                    <type>
                      <LREAL />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>45d5e6b7-0b56-4e4f-ae34-9664522a836e</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Parameter_Dint">
              <baseType>
                <struct>
                  <variable name="ID">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Name">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="Unit">
                    <type>
                      <string length="6" />
                    </type>
                  </variable>
                  <variable name="Value">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>eb334bfc-9e8f-458d-bef5-d6a961676728</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Recipe">
              <baseType>
                <struct>
                  <variable name="ID">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Name">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="Unit">
                    <type>
                      <string length="6" />
                    </type>
                  </variable>
                  <variable name="PrimaryQty">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="ProcessVariables">
                    <type>
                      <derived name="HEVS_PackTag_Process_Variables" />
                    </type>
                  </variable>
                  <variable name="Ingredients">
                    <type>
                      <derived name="HEVS_PackTag_Ingredients" />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>b76c5b45-a44a-4a62-8024-a9767004cdf1</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_ProductData">
              <baseType>
                <struct>
                  <variable name="ID">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Name">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="Unit">
                    <type>
                      <string length="6" />
                    </type>
                  </variable>
                  <variable name="PrimaryQty">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="ConsumedCount">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="ProcessedCount">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="DefectiveCount">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="AccConsumedCount">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="AccProcessedCount">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="AccDefectiveCount">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>a6d48100-70aa-4264-894a-9da5295d973b</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 31
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_CumulativeTimes">
              <baseType>
                <struct>
                  <variable name="AccTimeSinceReset">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="ModeStateTimes">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_MAXMODSTATESTIMES" />
                        <baseType>
                          <derived name="HEVS_PackTag_ModeStateTimes" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>49131235-aab3-4d38-a937-50f47faa23f2</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_ModeStateTimes">
              <baseType>
                <struct>
                  <variable name="Mode">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="State">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_MAXSTATES" />
                        <baseType>
                          <DINT />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>28770257-7468-46c1-b9e4-d78e8d2c5114</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Process_Variables">
              <baseType>
                <struct>
                  <variable name="Parameter_Real">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_MAXREALVARIABLES" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Real" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_String">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_MAXSTRINGVARIABLES" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_String" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_Lreal">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_MAXLREALVARIABLES" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Lreal" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="Parameter_Dint">
                    <type>
                      <array>
                        <dimension lower="1" upper=".HEVS_PackTag_GVL.C_MAXDINTVARIABLES" />
                        <baseType>
                          <derived name="HEVS_PackTag_Parameter_Dint" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>9aabf17d-e21a-4f8e-9b32-f667a6c3dbb8</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Event">
              <baseType>
                <struct>
                  <variable name="Trigger">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="ID">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Value">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Message">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="Category">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="DateTime">
                    <type>
                      <DT />
                    </type>
                  </variable>
                  <variable name="AckDateTime">
                    <type>
                      <DT />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>690ae37f-d77f-4d91-aaf1-6a5d8e6e0795</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA-TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackTag_Equipment_Interlock">
              <baseType>
                <struct>
                  <variable name="Blocked">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Starved">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>f382b094-734b-4952-b47e-2816cff8d29f</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA-TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_Min_PackTag_V2022">
              <baseType>
                <struct>
                  <variable name="MinCommand">
                    <type>
                      <derived name="HEVS_Min_PackTag_Command" />
                    </type>
                  </variable>
                  <variable name="MinStatus">
                    <type>
                      <derived name="HEVS_Min_PackTag_Status" />
                    </type>
                  </variable>
                  <variable name="MinAdmin">
                    <type>
                      <derived name="HEVS_Min_PackTag_Admin" />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>faffa4d6-c6bc-457a-9efa-07f65f485ffc</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 31
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_Min_PackTag_Admin">
              <baseType>
                <struct>
                  <variable name="ProductData">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_ADMIN_MAXPRODUCTDATA" />
                        <baseType>
                          <derived name="HEVS_Min_PackTag_ProductData" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                  <variable name="StopReasonMin">
                    <type>
                      <derived name="HEVS_Min_PackTag_Event" />
                    </type>
                  </variable>
                  <variable name="CurDisabledStates">
                    <type>
                      <DWORD />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>a43cddf4-c8a5-44d1-8ba4-9f1f7a937613</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 31
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_Min_PackTag_Command">
              <baseType>
                <struct>
                  <variable name="UnitMode">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="UnitModeChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="MachSpeed">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="CntrlCmd">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="CmdChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>65889f7d-d5e2-4470-999d-f8480f921136</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 31
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_Min_PackTag_Status">
              <baseType>
                <struct>
                  <variable name="UnitModeCurrent">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="StateCurrent">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="MachSpeed">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                  <variable name="CurMachSpeed">
                    <type>
                      <REAL />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>0d613522-abc4-40b6-a451-6e71583df5e1</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 31
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_Min_PackTag_ProductData">
              <baseType>
                <struct>
                  <variable name="ProcessedCount">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="DefectiveCount">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>7ab4fa7d-1459-4db4-b429-607e425318b0</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA–TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 31
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_Min_PackTag_Event">
              <baseType>
                <struct>
                  <variable name="ID">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>e1863f81-df82-4b38-af75-947ee5ffedda</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml"> 
    List of PackTags based on ISA-TR88.00.02-2022
    
    www.hevs.ch
    Institut Systemes Industriels / Power &amp; Control
    Project:    Automation Box CtrlX S3
    Author:     Romain Ferrari &amp; Cedric Lenoir
    Date:       2024 July 30
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_PackCmd">
              <baseType>
                <enum>
                  <values>
                    <value name="eUndefined" value="0" />
                    <value name="eReset" value="1" />
                    <value name="eStart" value="2" />
                    <value name="eStop" value="3" />
                    <value name="eHold" value="4" />
                    <value name="eUnhold" value="5" />
                    <value name="eSuspend" value="6" />
                    <value name="eUnsuspend" value="7" />
                    <value name="eAbort" value="8" />
                    <value name="eClear" value="9" />
                    <value name="eComplete" value="10" />
                  </values>
                  <baseType>
                    <DINT />
                  </baseType>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>0201c49d-7c4f-44a5-a3fb-73388760e8e0</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Automation Box CtrlX S3
	Author:		Romain Ferrari
	Date:		2024 August 16
	
	Summary:	Enum OF possible Commands for the Command.CntrlCmd to take. This enum use data type and value according
                Document: ISA-TR88.00.02-2022 
                          / 7.5.1.5 Command.CntrlCmd
                          
    Note: Accoring to ISA-TR88.00.02-2022
          This is a DINT
          


 {attribute 'strict'}</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_PackState">
              <baseType>
                <enum>
                  <values>
                    <value name="eUndefined" value="0" />
                    <value name="eClearing" value="1" />
                    <value name="eStopped" value="2" />
                    <value name="eStarting" value="3" />
                    <value name="eIdle" value="4" />
                    <value name="eSuspended" value="5" />
                    <value name="eExecute" value="6" />
                    <value name="eStopping" value="7" />
                    <value name="eAborting" value="8" />
                    <value name="eAborted" value="9" />
                    <value name="eHolding" value="10" />
                    <value name="eHeld" value="11" />
                    <value name="eUnholding" value="12" />
                    <value name="eSuspending" value="13" />
                    <value name="eUnsuspending" value="14" />
                    <value name="eResetting" value="15" />
                    <value name="eCompleting" value="16" />
                    <value name="eCompleted" value="17" />
                  </values>
                  <baseType>
                    <DINT />
                  </baseType>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>00faab18-5d99-44a7-b706-06eacad107ed</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Automation Box CtrlX S3
	Author:		Romain Ferrari
	Date:		2024 August 16
	
	Summary:	Enum of possible states for Status.StateCurrent to take. This enum use data type and value according
                Document: ISA-TR88.00.02-2022 
                          / 7.5.2.4 Status.StateCurrent
                          
    Note: Accoring to ISA-TR88.00.02-2022
          This is a DINT
          


 {attribute 'strict'}</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="ST_PackCmd">
              <baseType>
                <struct>
                  <variable name="Undefined">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Reset">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Start">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Stop">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Hold">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Unhold">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Suspend">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Unsuspend">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Abort">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Clear">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Complete">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="NotUsed">
                    <type>
                      <array>
                        <dimension lower="1" upper="14" />
                        <baseType>
                          <BOOL />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>ff08f30b-a0ba-4953-a108-b05c11eb97fa</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2023 October 16
	
	Summary:	This enum use data type and value according
                Document: ISA-TR88.00.02-2022 
                          / 7.5.2.4 State Current
                          
    Note: Accoring to ISA-TR88.00.02-2022
          This is a DINT
          </xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="ST_PackState">
              <baseType>
                <struct>
                  <variable name="Undefined">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Clearing">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Stopped">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Starting">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Idle">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Suspended">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Execute">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Stopping">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Aborting">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Aborted">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Holding">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Held">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Unholding">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Suspending">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Unsuspending">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Resetting">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Completing">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Completed">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>fb64425a-81bf-45a4-b7ac-34663996dfac</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 29
	
	This struct is mainly used to build U_StateBitDword</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_PackModes">
              <baseType>
                <enum>
                  <values>
                    <value name="Invalid" value="0" />
                    <value name="Production" value="1" />
                    <value name="Maintenance" value="2" />
                    <value name="Manual" value="3" />
                    <value name="Test" value="4" />
                    <value name="User_05" value="5" />
                    <value name="User_06" value="6" />
                    <value name="User_07" value="7" />
                    <value name="User_08" value="8" />
                  </values>
                  <baseType>
                    <DINT />
                  </baseType>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>8fa2b963-faae-404f-b23c-89e5d0dc2df6</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Automation Box CtrlX S3
	Author:		Romain Ferrari
	Date:		2024 August 16
	
	Summary:	Enum of possible modes that Command.UnitMode can take. This enum use data type and value according to 
                Document: ISA-TR88.00.02-2022 
                          / 7.5.1.1 Command.UnitMode
                          
    Note: Accoring to ISA-TR88.00.02-2022
          This is a DINT
          


 {attribute 'strict'}:   </xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_PackDisabledStates">
              <baseType>
                <enum>
                  <values>
                    <value name="none" value="0" />
                    <value name="eClearing" value="2" />
                    <value name="eStopped" value="4" />
                    <value name="eStarting" value="8" />
                    <value name="eIdle" value="16" />
                    <value name="eSuspended" value="32" />
                    <value name="eExecute" value="64" />
                    <value name="eStopping" value="128" />
                    <value name="eAborting" value="256" />
                    <value name="eAborted" value="512" />
                    <value name="eHolding" value="1024" />
                    <value name="eHeld" value="2048" />
                    <value name="eUnholding" value="4096" />
                    <value name="eSuspending" value="8192" />
                    <value name="eUnsuspending" value="16384" />
                    <value name="eResetting" value="32768" />
                    <value name="eCompleting" value="65536" />
                    <value name="eCompleted" value="131072" />
                  </values>
                  <baseType>
                    <DWORD />
                  </baseType>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>435efc4c-bc80-4545-b2ec-769cbd1bcfa1</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Automation Box CtrlX S3
	Author:		Romain Ferrari
	Date:		2024 August 16
	
	Summary:	Enum of possible states that can be disabled using their values in CurDisabledStates. This enum use data type and value according
                Document: ISA-TR88.00.02-2022 
                          / 7.5.3.22 Admin.CurDisabledStates
                          
    Note: Accoring to ISA-TR88.00.02-2022
          This is a DWORD
          


 {attribute 'strict'}</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_PackStopReasonId">
              <baseType>
                <enum>
                  <values>
                    <value name="Undefined" value="0" />
                    <value name="RealEstopButtonPushed" value="1" />
                    <value name="VirtualAbortButtonPushed" value="2" />
                    <value name="AbortCondition3" value="3" />
                    <value name="RealStopButtonPushed" value="4" />
                    <value name="VirtualStopButtonPushed" value="5" />
                    <value name="StopCondition3" value="6" />
                    <value name="VirtualHoldButtonPushed" value="7" />
                    <value name="HoldCondition2" value="8" />
                    <value name="SuspendCondition1" value="9" />
                    <value name="SuspendCondition2" value="10" />
                  </values>
                  <baseType>
                    <DINT />
                  </baseType>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/enumvaluedocumentation" handleUnknown="implementation">
                  <EnumValueDocumentation>
                    <EnumValue>
                      <Name>AbortCondition3</Name>
                      <Documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Rename depending the usage</xhtml>
                      </Documentation>
                    </EnumValue>
                    <EnumValue>
                      <Name>StopCondition3</Name>
                      <Documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Rename depending the usage</xhtml>
                      </Documentation>
                    </EnumValue>
                    <EnumValue>
                      <Name>HoldCondition2</Name>
                      <Documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Rename depending the usage</xhtml>
                      </Documentation>
                    </EnumValue>
                    <EnumValue>
                      <Name>SuspendCondition1</Name>
                      <Documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Rename depending the usage</xhtml>
                      </Documentation>
                    </EnumValue>
                    <EnumValue>
                      <Name>SuspendCondition2</Name>
                      <Documentation>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml"> Rename depending the usage
 More possible states can be added</xhtml>
                      </Documentation>
                    </EnumValue>
                  </EnumValueDocumentation>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>f873540b-ef3d-4de7-a6c3-d3658604fe37</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	Automation Box CtrlX S3
	Author:		Romain Ferrari
	Date:		2024 August 16
	
	Summary:	Enum OF possible Commands for the Command_CntrlCmd to take. This enum use data type and value according, but new ID's can be added.
                Document: ISA-TR88.00.02-2022 
                          / 7.5.3.9.2 StopReason.ID
                          
    Note: Accoring to ISA-TR88.00.02-2022
          This is a DINT
          


 {attribute 'strict'}</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="ST_PackMode">
              <baseType>
                <struct>
                  <variable name="Invalid">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Production">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Maintenance">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Manual">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="Test">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_5">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_6">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_7">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_8">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_9">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_10">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_11">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_12">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_13">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_14">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_15">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_16">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_17">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_18">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_19">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_20">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_21">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_22">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_23">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_24">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_25">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_26">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_27">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_28">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_29">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_30">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                  <variable name="UserDefinable_31">
                    <type>
                      <derived name="BIT" />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>d5af7f8a-b39b-47dd-86ee-b272e7252114</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 29
	
	This struct is mainly used to build U_ModeBitDword</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_EventCategory">
              <baseType>
                <enum>
                  <values>
                    <value name="Warning" value="0" />
                    <value name="Complete" value="6" />
                    <value name="Abort" value="4" />
                    <value name="Stop" value="3" />
                    <value name="Hold" value="2" />
                    <value name="Suspend" value="1" />
                  </values>
                  <baseType>
                    <DINT />
                  </baseType>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>f90ad14e-1baf-4d21-8bd3-5b7969a8b0ab</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_ExecuteDone">
              <baseType>
                <enum>
                  <values>
                    <value name="Idle" value="999" />
                    <value name="Init" value="10" />
                    <value name="InOp" value="20" />
                    <value name="Done" value="30" />
                    <value name="Error" value="40" />
                  </values>
                  <baseType>
                    <DINT />
                  </baseType>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                    <Attribute Name="strict" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>a9cfd599-1924-4493-b8e0-4d09e4e1ae3d</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="E_InOperationBase">
              <baseType>
                <enum>
                  <values>
                    <value name="Idle" value="99" />
                    <value name="Init" value="1" />
                    <value name="InOp" value="4" />
                    <value name="Error" value="0" />
                  </values>
                  <baseType>
                    <DINT />
                  </baseType>
                </enum>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                  <Attributes>
                    <Attribute Name="qualified_only" Value="" />
                    <Attribute Name="strict" Value="" />
                  </Attributes>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>adac47c1-6eb2-411d-9a6d-67975f8b3e46</ObjectId>
                </data>
              </addData>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_Time">
              <baseType>
                <struct>
                  <variable name="Date_and_time_in_seconds">
                    <type>
                      <UDINT />
                    </type>
                  </variable>
                  <variable name="Local_date_time_seconds">
                    <type>
                      <UDINT />
                    </type>
                  </variable>
                  <variable name="Date_and_time_format">
                    <type>
                      <DT />
                    </type>
                  </variable>
                  <variable name="Date_and_time_string">
                    <type>
                      <string />
                    </type>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>7dc2f57e-8cb2-44c1-a7f1-32d1a629ed5a</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 30
	
	This structure Store PLC Date and time in various format
 Should be available in Global Variable for Alarms and time of Pack
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/datatype" handleUnknown="implementation">
            <dataType name="HEVS_PackAlarm_UI">
              <baseType>
                <struct>
                  <variable name="uiSetAlarm_0">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Bool commands for Alarms</xhtml>
                    </documentation>
                  </variable>
                  <variable name="uiSetAlarm_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiSetAlarm_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiAckAlarm_0">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiAckAlarm_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiAckAlarm_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiSetWarning_0">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiSetWarning_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiSetWarning_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiAckWarning_0">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiAckWarning_1">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiAckWarning_2">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="uiTextAlarmOne">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'Not linked'" />
                    </initialValue>
                  </variable>
                  <variable name="uiTextWarningOne">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'Not linked'" />
                    </initialValue>
                  </variable>
                  <variable name="uiTextStopReason">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'Not linked'" />
                    </initialValue>
                  </variable>
                </struct>
              </baseType>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>b8873650-2c47-4f19-8385-84758d8f612e</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 30
	
	This structure is made to be available in GVL PackTag
 With name hevsAlarmUI to test and understand alarms

	There is a set of BOOL for buttons to set and ack
	3 Alarms / 3 Warnings
	1 String Alarm
	1 String Warning
	1 String Stop Reason
</xhtml>
              </documentation>
            </dataType>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_PackStateCmdBoolInterface" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="Reset">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Start">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Stop">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Hold">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Unhold">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Suspend">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Unsuspend">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Abort">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Clear">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Complete">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="remoteEnable">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> For remote, to be completed</xhtml>
                    </documentation>
                  </variable>
                  <variable name="remoteCmd">
                    <type>
                      <derived name="E_PackCmd" />
                    </type>
                  </variable>
                </inputVars>
                <outputVars>
                  <variable name="eCntrlCmd">
                    <type>
                      <derived name="E_PackCmd" />
                    </type>
                  </variable>
                  <variable name="bCmdChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="rTrigChangeRequest">
                    <type>
                      <derived name="R_TRIG" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Trigger detect a new command
 That is, new state is different that last one.</xhtml>
                    </documentation>
                  </variable>
                  <variable name="eCntrlCmdMem">
                    <type>
                      <derived name="E_PackCmd" />
                    </type>
                  </variable>
                  <variable name="uliTrigCounter">
                    <type>
                      <ULINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> For debut, allows to show activation of trigger</xhtml>
                    </documentation>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 27
	
	Summary:	This FB converts Pack BOOL commnds to
             Command_CntrlCmd			    : DINT;
	            Command_CmdChangeRequest	    : BOOL;
             Cmd on rising edge only

             Commands are evaluated with this priority
             Abort - Stop - Complete - Hold - Suspend - Reset - Clear - Start - Unhold - Unsuspend
             That means mainly that Abort, then Stop should not be masked by other commands.</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Abort THEN
    eCntrlCmd := E_PackCmd.eAbort;
ELSIF Stop THEN
    eCntrlCmd := E_PackCmd.eStop;
ELSIF Complete THEN 
    eCntrlCmd := E_PackCmd.eComplete;
ELSIF Hold THEN
    eCntrlCmd := E_PackCmd.eHold;
ELSIF Suspend THEN 
    eCntrlCmd := E_PackCmd.eSuspend;
ELSIF Reset THEN
    eCntrlCmd := E_PackCmd.eReset;
ELSIF Clear THEN
    eCntrlCmd := E_PackCmd.eClear;
ELSIF Start THEN
    eCntrlCmd := E_PackCmd.eStart;
ELSIF Unhold THEN
    eCntrlCmd := E_PackCmd.eUnhold;
ELSIF Unsuspend THEN
    eCntrlCmd := E_PackCmd.eUnsuspend;
ELSE
    eCntrlCmd := E_PackCmd.eUndefined;
END_IF

rTrigChangeRequest(CLK := eCntrlCmdMem &lt;&gt; eCntrlCmd);
eCntrlCmdMem := eCntrlCmd;
IF rTrigChangeRequest.Q THEN
    uliTrigCounter := uliTrigCounter + 1;
END_IF

bCmdChangeRequest := rTrigChangeRequest.Q;</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>18e2dbbf-058a-44fd-ab8d-b7b06a9625c1</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="PLC_PACK" pouType="program">
              <interface>
                <localVars>
                  <variable name="uliCount">
                    <type>
                      <ULINT />
                    </type>
                  </variable>
                  <variable name="fbCmdBoolInterface">
                    <type>
                      <derived name="FB_PackStateCmdBoolInterface" />
                    </type>
                  </variable>
                  <variable name="fbModeBoolInterface">
                    <type>
                      <derived name="FB_PackModeBoolInterface" />
                    </type>
                  </variable>
                  <variable name="fbModuleTest">
                    <type>
                      <derived name="FB_ModuleTest" />
                    </type>
                  </variable>
                  <variable name="whatSC">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="testOtherSC">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="TRUE" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> By setting this flag to FALSE, SC State Complete is disabled</xhtml>
                    </documentation>
                  </variable>
                  <variable name="testUMCC">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="TRUE" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> By setting this flag to FALSE, Unit Mode Change Complete is disabled</xhtml>
                    </documentation>
                  </variable>
                  <variable name="fbPackMaster">
                    <type>
                      <derived name="FB_PackMasterState" />
                    </type>
                  </variable>
                  <variable name="fbPackMasterMode">
                    <type>
                      <derived name="FB_PackMasterMode" />
                    </type>
                  </variable>
                  <variable name="fbStopReason">
                    <type>
                      <derived name="FB_HEVS_StopReason" />
                    </type>
                  </variable>
                  <variable name="fbGetActualBoolState">
                    <type>
                      <derived name="FB_GetActualBoolState" />
                    </type>
                  </variable>
                  <variable name="fbPackStatistic">
                    <type>
                      <derived name="FB_PackStatistic" />
                    </type>
                  </variable>
                  <variable name="Admin_CurDisabledStates">
                    <type>
                      <DWORD />
                    </type>
                    <initialValue>
                      <simpleValue value="0" />
                    </initialValue>
                  </variable>
                  <variable name="defaultSettingsDone">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Default settings for Disabled States, set in ACT_SetDefaultSettings</xhtml>
                    </documentation>
                  </variable>
                  <variable name="uListOfModesConfig">
                    <type>
                      <derived name="U_ModeBitDword" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Definition of available modes, to be defined in ACT_DefaultSettings.
 Check below to define Disable State and Transitions for each mode</xhtml>
                    </documentation>
                  </variable>
                  <variable name="uDisabledStatesProduction">
                    <type>
                      <derived name="U_StateBitDword" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">	Invalid := 0, Production := 1, Maintenance := 2, Manual := 3, Test := 4</xhtml>
                    </documentation>
                  </variable>
                  <variable name="uDisabledStatesMaintenance">
                    <type>
                      <derived name="U_StateBitDword" />
                    </type>
                  </variable>
                  <variable name="uDisabledStatesManual">
                    <type>
                      <derived name="U_StateBitDword" />
                    </type>
                  </variable>
                  <variable name="uDisabledStatesTest">
                    <type>
                      <derived name="U_StateBitDword" />
                    </type>
                  </variable>
                  <variable name="uTransitionsProduction">
                    <type>
                      <derived name="U_StateBitDword" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Default settings for State Trsnsitions, set in ACT_SetDefaultSettings
	Invalid := 0, Production := 1, Maintenance := 2, Manual := 3, Test := 4</xhtml>
                    </documentation>
                  </variable>
                  <variable name="uTransitionsMaintenance">
                    <type>
                      <derived name="U_StateBitDword" />
                    </type>
                  </variable>
                  <variable name="uTransitionsManual">
                    <type>
                      <derived name="U_StateBitDword" />
                    </type>
                  </variable>
                  <variable name="uTransitionsTest">
                    <type>
                      <derived name="U_StateBitDword" />
                    </type>
                  </variable>
                </localVars>
              </interface>
              <actions>
                <action name="ACT_SetDefaultSettings">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT defaultSettingsDone THEN
	// Todo only once
	defaultSettingsDone := TRUE;
	(*
		Define list of available modes
		Check C_ADMIN_MAXMODESTRANSITION too.
	*)
	uListOfModesConfig.boolMode.Invalid := FALSE;
	uListOfModesConfig.boolMode.Maintenance := TRUE;
	uListOfModesConfig.boolMode.Manual := TRUE;
	uListOfModesConfig.boolMode.Production := TRUE;
	uListOfModesConfig.boolMode.Test := TRUE;
	uListOfModesConfig.boolMode.UserDefinable_5 := FALSE;
	uListOfModesConfig.boolMode.UserDefinable_6 := FALSE;
	uListOfModesConfig.boolMode.UserDefinable_7 := FALSE;
	uListOfModesConfig.boolMode.UserDefinable_8 := FALSE;

    (*
        A value of 1 in a certain bit location indicates that
        the corresponding state number is disabled.
        
        Init disabled states in Production
    *)
    uDisabledStatesProduction.boolState.Aborted := FALSE;
    uDisabledStatesProduction.boolState.Aborting := FALSE;
    uDisabledStatesProduction.boolState.Clearing := FALSE;
    uDisabledStatesProduction.boolState.Completed := FALSE;
    uDisabledStatesProduction.boolState.Completing := FALSE;
    uDisabledStatesProduction.boolState.Execute := FALSE;
    uDisabledStatesProduction.boolState.Held := FALSE;
    uDisabledStatesProduction.boolState.Holding := FALSE;
    uDisabledStatesProduction.boolState.Unholding := FALSE;
    uDisabledStatesProduction.boolState.Idle := FALSE;
    uDisabledStatesProduction.boolState.Resetting := FALSE;
    uDisabledStatesProduction.boolState.Starting := FALSE;
    uDisabledStatesProduction.boolState.Stopped := FALSE;
    uDisabledStatesProduction.boolState.Stopping := FALSE;
    uDisabledStatesProduction.boolState.Suspended := FALSE;
    uDisabledStatesProduction.boolState.Suspending := FALSE;
    uDisabledStatesProduction.boolState.Unsuspending := FALSE;
    // For Maintenance
    uDisabledStatesMaintenance.boolState.Aborted := FALSE;
    uDisabledStatesMaintenance.boolState.Aborting := FALSE;
    uDisabledStatesMaintenance.boolState.Clearing := TRUE;
    uDisabledStatesMaintenance.boolState.Completed := TRUE;
    uDisabledStatesMaintenance.boolState.Completing := TRUE;
    uDisabledStatesMaintenance.boolState.Execute := FALSE;
    uDisabledStatesMaintenance.boolState.Held := FALSE;
    uDisabledStatesMaintenance.boolState.Holding := FALSE;
    uDisabledStatesMaintenance.boolState.Unholding := FALSE;
    uDisabledStatesMaintenance.boolState.Idle := FALSE;
    uDisabledStatesMaintenance.boolState.Resetting := FALSE;
    uDisabledStatesMaintenance.boolState.Starting := FALSE;
    uDisabledStatesMaintenance.boolState.Stopped := FALSE;
    uDisabledStatesMaintenance.boolState.Stopping := FALSE;
    uDisabledStatesMaintenance.boolState.Suspended := TRUE;
    uDisabledStatesMaintenance.boolState.Suspending := TRUE;
    uDisabledStatesMaintenance.boolState.Unsuspending := TRUE;
    // For Manual
    uDisabledStatesManual.boolState.Aborted := FALSE;
    uDisabledStatesManual.boolState.Aborting := FALSE;
    uDisabledStatesManual.boolState.Clearing := FALSE;
    uDisabledStatesManual.boolState.Completed := TRUE;
    uDisabledStatesManual.boolState.Completing := TRUE;
    uDisabledStatesManual.boolState.Execute := FALSE;
    uDisabledStatesManual.boolState.Held := TRUE;
    uDisabledStatesManual.boolState.Holding := TRUE;
    uDisabledStatesManual.boolState.Unholding := TRUE;
    uDisabledStatesManual.boolState.Idle := FALSE;
    uDisabledStatesManual.boolState.Resetting := FALSE;
    uDisabledStatesManual.boolState.Starting := TRUE;
    uDisabledStatesManual.boolState.Stopped := FALSE;
    uDisabledStatesManual.boolState.Stopping := FALSE;
    uDisabledStatesManual.boolState.Suspended := TRUE;
    uDisabledStatesManual.boolState.Suspending := TRUE;
    uDisabledStatesManual.boolState.Unsuspending := TRUE;
    // For various test
    uDisabledStatesTest.boolState.Aborted := FALSE;
    uDisabledStatesTest.boolState.Aborting := FALSE;
    uDisabledStatesTest.boolState.Clearing := TRUE;
    uDisabledStatesTest.boolState.Completed := FALSE;
    uDisabledStatesTest.boolState.Completing := FALSE;
    uDisabledStatesTest.boolState.Execute := FALSE;
    uDisabledStatesTest.boolState.Held := FALSE;
    uDisabledStatesTest.boolState.Holding := FALSE;
    uDisabledStatesTest.boolState.Unholding := FALSE;
    uDisabledStatesTest.boolState.Idle := FALSE;
    uDisabledStatesTest.boolState.Resetting := FALSE;
    uDisabledStatesTest.boolState.Starting := FALSE;
    uDisabledStatesTest.boolState.Stopped := FALSE;
    uDisabledStatesTest.boolState.Stopping := FALSE;
    uDisabledStatesTest.boolState.Suspended := FALSE;
    uDisabledStatesTest.boolState.Suspending := FALSE;
    uDisabledStatesTest.boolState.Unsuspending := FALSE;
    
    (*
        A value of 1 in a bit location indicates that a mode 
        transition FROM the corresponding state number is allowed
        
        Init transition states in Production
    *)
    uTransitionsProduction.boolState.Aborted := TRUE;
    uTransitionsProduction.boolState.Aborting := FALSE;
    uTransitionsProduction.boolState.Clearing := FALSE;
    uTransitionsProduction.boolState.Completed := TRUE;
    uTransitionsProduction.boolState.Completing := FALSE;
    uTransitionsProduction.boolState.Execute := FALSE;
    uTransitionsProduction.boolState.Held := TRUE;
    uTransitionsProduction.boolState.Holding := FALSE;
    uTransitionsProduction.boolState.Unholding := FALSE;
    uTransitionsProduction.boolState.Idle := FALSE;
    uTransitionsProduction.boolState.Resetting := FALSE;
    uTransitionsProduction.boolState.Starting := FALSE;
    uTransitionsProduction.boolState.Stopped := TRUE;
    uTransitionsProduction.boolState.Stopping := FALSE;
    uTransitionsProduction.boolState.Suspended := FALSE;
    uTransitionsProduction.boolState.Suspending := FALSE;
    uTransitionsProduction.boolState.Unsuspending := FALSE;
    // For Maintenance
    uTransitionsMaintenance.boolState.Aborted := TRUE;
    uTransitionsMaintenance.boolState.Aborting := FALSE;
    uTransitionsMaintenance.boolState.Clearing := FALSE;
    uTransitionsMaintenance.boolState.Completed := FALSE;
    uTransitionsMaintenance.boolState.Completing := FALSE;
    uTransitionsMaintenance.boolState.Execute := FALSE;
    uTransitionsMaintenance.boolState.Held := TRUE;
    uTransitionsMaintenance.boolState.Holding := FALSE;
    uTransitionsMaintenance.boolState.Unholding := FALSE;
    uTransitionsMaintenance.boolState.Idle := FALSE;
    uTransitionsMaintenance.boolState.Resetting := FALSE;
    uTransitionsMaintenance.boolState.Starting := FALSE;
    uTransitionsMaintenance.boolState.Stopped := TRUE;
    uTransitionsMaintenance.boolState.Stopping := FALSE;
    uTransitionsMaintenance.boolState.Suspended := FALSE;
    uTransitionsMaintenance.boolState.Suspending := FALSE;
    uTransitionsMaintenance.boolState.Unsuspending := FALSE;
    // For Manual Mode
    uTransitionsManual.boolState.Aborted := TRUE;
    uTransitionsManual.boolState.Aborting := FALSE;
    uTransitionsManual.boolState.Clearing := FALSE;
    uTransitionsManual.boolState.Completed := FALSE;
    uTransitionsManual.boolState.Completing := FALSE;
    uTransitionsManual.boolState.Execute := FALSE;
    uTransitionsManual.boolState.Held := FALSE;
    uTransitionsManual.boolState.Holding := FALSE;
    uTransitionsManual.boolState.Unholding := FALSE;
    uTransitionsManual.boolState.Idle := TRUE;
    uTransitionsManual.boolState.Resetting := FALSE;
    uTransitionsManual.boolState.Starting := FALSE;
    uTransitionsManual.boolState.Stopped := TRUE;
    uTransitionsManual.boolState.Stopping := FALSE;
    uTransitionsManual.boolState.Suspended := FALSE;
    uTransitionsManual.boolState.Suspending := FALSE;
    uTransitionsManual.boolState.Unsuspending := FALSE;
    // For Test Mode
    uTransitionsTest.boolState.Aborted := TRUE;
    uTransitionsTest.boolState.Aborting := FALSE;
    uTransitionsTest.boolState.Clearing := FALSE;
    uTransitionsTest.boolState.Completed := TRUE;
    uTransitionsTest.boolState.Completing := FALSE;
    uTransitionsTest.boolState.Execute := FALSE;
    uTransitionsTest.boolState.Held := FALSE;
    uTransitionsTest.boolState.Holding := FALSE;
    uTransitionsTest.boolState.Unholding := FALSE;
    uTransitionsTest.boolState.Idle := FALSE;
    uTransitionsTest.boolState.Resetting := FALSE;
    uTransitionsTest.boolState.Starting := FALSE;
    uTransitionsTest.boolState.Stopped := TRUE;
    uTransitionsTest.boolState.Stopping := FALSE;
    uTransitionsTest.boolState.Suspended := FALSE;
    uTransitionsTest.boolState.Suspending := FALSE;
    uTransitionsTest.boolState.Unsuspending := FALSE;

    (*
        Init PackTag
        Invalid := 0, Production := 1, Maintenance := 2, Manual := 3, Test := 4
    *)
    PackTag.Admin.DisabledStatesCfg[1] := uDisabledStatesProduction.dwState;
    PackTag.Admin.DisabledStatesCfg[2] := uDisabledStatesMaintenance.dwState;
    PackTag.Admin.DisabledStatesCfg[3] := uDisabledStatesManual.dwState;
    PackTag.Admin.DisabledStatesCfg[4] := uDisabledStatesTest.dwState;
   
    PackTag.Admin.ModeTransitionCfg[1] := uTransitionsProduction.dwState;
    PackTag.Admin.ModeTransitionCfg[2] := uTransitionsMaintenance.dwState;
    PackTag.Admin.ModeTransitionCfg[3] := uTransitionsManual.dwState;
    PackTag.Admin.ModeTransitionCfg[4] := uTransitionsTest.dwState;
END_IF</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>87b02d6d-71ac-471e-aa2b-ce43d0a30872</ObjectId>
                    </data>
                  </addData>
                </action>
              </actions>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">uliCount := uliCount + 1;

(*
    Init default transitions and disabled states
*)
ACT_SetDefaultSettings();

(*
    BOOL interface for UI Commands
*)
fbCmdBoolInterface(Reset := PackTag.hevsUI.uiCmdReset,
                   Start := PackTag.hevsUI.uiCmdStart,
                   Stop := PackTag.hevsUI.uiCmdStop,
                   Hold := PackTag.hevsUI.uiCmdHold,
                   Unhold := PackTag.hevsUI.uiCmdUnhold,
                   Suspend := PackTag.hevsUI.uiCmdSuspend,
                   Unsuspend := PackTag.hevsUI.uiCmdUnsuspend,
                   Abort := PackTag.hevsUI.uiCmdAbort,
                   Clear := PackTag.hevsUI.uiCmdClear,
                   Complete := PackTag.hevsUI.uiCmdComplete,
                   // Output to Pack Command
                   eCntrlCmd =&gt; PackTag.Command.CntrlCmd,
                   bCmdChangeRequest =&gt; PackTag.Command.CmdChangeRequest);
				   
(*
	BOOL interface for UI Modes
*)
fbModeBoolInterface(Production := PackTag.hevsUI.uiModeProduction,
                    Maintenance := PackTag.hevsUI.uiModeMaintenance,
					Manual := PackTag.hevsUI.uiModeManual,
					Test := PackTag.hevsUI.uiModeTest,
					// Get actual mode to reset trigger,
					eActualPackMode := PackTag.Status.UnitModeCurrent,
					// Set output commands
    				eCmdUnitMode =&gt; PackTag.Command.UnitMode,
					bCmdUnitModeChangeRequest =&gt; PackTag.Command.UnitModeChangeRequest);
									   

(*
	List of modules, theoretically EM, eventually CM
*)
fbModuleTest(Status_StateCurrent := PackTag.Status.StateCurrent);
whatSC := fbModuleTest.SC;

(*
	Manage states and mode.
    Receive a AND of SC of each mocule
*)
// For test, select one of default DisabledStates DINT registers
//PackTag.Admin.CurDisabledStates := uDisabledStatesProduction.dwState;
PackTag.Admin.CurDisabledStates := uDisabledStatesTest.dwState;

(*
 Synthèse des alarmes et commandes relatives
*) 
fbStopReason(stStopReason := PackTag.Admin.StopReason,
		     stAdminAlarm := PackTag.Admin.Alarm);

fbPackMaster(Enable := TRUE,
			 // Inputs
			 SC_StateComplete := whatSC AND testOtherSC,
             Command_CmdChangeRequest := PackTag.Command.CmdChangeRequest,
	         Command_CntrlCmd := PackTag.Command.CntrlCmd,
			 // Get Stop reason if needed
			 StopReasonCntrlCmd := fbStopReason.stopReasonToMaster,
			 Admin_CurDisabledStates := PackTag.Admin.CurDisabledStates,
			 // Outputs
             Status_StateCurrent =&gt; PackTag.Status.StateCurrent,
			 Status_StateChangeInProcess =&gt; PackTag.Status.StateChangeInProcess,
			 Status_StateRequested =&gt; PackTag.Status.StateRequested,
			 // To help diagnostic and UI
			 strState =&gt; PackTag.hevsUI.uiStateMasterCurrent,
			 strDiagnostic	=&gt; PackTag.hevsUI.uiStateMasterDiagnostic);

fbPackMasterMode(Enable := TRUE,
				 StartupMode := E_PackModes.Production,
				 UMCC_UnitModeChangeComplete := testUMCC,
				 // Command selected Mode
				 Cmd_UnitMode := PackTag.Command.UnitMode,
				 Cmd_UnitModeChangeRequest := PackTag.Command.UnitModeChangeRequest,
				 // Current state, from PackTag (Eventually directly from fbPackMaster.Status_StateCurrent
				 Sts_StateCurrent := PackTag.Status.StateCurrent,
			     // To know if a mode is available.
				 Admin_EnabledModesCfg := uListOfModesConfig.dwMode,
				 // To know available possible transitions
				 Admin_ModeTransitionCfg	:= PackTag.Admin.ModeTransitionCfg,
				 // PackTag Status
				 // Invalid := 0, Production := 1, Maintenance := 2, Manual := 3, Test := 4
				 Sts_UnitModeCurrent =&gt; PackTag.Status.UnitModeCurrent, 
				 Sts_UnitModeRequested =&gt; PackTag.Status.UnitModeRequested,
				 Sts_UnitModeChangeInProcess =&gt; PackTag.Status.UnitModeChangeInProcess,
				 // To help diagnostic and UI
				 stringUnitModeCurrent =&gt; PackTag.hevsUI.uiModeMasterCurrent,
				 stringModeInfo	=&gt; PackTag.hevsUI.uiModeMasterDiagnostic);	
             
fbGetActualBoolState(Enable := TRUE,
                     ePackState := PackTag.Status.StateCurrent,
                     Clearing =&gt; PackTag.hevsUI.uiStateClearing,
                     Stopped =&gt; PackTag.hevsUI.uiStateStopped,
                     Starting =&gt; PackTag.hevsUI.uiStateStarting,
                     Idle =&gt; PackTag.hevsUI.uiStateIdle,
                     Suspended =&gt; PackTag.hevsUI.uiStateSuspended,
                     Execute =&gt; PackTag.hevsUI.uiStateExecute,
                     Stopping =&gt; PackTag.hevsUI.uiStateStopping,
                     Aborting =&gt; PackTag.hevsUI.uiStateAborting,
                     Aborted =&gt; PackTag.hevsUI.uiStateAborted,
                     Holding =&gt; PackTag.hevsUI.uiStateHolding,
                     Held =&gt; PackTag.hevsUI.uiStateHeld,
                     Unholding =&gt; PackTag.hevsUI.uiStateUnholding,
                     Suspending =&gt; PackTag.hevsUI.uiStateSuspending,
                     Unsuspending =&gt; PackTag.hevsUI.uiStateUnsuspending,
                     Resetting =&gt; PackTag.hevsUI.uiStateResetting,
                     Completing =&gt; PackTag.hevsUI.uiStateCompleting,
                     Completed =&gt; PackTag.hevsUI.uiStateCompleted);     
(*
	Some Statistic from state modes and states
*)
fbPackStatistic(Enable := TRUE,
	            plcCurrentTime_s := PackTag.hevsPackTime.Local_date_time_seconds,
				unitCurrentMode	:= PackTag.Status.UnitModeCurrent,
			    unitCurrentState := PackTag.Status.StateCurrent,
			    unitAdmin := PackTag.Admin);
	            </xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>5c35c50a-157a-4d4c-902b-ae375026ac63</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_PackModeBoolInterface" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="Production">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Maintenance">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Manual">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Test">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="User_05">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="User_06">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="User_07">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="User_08">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="eActualPackMode">
                    <type>
                      <derived name="E_PackModes" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Check change</xhtml>
                    </documentation>
                  </variable>
                  <variable name="remoteEnable">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> For remote, to be completed</xhtml>
                    </documentation>
                  </variable>
                  <variable name="remoteMode">
                    <type>
                      <derived name="E_PackModes" />
                    </type>
                  </variable>
                </inputVars>
                <outputVars>
                  <variable name="eCmdUnitMode">
                    <type>
                      <derived name="E_PackModes" />
                    </type>
                  </variable>
                  <variable name="bCmdUnitModeChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="waitCycle">
                    <type>
                      <UDINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Trigger detect a new Change Mode
 That is, new mode is difference than the old one.
 Delay bCmdUnitModeChangeRequest of one cycle, beause
 new mode MUST be present before change request</xhtml>
                    </documentation>
                  </variable>
                  <variable name="uliTrigCounter">
                    <type>
                      <ULINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> For debut, allows to show activation of trigger</xhtml>
                    </documentation>
                  </variable>
                  <variable name="timeToResetCommand_ms">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="3000" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Reset command if no change after 3000 ms</xhtml>
                    </documentation>
                  </variable>
                  <variable name="timerToResetCommand">
                    <type>
                      <derived name="TON" />
                    </type>
                  </variable>
                </localVars>
                <localVars constant="true">
                  <variable name="C_WAIT_CYCLE">
                    <type>
                      <UDINT />
                    </type>
                    <initialValue>
                      <simpleValue value="3" />
                    </initialValue>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 29
	
	Summary:	This FB converts Pack BOOL commnds to
             Cmd_UnitMode			    : DINT;
	            Cmd_UnitModeChangeRequest	: BOOL;
             Cmd on rising edge only

             Modes are evaluated with this priority
             Production - Maintenance - Manual - Test - User_05 - User_06 - User_07 - User_08
</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Production THEN
    eCmdUnitMode := E_PackModes.Production;
ELSIF Maintenance THEN
    eCmdUnitMode := E_PackModes.Maintenance;
ELSIF Manual THEN 
    eCmdUnitMode := E_PackModes.Manual;
ELSIF Test THEN
    eCmdUnitMode := E_PackModes.Test;
ELSIF User_05 THEN 
    eCmdUnitMode := E_PackModes.User_05;
ELSIF User_06 THEN
    eCmdUnitMode := E_PackModes.User_06;
ELSIF User_07 THEN
    eCmdUnitMode := E_PackModes.User_07;
ELSIF User_08 THEN
    eCmdUnitMode := E_PackModes.User_08;
ELSE
	// Invalid, do not set invalid mode at output
    eCmdUnitMode := E_PackModes.Invalid;
END_IF

// Do not process invalid mode
IF NOT (eCmdUnitMode = E_PackModes.Invalid) THEN
	// Do not process if cmd is actual mode.
	IF eActualPackMode = eCmdUnitMode THEN
		bCmdUnitModeChangeRequest := FALSE;
		waitCycle := 0;
	ELSE // Mean eCmdUnitMode is new
		waitCycle := waitCycle + 1;
		IF waitCycle &gt; C_WAIT_CYCLE THEN
			bCmdUnitModeChangeRequest := TRUE;
			// Diagnostic, call of change request
			uliTrigCounter := uliTrigCounter + 1;
		END_IF
	END_IF
END_IF

// Reset command after some time if not possible to change mode.
timerToResetCommand(IN := bCmdUnitModeChangeRequest,
                    PT := INT_TO_TIME(timeToResetCommand_ms));

IF timerToResetCommand.Q THEN
	// Time for change elapsed, command rejected
	// Could be No Valid transition bit
	bCmdUnitModeChangeRequest := FALSE;
END_IF
 
</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>4f86ac17-014e-4bfb-9159-6b8b7f3e80cf</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_ModuleTest" pouType="functionBlock">
              <interface>
                <inOutVars>
                  <variable name="Status_StateCurrent">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> has to take the PackTag Status.StateCurrent</xhtml>
                    </documentation>
                  </variable>
                </inOutVars>
                <localVars>
                  <variable name="stateLastCycie">
                    <type>
                      <derived name="E_PackState" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackState.eUndefined" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Store last cycle at the en of FB call to detect and state change
 Used to force minimum of one testSC.In = 0 and reset SC once between each SC</xhtml>
                    </documentation>
                  </variable>
                  <variable name="actualState">
                    <type>
                      <derived name="E_PackState" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackState.eAborted" />
                    </initialValue>
                  </variable>
                  <variable name="init">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="testSC">
                    <type>
                      <derived name="TON" />
                    </type>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 06
	
	Summary:	Used to test and simulate first version of PackMaster
                Does nothing in Waitstates
                Wait 2.5 secoond before to return SC in </xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT init THEN
    init := TRUE;
END_IF

actualState := Status_StateCurrent;

CASE actualState OF
    E_PackState.eUndefined      :;
    E_PackState.eClearing       :;  // Acting
    E_PackState.eStopped        :;
    E_PackState.eStarting       :;  // Acting
    E_PackState.eIdle           :;
    E_PackState.eSuspended      :;
    E_PackState.eExecute        :;  // Acting
    E_PackState.eStopping       :;  // Acting
    E_PackState.eAborting       :;  // Acting
    E_PackState.eAborted        :;
    E_PackState.eHolding        :;  // Acting
    E_PackState.eHeld           :;
    E_PackState.eUnholding      :;  // Acting
    E_PackState.eSuspending     :;  // Acting
    E_PackState.eUnsuspending   :;  // Acting
    E_PackState.eResetting      :;  // Acting
    E_PackState.eCompleting     :;  // Acting
    E_PackState.eCompleted      :;
END_CASE

testSC(IN :=((actualState = E_PackState.eClearing)      OR
             (actualState = E_PackState.eStarting)      OR
             (actualState = E_PackState.eExecute)       OR
             (actualState = E_PackState.eStopping)      OR
             (actualState = E_PackState.eAborting)      OR
             (actualState = E_PackState.eHolding)       OR
             (actualState = E_PackState.eUnholding)     OR
             (actualState = E_PackState.eSuspending)    OR
             (actualState = E_PackState.eUnsuspending)  OR
             (actualState = E_PackState.eResetting)     OR
             (actualState = E_PackState.eCompleting)) AND
             (stateLastCycie = actualState),
        PT := T#2500MS); 
           
stateLastCycie := actualState;</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/property" handleUnknown="implementation">
                  <Property name="SC" ObjectId="efa286d9-f5c0-40b3-bb08-a9d6eedea102">
                    <interface>
                      <returnType>
                        <BOOL />
                      </returnType>
                      <Attributes>
                        <Attribute Name="monitoring" Value="variable" />
                      </Attributes>
                    </interface>
                    <GetAccessor>
                      <interface>
                        <addData>
                          <data name="http://www.3s-software.com/plcopenxml/attributes" handleUnknown="implementation">
                            <Attributes>
                              <Attribute Name="monitoring" Value="variable" />
                            </Attributes>
                          </data>
                        </addData>
                      </interface>
                      <body>
                        <ST>
                          <xhtml xmlns="http://www.w3.org/1999/xhtml">SC := testSC.Q;</xhtml>
                        </ST>
                      </body>
                      <addData />
                    </GetAccessor>
                    <addData />
                  </Property>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>601ff330-a649-4e31-80da-fb610f5e1307</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_PackMasterState" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="Enable">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="SC_StateComplete">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Current Acting state of each module is finished.</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Command_CntrlCmd">
                    <type>
                      <derived name="E_PackCmd" />
                    </type>
                  </variable>
                  <variable name="Command_CmdChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="StopReasonCntrlCmd">
                    <type>
                      <derived name="E_PackCmd" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackCmd.eUndefined" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> This input is used to transform a Stop Reason to cmd.
 If not used, set it to 0 or E_PackCmd.eUndefined</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Admin_CurDisabledStates">
                    <type>
                      <DWORD />
                    </type>
                    <initialValue>
                      <simpleValue value="0" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> In 32 bits, list of disabled states, by default: 0</xhtml>
                    </documentation>
                  </variable>
                </inputVars>
                <outputVars>
                  <variable name="Active">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Status_StateRequested">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Status_StateChangeInProcess">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Status_StateCurrent">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="timeOut">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> TRUE if SC State Complete not present for more than timeTimeOut
 Could be used for a Warning.</xhtml>
                    </documentation>
                  </variable>
                  <variable name="strState">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'FB not Active'" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> For UI diagnostic and info</xhtml>
                    </documentation>
                  </variable>
                  <variable name="strDiagnostic">
                    <type>
                      <string />
                    </type>
                    <initialValue>
                      <simpleValue value="'FB not active'" />
                    </initialValue>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="masterState">
                    <type>
                      <derived name="E_PackState" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackState.eAborted" />
                    </initialValue>
                  </variable>
                  <variable name="cntrlCmd">
                    <type>
                      <derived name="E_PackCmd" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Receive cmd info from Command_CntrlCmd</xhtml>
                    </documentation>
                  </variable>
                  <variable name="localDisabledStates">
                    <type>
                      <derived name="U_StateBitDword" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Used to clean Admin_CurDisabledStates if needed.
 That is, remove acting states if the linked wait state is not present.
 Use a Union Variant of DWORD</xhtml>
                    </documentation>
                  </variable>
                  <variable name="timeTimeOut_ms">
                    <type>
                      <INT />
                    </type>
                    <initialValue>
                      <simpleValue value="5000" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> This timer is used to send some info if SC not present for long time.
 Time in ms, default 5000 means 5 [s]</xhtml>
                    </documentation>
                  </variable>
                  <variable name="timeOutCheck">
                    <type>
                      <derived name="TON" />
                    </type>
                  </variable>
                </localVars>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Enable THEN
// 	IF Command_CmdChangeRequest THEN
// 		cntrlCmd := Command_CntrlCmd;
// 	ELSE
// 		cntrlCmd := E_PackCmd.eUndefined;
// 	END_IF

	// Variant to use StopReasonCntrlCmd for
	IF Command_CmdChangeRequest 		OR
		StopReasonCntrlCmd &lt;&gt; E_PackCmd.eUndefined THEN
		cntrlCmd := Command_CntrlCmd;
	 	// Check if one flag of StopReasonCntrlCmd
		// has priority over Command_CntrlCmd
		CASE StopReasonCntrlCmd OF
		E_PackCmd.eAbort:
			cntrlCmd := E_PackCmd.eAbort;
		E_PackCmd.eStop:
			IF NOT (cntrlCmd = E_PackCmd.eAbort) THEN
				cntrlCmd := E_PackCmd.eStop;
			END_IF
		E_PackCmd.eComplete:
			IF NOT ((cntrlCmd = E_PackCmd.eAbort) OR
                    (cntrlCmd = E_PackCmd.eStop)) THEN
				cntrlCmd := E_PackCmd.eComplete;
			END_IF
		E_PackCmd.eHold:
			IF NOT ((cntrlCmd = E_PackCmd.eAbort)     OR
                    (cntrlCmd = E_PackCmd.eStop)      OR
                    (cntrlCmd = E_PackCmd.eComplete)) THEN
				cntrlCmd := E_PackCmd.eHold;
			END_IF
		E_PackCmd.eSuspend:
			IF NOT ((cntrlCmd = E_PackCmd.eAbort)     OR
                    (cntrlCmd = E_PackCmd.eStop)      OR
                    (cntrlCmd = E_PackCmd.eComplete)  OR
                    (cntrlCmd = E_PackCmd.eHold))     THEN
				cntrlCmd := E_PackCmd.eSuspend;
			END_IF
		ELSE // Not a stop command.
			// Do not modify Command_CntrlCmd
			;
		END_CASE
		
	ELSE
		cntrlCmd := E_PackCmd.eUndefined;
	END_IF
	
	(*
		Check Admin_CurDisabledStates
		
		Minimum states : Stopped - Idle - Execute - Aborted
	*)
	localDisabledStates.dwState := Admin_CurDisabledStates;
	// Remove extra states for Hold loop
	IF (localDisabledStates.boolState.Held = 1) THEN
		localDisabledStates.boolState.Holding := 1;
		localDisabledStates.boolState.Unholding := 1;
	END_IF
	// Remove extra states for Suspend loop
	IF (localDisabledStates.boolState.Suspended = 1) THEN
		localDisabledStates.boolState.Suspending := 1;
		localDisabledStates.boolState.Unsuspending := 1;
	END_IF
	// Remove extra states for Complete loop
	IF (localDisabledStates.boolState.Completed = 1) THEN
		localDisabledStates.boolState.Completing := 1;
	END_IF
	
	CASE masterState OF														// Based off Production Mode ISA-TR88.00.02-2022
		E_PackState.eUndefined	:
			strState := 'Not Active';
			;
		E_PackState.eAborting 	:
			strState := 'Aborting';
			IF SC_StateComplete THEN
				masterState := E_PackState.eAborted;
			END_IF
			
		E_PackState.eAborted 	:
			strState := 'Aborted';
			IF cntrlCmd = E_PackCmd.eClear THEN								// Clearing is done by the reset. Look at ISA-TR88.00.02-2022
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eClearing,
												   statedisabled := localDisabledStates.boolState.Clearing = 1,
												   nextWaitState := E_PackState.eStopped);
				// masterState := E_PackState.eClearing;
			END_IF
		
		E_PackState.eClearing 	:
			strState := 'Clearing';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				// masterState := E_PackState.eAborting;
			ELSIF SC_StateComplete THEN
				masterState := E_PackState.eStopped;	
			END_IF
	
		E_PackState.eStopped 	:
			strState := 'Stopped';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eReset THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eResetting,
												   statedisabled := localDisabledStates.boolState.Resetting = 1,
												   nextWaitState := E_PackState.eIdle);			
				
				// masterState := E_PackState.eResetting;
			END_IF
	
		E_PackState.eStopping 	:
			strState := 'Stopping';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				// masterState := E_PackState.eAborting;
			ELSIF SC_StateComplete THEN
				masterState := E_PackState.eStopped;
			END_IF
	
		E_PackState.eResetting 	:
			strState := 'Resetting';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				// masterState := E_PackState.eStopping;
			ELSIF SC_StateComplete THEN
				masterState := E_PackState.eIdle;			
			END_IF
	
		E_PackState.eIdle 		:
			strState := 'Idle';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				// masterState := E_PackState.eStopping;
			ELSIF cntrlCmd = E_PackCmd.eStart THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStarting,
												   statedisabled := localDisabledStates.boolState.Starting = 1,
												   nextWaitState := E_PackState.eExecute);	
				
				// masterState := E_PackState.eStarting;
			END_IF
	
		E_PackState.eStarting 	:
			strState := 'Starting';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				
				// masterState := E_PackState.eStopping;
			ELSIF SC_StateComplete THEN
				masterState := E_PackState.eExecute;	
			END_IF
	
		E_PackState.eExecute 	:
			strState := 'Execute';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				
				// masterState := E_PackState.eStopping;
			ELSIF cntrlCmd = E_PackCmd.eHold AND 
				  // If Hold disabled
				  NOT (localDisabledStates.boolState.Held = 1) THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eHolding,
												   statedisabled := localDisabledStates.boolState.Holding = 1,
												   nextWaitState := E_PackState.eHeld);				  
				// masterState := E_PackState.eHolding;	
			ELSIF cntrlCmd = E_PackCmd.eSuspend  AND 
				  // If Suspend disabled
				  NOT (localDisabledStates.boolState.Suspended = 1) THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eSuspending,
												   statedisabled := localDisabledStates.boolState.Suspending = 1,
												   nextWaitState := E_PackState.eSuspended);				  
				// masterState := E_PackState.eSuspending;	
			ELSIF cntrlCmd = E_PackCmd.eComplete AND 
				  // If Completed disabled
				  NOT (localDisabledStates.boolState.Completed = 1) THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eCompleting,
												   statedisabled := localDisabledStates.boolState.Completing = 1,
												   nextWaitState := E_PackState.eCompleted);				  
				// masterState := E_PackState.eCompleting;	
			END_IF
			
			
		(* Held Loop *)
		E_PackState.eHolding	:
			strState := 'Holding';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				
				// masterState := E_PackState.eStopping;
			ELSIF SC_StateComplete THEN
				masterState := E_PackState.eHeld;	
			END_IF
			
		E_PackState.eHeld		:
			strState := 'Held';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				
				// masterState := E_PackState.eCompleting;
			ELSIF cntrlCmd = E_PackCmd.eComplete AND 
				  // If Completed disabled
				  NOT (localDisabledStates.boolState.Completed = 1) THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eCompleting,
												   statedisabled := localDisabledStates.boolState.Completing = 1,
												   nextWaitState := E_PackState.eCompleted);				  
				// masterState := E_PackState.eCompleting;            
			ELSIF cntrlCmd = E_PackCmd.eUnhold THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eUnholding,
												   statedisabled := localDisabledStates.boolState.Unholding = 1,
												   nextWaitState := E_PackState.eExecute);				  
				// masterState := E_PackState.eUnholding;
			END_IF
	
		E_PackState.eUnholding	:
			strState := 'Unholding';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				
				// masterState := E_PackState.eStopping;
			ELSIF SC_StateComplete THEN
				masterState := E_PackState.eExecute;	
			END_IF
			
		E_PackState.eSuspending	:
			strState := 'Suspending';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				
				// masterState := E_PackState.eStopping;
			ELSIF SC_StateComplete THEN
				masterState := E_PackState.eSuspended;	
			END_IF
			
		E_PackState.eUnsuspending	:
			strState := 'Unsuspending';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				
				// masterState := E_PackState.eStopping;
			ELSIF SC_StateComplete THEN
				masterState := E_PackState.eExecute;	
			END_IF
			
		E_PackState.eSuspended	:
			strState := 'Suspended';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				// masterState := E_PackState.eStopping;
			ELSIF cntrlCmd = E_PackCmd.eComplete AND 
				  // If Completed disabled
				  NOT (localDisabledStates.boolState.Completed = 1) THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eCompleting,
												   statedisabled := localDisabledStates.boolState.Completing = 1,
												   nextWaitState := E_PackState.eCompleted);			
				// masterState := E_PackState.eCompleting;	
			ELSIF cntrlCmd = E_PackCmd.eHold AND 
				  // If Hold disabled
				  NOT (localDisabledStates.boolState.Held = 1) THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eHolding,
												   statedisabled := localDisabledStates.boolState.Holding = 1,
												   nextWaitState := E_PackState.eHeld);			
				// masterState := E_PackState.eHolding;	
			ELSIF cntrlCmd = E_PackCmd.eUnsuspend THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eUnsuspending,
												   statedisabled := localDisabledStates.boolState.Unsuspending = 1,
												   nextWaitState := E_PackState.eExecute);			
				// masterState := E_PackState.eUnsuspending;
			END_IF
			
		E_PackState.eCompleting	:
			strState := 'Completing';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				
				// masterState := E_PackState.eStopping;
			ELSIF SC_StateComplete THEN
				masterState := E_PackState.eCompleted;
			END_IF
			
		E_PackState.eCompleted	:
			strState := 'Completed';
			// E-Stop Active Low
			IF cntrlCmd = E_PackCmd.eAbort THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eAborting,
												   statedisabled := localDisabledStates.boolState.Aborting = 1,
												   nextWaitState := E_PackState.eAborted);			
				
				// masterState := E_PackState.eAborting;
			ELSIF cntrlCmd = E_PackCmd.eStop THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eStopping,
												   statedisabled := localDisabledStates.boolState.Stopping = 1,
												   nextWaitState := E_PackState.eStopped);	
				// masterState := E_PackState.eStopping;
			ELSIF cntrlCmd = E_PackCmd.eReset THEN
				masterState := M_SkipDisabledState(baseTransition := E_PackState.eResetting,
												   statedisabled := localDisabledStates.boolState.Resetting = 1,
												   nextWaitState := E_PackState.eIdle);	
				// masterState := E_PackState.eResetting;
			END_IF
			
	END_CASE
	
	(*
		Set output of FB
	*)
	IF Command_CmdChangeRequest THEN
		Status_StateRequested := Command_CntrlCmd;
	ELSE
		Status_StateRequested := E_PackState.eUndefined;	
	END_IF
	Status_StateChangeInProcess := Command_CmdChangeRequest AND (Status_StateRequested &lt;&gt; Status_StateCurrent);
	Status_StateCurrent := masterState;

	// Check Time out
	timeOutCheck(IN := (masterState = E_PackState.eAborting)   OR
                       (masterState = E_PackState.eClearing)   OR
                       (masterState = E_PackState.eCompleting) OR
                       (masterState = E_PackState.eHolding)    OR
                       (masterState = E_PackState.eResetting)  OR
                       (masterState = E_PackState.eStarting)   OR
                       (masterState = E_PackState.eStopping)   OR
                       (masterState = E_PackState.eSuspending) OR
                       (masterState = E_PackState.eUnholding)  OR
                       (masterState = E_PackState.eUnsuspending),
		         PT := INT_TO_TIME(timeTimeOut_ms));
				 
	IF timeOutCheck.Q THEN
		strDiagnostic := CONCAT('Timeout with: ',strState);
	ELSE
		strDiagnostic := 'No Message';
	END_IF

	Active := TRUE;
ELSE // FB not Enable
	Active := FALSE;
	strState := 'FB not Active';
	strDiagnostic := 'FB not active';	
END_IF
</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/method" handleUnknown="implementation">
                  <Method name="M_SkipDisabledState" ObjectId="2f2f8118-76b4-4f15-9b26-e73c2e248849">
                    <interface>
                      <returnType>
                        <derived name="E_PackState" />
                      </returnType>
                      <inputVars>
                        <variable name="baseTransition">
                          <type>
                            <derived name="E_PackState" />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml"> Next state if statedisabled is FALSE</xhtml>
                          </documentation>
                        </variable>
                        <variable name="statedisabled">
                          <type>
                            <BOOL />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml"> Disabled condition, e.g. (localDisabledStates.boolState.Stopping = 1)</xhtml>
                          </documentation>
                        </variable>
                        <variable name="nextWaitState">
                          <type>
                            <derived name="E_PackState" />
                          </type>
                          <documentation>
                            <xhtml xmlns="http://www.w3.org/1999/xhtml"> Next state if statedisabled is TRUE</xhtml>
                          </documentation>
                        </variable>
                      </inputVars>
                      <addData>
                        <data name="http://www.3s-software.com/plcopenxml/accessmodifiers" handleUnknown="implementation">
                          <AccessModifiers Private="true" />
                        </data>
                      </addData>
                    </interface>
                    <body>
                      <ST>
                        <xhtml xmlns="http://www.w3.org/1999/xhtml">IF NOT statedisabled THEN
	M_SkipDisabledState := baseTransition;
ELSE
	M_SkipDisabledState := nextWaitState;
END_IF</xhtml>
                      </ST>
                    </body>
                    <addData />
                  </Method>
                </data>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>0de1fa31-8e47-4928-9177-469e85c196ac</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_GetActualBoolState" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="Enable">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="ePackState">
                    <type>
                      <derived name="E_PackState" />
                    </type>
                  </variable>
                </inputVars>
                <outputVars>
                  <variable name="Active">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Clearing">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Stopped">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Starting">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Idle">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Suspended">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Execute">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Stopping">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Aborting">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Aborted">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Holding">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Held">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Unholding">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Suspending">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Unsuspending">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Resetting">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Completing">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Completed">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </outputVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 27
	
	Summary:	This FB return the BOOL State format of:
             PackTag.Status.StateCurrent                </xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Enable THEN
	Clearing := ePackState = E_PackState.eClearing;
	Stopped := ePackState = E_PackState.eStopped;
	Starting := ePackState = E_PackState.eStarting;
	Idle := ePackState = E_PackState.eIdle;
	Suspended := ePackState = E_PackState.eSuspended;
	Execute := ePackState = E_PackState.eExecute;
	Stopping := ePackState = E_PackState.eStopping;
	Aborting := ePackState = E_PackState.eAborting;
	Aborted := ePackState = E_PackState.eAborted;
	Holding := ePackState = E_PackState.eHolding;
	Held := ePackState = E_PackState.eHeld;
	Unholding := ePackState = E_PackState.eUnholding;
	Suspending := ePackState = E_PackState.eSuspending;
	Unsuspending := ePackState = E_PackState.eUnsuspending;
	Resetting := ePackState = E_PackState.eResetting;
	Completing := ePackState = E_PackState.eCompleting;
	Completed := ePackState = E_PackState.eCompleted;    
ELSE
	Clearing := FALSE;
	Stopped := FALSE;
	Starting := FALSE;
	Idle := FALSE;
	Suspended := FALSE;
	Execute := FALSE;
	Stopping := FALSE;
	Aborting := FALSE;
	Aborted := FALSE;
	Holding := FALSE;
	Held := FALSE;
	Unholding := FALSE;
	Suspending := FALSE;
	Unsuspending := FALSE;
	Resetting := FALSE;
	Completing := FALSE;
	Completed := FALSE;     
END_IF

Active := Enable;</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>6affd389-50f5-4341-b972-670c6d1ab193</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_PackMasterMode" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="Enable">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="UMCC_UnitModeChangeComplete">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="TRUE" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Unit Mode Change Complete, must be TRUE when all Module have finiched Change.
 If no delay requested, could be set to TRUE by default</xhtml>
                    </documentation>
                  </variable>
                  <variable name="StartupMode">
                    <type>
                      <DINT />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackModes.Production" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Read once at first cycle, cannot be changed later.</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Cmd_UnitMode">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Command selected Mode, must be present when Cmd_UnitModeChangeRequest is activated. </xhtml>
                    </documentation>
                  </variable>
                  <variable name="Cmd_UnitModeChangeRequest">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Command is set upon rising edge of the boolean.</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Sts_StateCurrent">
                    <type>
                      <DINT />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackState.eAborted" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> The actual state is needed to determine if transition is possible in Admin_ModeTransitionCfg</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Admin_EnabledModesCfg">
                    <type>
                      <DWORD />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> To know if a mode is available.</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Admin_ModeTransitionCfg">
                    <type>
                      <array>
                        <dimension lower="1" upper="HEVS_PackTag_GVL.C_ADMIN_MAXMODESTRANSITION" />
                        <baseType>
                          <DWORD />
                        </baseType>
                      </array>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> To know available possible transitions</xhtml>
                    </documentation>
                  </variable>
                </inputVars>
                <outputVars>
                  <variable name="Active">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> FB Active</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Sts_UnitModeCurrent">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Invalid := 0, Production := 1, Maintenance := 2, Manual := 3, Test := 4</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Sts_UnitModeRequested">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Invalid if not Cmd_UnitModeChangeRequest</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Sts_UnitModeChangeInProcess">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="stringUnitModeCurrent">
                    <type>
                      <string />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> UnitModeCurrent in STRING format
 Actually set in the code of This FB.</xhtml>
                    </documentation>
                  </variable>
                  <variable name="stringModeInfo">
                    <type>
                      <string />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Change mode Help, some info				</xhtml>
                    </documentation>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="uliLoop">
                    <type>
                      <ULINT />
                    </type>
                  </variable>
                  <variable name="currentMode">
                    <type>
                      <DINT />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackModes.Production" />
                    </initialValue>
                  </variable>
                  <variable name="bInitDone">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="rTrigChangeRequest">
                    <type>
                      <derived name="R_TRIG" />
                    </type>
                  </variable>
                  <variable name="internalChangeInProgress">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Use to maintain change mode until end of change.</xhtml>
                    </documentation>
                  </variable>
                  <variable name="stringModeCurrent">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXMODESTRANSITION" />
                        <baseType>
                          <string />
                        </baseType>
                      </array>
                    </type>
                    <initialValue>
                      <arrayValue>
                        <value>
                          <simpleValue value="'Invalid'" />
                        </value>
                        <value>
                          <simpleValue value="'Production'" />
                        </value>
                        <value>
                          <simpleValue value="'Maintenance'" />
                        </value>
                        <value>
                          <simpleValue value="'Manual'" />
                        </value>
                        <value>
                          <simpleValue value="'Test HEVS'" />
                        </value>
                        <value>
                          <simpleValue value="'User 05'" />
                        </value>
                        <value>
                          <simpleValue value="'User 06'" />
                        </value>
                        <value>
                          <simpleValue value="'User 07'" />
                        </value>
                        <value>
                          <simpleValue value="'User 08'" />
                        </value>
                      </arrayValue>
                    </initialValue>
                  </variable>
                  <variable name="uliTriggerChangeRequested">
                    <type>
                      <ULINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> For diagnostic			</xhtml>
                    </documentation>
                  </variable>
                  <variable name="bValidModeFound">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="setTestDWord">
                    <type>
                      <DWORD />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Compute a DWord with exactly one bit</xhtml>
                    </documentation>
                  </variable>
                  <variable name="internalCurrentModeEnblTra">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Current mode enable transition from state</xhtml>
                    </documentation>
                  </variable>
                  <variable name="internalTargetModeEnblTra">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Target mode enable transition to state</xhtml>
                    </documentation>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 28
	
	Summary:	Mode manager
				Default at start is Production mode := 1				</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Enable THEN
	IF NOT bInitDone THEN
		bInitDone := TRUE;
		currentMode := StartupMode;
		stringUnitModeCurrent := stringModeCurrent[currentMode];
	END_IF
	uliLoop := uliLoop + 1;

	rTrigChangeRequest(clk := Cmd_UnitModeChangeRequest);

	// Main condition to start a change request is Cmd_UnitModeChangeRequest
	// Once the change has started, it is maintained until the change is complete.
	IF rTrigChangeRequest.Q 									  AND 
	   // Change only possible if Cmd_UnitMode &lt; max unit modes, else ignord
	   Cmd_UnitMode &lt; HEVS_PackTag_GVL.C_ADMIN_MAXMODESTRANSITION AND
	   // Cmd_UnitMode MUST NOT be 0
	   Cmd_UnitMode &gt; 0											  AND
	   // Do not process anything if mode is equal to currentMode 
	   Cmd_UnitMode &lt;&gt; currentMode                                AND
	   // Admin.EnabledModesCfg = 1 or less means no valid mode enabled
	   Admin_EnabledModesCfg &gt; 1								  THEN
	   
	   bValidModeFound := TRUE;
	   uliTriggerChangeRequested := uliTriggerChangeRequested + 1;
	   // A valid mode number is available and enabled
	   // Compute test DWORD
	   setTestDWord := 1;
	   setTestDWord := SHL(setTestDWord,Sts_StateCurrent);
	   // For Current mode
	   internalCurrentModeEnblTra := (Admin_ModeTransitionCfg[currentMode] AND setTestDWord) = setTestDWord;
	   // For target mode
	   internalTargetModeEnblTra := (Admin_ModeTransitionCfg[Cmd_UnitMode] AND setTestDWord) = setTestDWord;

	   // Check if there are valid states transitions in Admin_ModeTransitionCfg
	   IF internalCurrentModeEnblTra AND
		  internalTargetModeEnblTra  THEN
			 internalChangeInProgress := TRUE;
			 stringUnitModeCurrent := 'Mode is Changing';
			 stringModeInfo := 'Wait UMCC_UnitModeChangeComplete';
	   ELSE
		   // Do nothing
	      stringModeInfo := 'No valid transition bits';
	   END_IF
		
	   // Check
	ELSIF NOT bValidModeFound THEN
		// Do nothing
		stringModeInfo := 'No valid mode';
    ELSE
		// Do nothing
		;
	END_IF	
	
	// Once internalChangeInProgress is set,
	// wait UMCC_UnitModeChangeComplete for end of mode change.
	IF internalChangeInProgress    AND
	   UMCC_UnitModeChangeComplete THEN
		internalChangeInProgress := FALSE;
		// Update current mode
		currentMode := Cmd_UnitMode;
		stringUnitModeCurrent := stringModeCurrent[currentMode];
		stringModeInfo := 'Mode changed successfully';
	END_IF
	(*
		Manage outputs
	*)
	Active := Enable;
	Sts_UnitModeCurrent := currentMode;
	IF Cmd_UnitModeChangeRequest THEN
		Sts_UnitModeRequested := Cmd_UnitMode;
	ELSE
		Sts_UnitModeRequested := E_PackModes.Invalid;
	END_IF
	Sts_UnitModeChangeInProcess := internalChangeInProgress AND (Cmd_UnitMode &lt;&gt; currentMode);
	
	IF NOT Cmd_UnitModeChangeRequest THEN
		bValidModeFound := FALSE;
		stringModeInfo := 'Wait Cmd_UnitModeChangeRequest';
	END_IF	
ELSE // FB not Enable, reset outputs
	Active := FALSE;
	Sts_UnitModeCurrent := 0;
	Sts_UnitModeRequested := 0;
	Sts_UnitModeChangeInProcess	:= FALSE;
	stringUnitModeCurrent := 'FB Not active';
	// Change mode Help, some info				
	stringModeInfo := 'FB Not active';	
END_IF

</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>e6266108-2902-4df5-af45-0b3e6b914fe1</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="PRG_GetTime_CtrlX" pouType="program">
              <interface>
                <localVars>
                  <variable name="Date_and_Time_result">
                    <type>
                      <UDINT />
                    </type>
                  </variable>
                  <variable name="Local_date_time_from_secs">
                    <type>
                      <derived name="SYSTIMEDATE" />
                    </type>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 29
	
	This program compute time for CtrlX Core
 If you use another hardware, you could have to change it.
 Needed to fill PackTag.hevsPackTime
</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// Get time in seconds since 1970 :
PackTag.hevsPackTime.Date_and_time_in_seconds := SysTimeRtcGet(Date_and_Time_result);
IF Date_and_Time_result &lt;&gt; 0 THEN
RETURN;
END_IF

// Convert UTC seconds to local time seconds, regarding Timezone and Summer time :
Date_and_Time_result := SysTimeRtcConvertUtcToLocal(PackTag.hevsPackTime.Date_and_time_in_seconds,
                                                    PackTag.hevsPackTime.Local_date_time_seconds);
IF Date_and_Time_result &lt;&gt; 0 THEN
RETURN;
END_IF

// Convert the UTC seconds to a DATE_AND_TIME variable dt#yyyy-mm-dd-hh:mm:ss :
PackTag.hevsPackTime.Date_and_time_format := UDINT_TO_DT(PackTag.hevsPackTime.Local_date_time_seconds);

// Convert DATE_AND_TIME to a String :
PackTag.hevsPackTime.Date_and_time_string := DT_TO_STRING(PackTag.hevsPackTime.Date_and_time_format);

// Finally, set PackTag Date and Time
PackTag.Admin.PLCDateTime := PackTag.hevsPackTime.Date_and_time_format;</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>80fdabaa-4283-4d32-ab4e-3a431464d5d7</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_ExecuteDone" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="Execute">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </inputVars>
                <outputVars>
                  <variable name="Done">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Active">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Error">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="rExecute">
                    <type>
                      <derived name="R_TRIG" />
                    </type>
                  </variable>
                  <variable name="eExecuteDone">
                    <type>
                      <derived name="E_ExecuteDone" />
                    </type>
                  </variable>
                  <variable name="errorCondition">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="doneCondition">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
	A function block of type Execute Done
	
	Source: www.hevs.ch
	Author: Cedric Lenoir
	Date: 22 August 2024
</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">(* 
	Manage Inputs
*)
rExecute(CLK := Execute);

CASE eExecuteDone OF
	E_ExecuteDone.Idle :
		IF rExecute.Q THEN
			eExecuteDone := E_ExecuteDone.Init;
		END_IF

	E_ExecuteDone.Init :
		// No init
		IF errorCondition THEN
			eExecuteDone := E_ExecuteDone.Error;
		ELSE
			eExecuteDone := E_ExecuteDone.InOp;
		END_IF

	E_ExecuteDone.InOp :
		IF errorCondition THEN
			eExecuteDone := E_ExecuteDone.Error;
		ELSIF doneCondition THEN
			eExecuteDone := E_ExecuteDone.Done;
		END_IF
	
	E_ExecuteDone.Done :
		IF NOT Execute THEN
			eExecuteDone := E_ExecuteDone.Idle;
		END_IF

	E_ExecuteDone.Error :
		IF NOT Execute THEN
			eExecuteDone := E_ExecuteDone.Idle;
		END_IF
END_CASE


Done := (eExecuteDone = E_ExecuteDone.Done);
Active := (eExecuteDone = E_ExecuteDone.Init) OR (eExecuteDone = E_ExecuteDone.InOp) ;
Error := (eExecuteDone = E_ExecuteDone.Error);</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>1001b4d1-b93a-4e02-b5f9-07f3fac1f94f</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_HEVS_SetAlarm" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="bSetAlarm">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Active on state</xhtml>
                    </documentation>
                  </variable>
                  <variable name="bAckAlarmTrig">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Active on rising edge</xhtml>
                    </documentation>
                  </variable>
                  <variable name="ID">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Event Configuration</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Value">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Message">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="Category">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </inputVars>
                <inOutVars>
                  <variable name="plcDateTimePack">
                    <type>
                      <DT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Base time from PackTag.Admin.PLCDateTime
 PackTag.Admin.PLCDateTime should be set depending of HW system</xhtml>
                    </documentation>
                  </variable>
                  <variable name="stAdminAlarm">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXALARMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Event" />
                        </baseType>
                      </array>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> A reference to Alarm and Alarm History of PackTag.</xhtml>
                    </documentation>
                  </variable>
                  <variable name="stAdminAlarmHistory">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXHISTORYALARMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Event" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                </inOutVars>
                <outputVars>
                  <variable name="bMaxNbOfAlarmReached">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="stErrorString">
                    <type>
                      <string />
                    </type>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="diAlarmLoop">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="diFirstEmptyBufferId">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="bThisEventExistsInBuffer">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="bFoundFirstEventFalse">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="diBufferIdToRemove">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="ThisTrigger">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="rTrigAck">
                    <type>
                      <derived name="R_TRIG" />
                    </type>
                  </variable>
                  <variable name="rTrigTime">
                    <type>
                      <derived name="R_TRIG" />
                    </type>
                  </variable>
                  <variable name="dateTimeAtTrig">
                    <type>
                      <DT />
                    </type>
                  </variable>
                  <variable name="diBufferHistoryLoop">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
	A function block to set an alarm using
	PackML 2022 structure
	TwinCAT Tc3_EventLogger
	
	Source: www.hevs.ch
	Author: Cedric Lenoir
	Date: 22 August 2024


	En théorie pas besoin de bSetAlarm puisque l'on passe une structure d'alarme
	de type EVENT_typ qui contient la valeur du trigger...
</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	If the function is called with input bSetAlarm = TRUE, 
	the function verifies whether the specified alarm message 
	is already in the list of active alarms.

	If not, the function obtains the RTC of the controller
	and writes it together with the specified alarm message
	into the list of active alarms.

	If the maximum number of messages in the list is reached,
	no new message is added and bMaxNbOfAlarmReached is set to TRUE.
*)

rTrigTime(CLK := bSetAlarm);
IF rTrigTime.Q THEN
	dateTimeAtTrig := plcDateTimePack;
END_IF


IF ID = 0 THEN
	stErrorString := 'Event ID cannot be 0';
END_IF

IF bSetAlarm THEN
	ThisTrigger := TRUE;
	// Loop in stAdminAlarm to check if alarm ID exist is stAdminAlarm
	// I could use WHILE, but I use FOR..LOOP to have a constant time check.
	bThisEventExistsInBuffer := FALSE;
	diFirstEmptyBufferId := 0;
	bFoundFirstEventFalse := FALSE;
	FOR diAlarmLoop := 0 TO HEVS_PackTag_GVL.C_ADMIN_MAXALARMS BY 1 DO
		IF (stAdminAlarm[diAlarmLoop].ID = ID) THEN
			bThisEventExistsInBuffer := TRUE;
		END_IF;

		// Detect first empty index of buffer
		IF NOT stAdminAlarm[diAlarmLoop].Trigger AND
		   NOT bFoundFirstEventFalse              THEN	
			bFoundFirstEventFalse := TRUE;
			diFirstEmptyBufferId := diAlarmLoop;
		END_IF
	END_FOR
	
	// Check if buffer is Full
	bMaxNbOfAlarmReached := NOT bThisEventExistsInBuffer AND
	                        NOT bFoundFirstEventFalse;

	// If NOT bThisEventExistsInBuffer
	IF NOT bMaxNbOfAlarmReached 	AND
	   NOT bThisEventExistsInBuffer THEN
	   stAdminAlarm[diFirstEmptyBufferId].Trigger := TRUE;
	   stAdminAlarm[diFirstEmptyBufferId].ID := ID;
	   stAdminAlarm[diFirstEmptyBufferId].Value := Value;
	   stAdminAlarm[diFirstEmptyBufferId].Message := Message;
	   stAdminAlarm[diFirstEmptyBufferId].Category := Category;
	   stAdminAlarm[diFirstEmptyBufferId].DateTime := dateTimeAtTrig;
	   // Force reset Ack when written.
	   stAdminAlarm[diFirstEmptyBufferId].AckDateTime := DT#1970-1-1-0:0:0;
	
	ELSE
	   ;	// Do nothing if event exist or buffer full.
	END_IF
ELSE // This Event is no more active with bSetAlarm FALSE
	ThisTrigger := FALSE;
	
	// IF alarm is no more active, it must be canceled, then
	// the buffer should be modifed to remove empty space
	// by changing place of all events after it.
	bThisEventExistsInBuffer := FALSE;
	FOR diAlarmLoop := 0 TO HEVS_PackTag_GVL.C_ADMIN_MAXALARMS BY 1 DO
		IF stAdminAlarm[diAlarmLoop].ID = ID THEN
			bThisEventExistsInBuffer := TRUE;
			diBufferIdToRemove := diAlarmLoop;
		END_IF
	END_FOR
	
	// Before to Erase the Alarm, This alarm is stored in History.
	IF bThisEventExistsInBuffer THEN
		// Move all Event form Buffer(n-1) to Buffer(n)
		// Except the last one which will be lost (ALARM_HISTORY_EXTENT + 1).
		// As this buffer will be often full, there is no reason to use
		// something else than a FOR LOOP
		FOR diBufferHistoryLoop := HEVS_PackTag_GVL.C_ADMIN_MAXHISTORYALARMS TO 1 BY -1 DO
			stAdminAlarmHistory[diBufferHistoryLoop] := stAdminAlarmHistory[diBufferHistoryLoop - 1];
		END_FOR
		// Write This Alarm in Alarm History before to erase it from Alarms.
		stAdminAlarmHistory[0] := stAdminAlarm[diBufferIdToRemove];
	END_IF
	
	// Event exist in buffer Erase it.
	IF bThisEventExistsInBuffer THEN
		stAdminAlarm[diBufferIdToRemove].AckDateTime := DT#1970-1-1-0:0:0;
		stAdminAlarm[diBufferIdToRemove].Category := 0;
		stAdminAlarm[diBufferIdToRemove].DateTime := DT#1970-1-1-0:0:0;
		stAdminAlarm[diBufferIdToRemove].ID := 0;
		stAdminAlarm[diBufferIdToRemove].Message := '';
		stAdminAlarm[diBufferIdToRemove].Trigger := FALSE;
		stAdminAlarm[diBufferIdToRemove].Value := 0;

		// Remove empty index in buffer by moving next alarms.
		// IF positions in buffer are not empty (trigger false)
		diAlarmLoop := diBufferIdToRemove;
		
		WHILE diAlarmLoop &lt; HEVS_PackTag_GVL.C_ADMIN_MAXALARMS AND 
              stAdminAlarm[diAlarmLoop + 1].Trigger       DO
			// Cannot be out of buffer because diAlarmLoop &lt; GVL_PackConstant.ALARM_EXTENT
			// Move buffer (n+1) to buffer(n)
			stAdminAlarm[diAlarmLoop] := stAdminAlarm[diAlarmLoop + 1]; 
			diAlarmLoop := diAlarmLoop + 1;
		END_WHILE
		
		// Erase last position on buffer.
		IF diAlarmLoop &lt;&gt; diBufferIdToRemove THEN
			stAdminAlarm[diAlarmLoop].AckDateTime := DT#1970-1-1-0:0:0;
			stAdminAlarm[diAlarmLoop].Category := 0;
			stAdminAlarm[diAlarmLoop].DateTime := DT#1970-1-1-0:0:0;
			stAdminAlarm[diAlarmLoop].ID := 0;
			stAdminAlarm[diAlarmLoop].Message := '';
			stAdminAlarm[diAlarmLoop].Trigger := FALSE;
			stAdminAlarm[diAlarmLoop].Value := 0;
		END_IF
	END_IF 
END_IF

(*
	Set AckDateTime
	Do not set if NOT bSetAlarm because Event was removed with the above code.
*)
rTrigAck(CLK := bAckAlarmTrig);

IF rTrigAck.Q AND bSetAlarm THEN
	FOR diAlarmLoop := 0 TO HEVS_PackTag_GVL.C_ADMIN_MAXALARMS BY 1 DO
		IF (stAdminAlarm[diAlarmLoop].ID = ID) THEN
			stAdminAlarm[diAlarmLoop].AckDateTime := plcDateTimePack;
		END_IF
	END_FOR	
END_IF

</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>e0c70801-596b-4b02-bab4-4ef280aa3abb</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_HEVS_SetWarning" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="bSetWarning">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Active on state</xhtml>
                    </documentation>
                  </variable>
                  <variable name="bAckWarningTrig">
                    <type>
                      <BOOL />
                    </type>
                    <initialValue>
                      <simpleValue value="FALSE" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Active on rising edge</xhtml>
                    </documentation>
                  </variable>
                  <variable name="ID">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Event Configuration</xhtml>
                    </documentation>
                  </variable>
                  <variable name="Value">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="Message">
                    <type>
                      <string />
                    </type>
                  </variable>
                  <variable name="Category">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </inputVars>
                <inOutVars>
                  <variable name="plcDateTimePack">
                    <type>
                      <DT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Base time from PackTag.Admin.PLCDateTime
 PackTag.Admin.PLCDateTime should be set depending of HW system</xhtml>
                    </documentation>
                  </variable>
                  <variable name="stAdminWarning">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXWARNINGS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Event" />
                        </baseType>
                      </array>
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> A reference to list of Warnings from GVL PackTag</xhtml>
                    </documentation>
                  </variable>
                </inOutVars>
                <outputVars>
                  <variable name="bMaxNbOfAlarmReached">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="stErrorString">
                    <type>
                      <string />
                    </type>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="diWarningLoop">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="diFirstEmptyBufferId">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="bThisEventExistsInBuffer">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="bFoundFirstEventFalse">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="diBufferIdToRemove">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="ThisTrigger">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="rTrigAck">
                    <type>
                      <derived name="R_TRIG" />
                    </type>
                  </variable>
                  <variable name="rTrigTime">
                    <type>
                      <derived name="R_TRIG" />
                    </type>
                  </variable>
                  <variable name="dateTimeAtTrig">
                    <type>
                      <DT />
                    </type>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
	A function block to set an alarm using
	PackML 2022 structure
	TwinCAT Tc3_EventLogger
	
	Source: www.hevs.ch
	Author: Cedric Lenoir
	Date: 22 August 2024


	En théorie pas besoin de bSetAlarm puisque l'on passe une structure d'alarme
	de type EVENT_typ qui contient la valeur du trigger...
</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	If the function is called with input bSetAlarm = TRUE, 
	the function verifies whether the specified alarm message 
	is already in the list of active alarms.

	If not, the function obtains the RTC of the controller
	and writes it together with the specified alarm message
	into the list of active alarms.

	If the maximum number of messages in the list is reached,
	no new message is added and bMaxNbOfAlarmReached is set to TRUE.
*)

rTrigTime(CLK := bSetWarning);
IF rTrigTime.Q THEN
	dateTimeAtTrig := plcDateTimePack;
END_IF


IF ID = 0 THEN
	stErrorString := 'Event ID cannot be 0';
END_IF

IF bSetWarning THEN
	ThisTrigger := TRUE;
	// Loop in stAdminAlarm to check if alarm ID exist is stAdminAlarm
	// I could use WHILE, but I use FOR..LOOP to have a constant time check.
	bThisEventExistsInBuffer := FALSE;
	diFirstEmptyBufferId := 0;
	bFoundFirstEventFalse := FALSE;
	FOR diWarningLoop := 0 TO HEVS_PackTag_GVL.C_ADMIN_MAXWARNINGS BY 1 DO
		IF (stAdminWarning[diWarningLoop].ID = ID) THEN
			bThisEventExistsInBuffer := TRUE;
		END_IF;

		// Detect first empty index of buffer
		IF NOT stAdminWarning[diWarningLoop].Trigger AND
		   NOT bFoundFirstEventFalse              THEN	
			bFoundFirstEventFalse := TRUE;
			diFirstEmptyBufferId := diWarningLoop;
		END_IF
	END_FOR
	
	// Check if buffer is Full
	bMaxNbOfAlarmReached := NOT bThisEventExistsInBuffer AND
	                        NOT bFoundFirstEventFalse;

	// If NOT bThisEventExistsInBuffer
	IF NOT bMaxNbOfAlarmReached 	AND
	   NOT bThisEventExistsInBuffer THEN
	   stAdminWarning[diFirstEmptyBufferId].Trigger := TRUE;
	   stAdminWarning[diFirstEmptyBufferId].ID := ID;
	   stAdminWarning[diFirstEmptyBufferId].Value := Value;
	   stAdminWarning[diFirstEmptyBufferId].Message := Message;
	   stAdminWarning[diFirstEmptyBufferId].Category := Category;
	   stAdminWarning[diFirstEmptyBufferId].DateTime := dateTimeAtTrig;
	   // Force reset Ack when written.
	   stAdminWarning[diFirstEmptyBufferId].AckDateTime := DT#1970-1-1-0:0:0;
	ELSE
	   ;	// Do nothing if event exist or buffer full.
	END_IF
ELSE // This Event is no more active with bSetAlarm FALSE
	ThisTrigger := FALSE;
	// IF alarm is no more active, it must be canceled, then
	// the buffer should be modifed to remove empty space
	// by changing place of all events after it.
	bThisEventExistsInBuffer := FALSE;
	FOR diWarningLoop := 0 TO HEVS_PackTag_GVL.C_ADMIN_MAXWARNINGS BY 1 DO
		IF stAdminWarning[diWarningLoop].ID = ID THEN
			bThisEventExistsInBuffer := TRUE;
			diBufferIdToRemove := diWarningLoop;
		END_IF
	END_FOR
	
	// Event exist in buffer Erase it.
	IF bThisEventExistsInBuffer THEN
		stAdminWarning[diBufferIdToRemove].AckDateTime := DT#1970-1-1-0:0:0;
		stAdminWarning[diBufferIdToRemove].Category := 0;
		stAdminWarning[diBufferIdToRemove].DateTime := DT#1970-1-1-0:0:0;
		stAdminWarning[diBufferIdToRemove].ID := 0;
		stAdminWarning[diBufferIdToRemove].Message := '';
		stAdminWarning[diBufferIdToRemove].Trigger := FALSE;
		stAdminWarning[diBufferIdToRemove].Value := 0;

		// Remove empty index in buffer by moving next alarms.
		// IF positions in buffer are not empty (trigger false)
		diWarningLoop := diBufferIdToRemove;
		
		WHILE diWarningLoop &lt; HEVS_PackTag_GVL.C_ADMIN_MAXWARNINGS AND 
              stAdminWarning[diWarningLoop + 1].Trigger       DO
			// Cannot be out of buffer because diAlarmLoop &lt; GVL_PackConstant.ALARM_EXTENT
			// Move buffer (n+1) to buffer(n)
			stAdminWarning[diWarningLoop] := stAdminWarning[diWarningLoop + 1]; 
			diWarningLoop := diWarningLoop + 1;
		END_WHILE
		
		// Erase last position on buffer.
		IF diWarningLoop &lt;&gt; diBufferIdToRemove THEN
			stAdminWarning[diWarningLoop].AckDateTime := DT#1970-1-1-0:0:0;
			stAdminWarning[diWarningLoop].Category := 0;
			stAdminWarning[diWarningLoop].DateTime := DT#1970-1-1-0:0:0;
			stAdminWarning[diWarningLoop].ID := 0;
			stAdminWarning[diWarningLoop].Message := '';
			stAdminWarning[diWarningLoop].Trigger := FALSE;
			stAdminWarning[diWarningLoop].Value := 0;
		END_IF
	END_IF 
END_IF

(*
	Set AckDateTime
	Do not set if NOT bSetAlarm because Event was removed with the above code.
	
	Acknowledge on rising edge only
*)
rTrigAck(CLK := bAckWarningTrig);

IF rTrigAck.Q AND bSetWarning THEN
	FOR diWarningLoop := 0 TO HEVS_PackTag_GVL.C_ADMIN_MAXWARNINGS BY 1 DO
		IF (stAdminWarning[diWarningLoop].ID = ID) THEN
			stAdminWarning[diWarningLoop].AckDateTime := PackTag.Admin.PLCDateTime;
		END_IF
	END_FOR	
END_IF

</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>0bc69e37-dde3-4ad5-bccc-caaee1e90548</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_HEVS_StopReason" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="SuspendCategory">
                    <type>
                      <DINT />
                    </type>
                    <initialValue>
                      <simpleValue value="1" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> With default value 1</xhtml>
                    </documentation>
                  </variable>
                  <variable name="HoldCategory">
                    <type>
                      <DINT />
                    </type>
                    <initialValue>
                      <simpleValue value="2" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> With default value 2</xhtml>
                    </documentation>
                  </variable>
                  <variable name="StopCategory">
                    <type>
                      <DINT />
                    </type>
                    <initialValue>
                      <simpleValue value="3" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> With default value 3</xhtml>
                    </documentation>
                  </variable>
                  <variable name="AbortCategory">
                    <type>
                      <DINT />
                    </type>
                    <initialValue>
                      <simpleValue value="4" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> With default value 4</xhtml>
                    </documentation>
                  </variable>
                  <variable name="CompleteCategory">
                    <type>
                      <DINT />
                    </type>
                    <initialValue>
                      <simpleValue value="6" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> With default value 6</xhtml>
                    </documentation>
                  </variable>
                </inputVars>
                <inOutVars>
                  <variable name="stStopReason">
                    <type>
                      <derived name="HEVS_PackTag_Event" />
                    </type>
                  </variable>
                  <variable name="stAdminAlarm">
                    <type>
                      <array>
                        <dimension lower="0" upper="HEVS_PackTag_GVL.C_ADMIN_MAXALARMS" />
                        <baseType>
                          <derived name="HEVS_PackTag_Event" />
                        </baseType>
                      </array>
                    </type>
                  </variable>
                </inOutVars>
                <outputVars>
                  <variable name="SuspendCmd">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HoldCmd">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="StopCmd">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="AbortCmd">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="CompleteCmd">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="stopReasonToMaster">
                    <type>
                      <derived name="E_PackCmd" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackCmd.eUndefined" />
                    </initialValue>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Use to activate Stop Reason on FB_PackMasterState</xhtml>
                    </documentation>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="SuspendExistInAlarm">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="HoldExistInAlarm">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="StopExistInAlarm">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="AbortExistInAlarm">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="CompleteExistInAlarm">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="SuspendId">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="HoldId">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="StopId">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="AbortId">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="CompleteId">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                  <variable name="diAlarmLoop">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
	A function block to set an alarm using
	PackML 2022 structure
	TwinCAT Tc3_EventLogger
	
	Source: www.hevs.ch
	Author: Cedric Lenoir
	Date: 22 August 2024  
</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	TR 88 not precise, 
	we will show the Cmd with the Highest Priority
	with Abort, the higest, Stop, Complete, Hold and Suspend, the lowest.
*)
SuspendExistInAlarm := FALSE;
HoldExistInAlarm := FALSE;
StopExistInAlarm := FALSE;
AbortExistInAlarm := FALSE;
CompleteExistInAlarm := FALSE;

SuspendId := 0;
HoldId := 0;
StopId := 0;
AbortId := 0;
CompleteId := 0;
	
FOR diAlarmLoop := 0 TO HEVS_PackTag_GVL.C_ADMIN_MAXALARMS BY 1 DO
	IF stAdminAlarm[diAlarmLoop].Category = SuspendCategory THEN
		SuspendExistInAlarm := TRUE;
		SuspendId := diAlarmLoop;
	END_IF

	IF stAdminAlarm[diAlarmLoop].Category = HoldCategory THEN
		HoldExistInAlarm := TRUE;
		HoldId := diAlarmLoop;
	END_IF

	IF stAdminAlarm[diAlarmLoop].Category = StopCategory THEN
		StopExistInAlarm := TRUE;
		StopId := diAlarmLoop;
	END_IF

	IF stAdminAlarm[diAlarmLoop].Category = AbortCategory THEN
		AbortExistInAlarm := TRUE;
		AbortId := diAlarmLoop;
	END_IF

	IF stAdminAlarm[diAlarmLoop].Category = CompleteCategory THEN
		CompleteExistInAlarm := TRUE;
		CompleteId := diAlarmLoop;
	END_IF
END_FOR

// Select the highest priority sto reason
IF AbortExistInAlarm THEN
	stStopReason := stAdminAlarm[AbortId];
	stopReasonToMaster := E_PackCmd.eAbort;
	
ELSIF StopExistInAlarm THEN
	stStopReason := stAdminAlarm[StopId];
	stopReasonToMaster := E_PackCmd.eStop;

ELSIF CompleteExistInAlarm THEN
	stStopReason := stAdminAlarm[CompleteId];
	stopReasonToMaster := E_PackCmd.eComplete;
	
ELSIF HoldExistInAlarm THEN
	stStopReason := stAdminAlarm[HoldId];
	stopReasonToMaster := E_PackCmd.eHold;
	
ELSIF SuspendExistInAlarm THEN
	stStopReason := stAdminAlarm[SuspendId];
	stopReasonToMaster := E_PackCmd.eSuspend;
	
ELSE // No Stop reason, reset
	stStopReason.AckDateTime := DT#1970-1-1-0:0:0;
	stStopReason.Category := 0;
	stStopReason.DateTime := DT#1970-1-1-0:0:0;
	stStopReason.ID := 0;
	stStopReason.Message := '';
	stStopReason.Trigger := FALSE;
	stStopReason.Value := 0; 

	stopReasonToMaster := E_PackCmd.eUndefined;
END_IF

(*
	Set outputs
*)
AbortCmd := AbortExistInAlarm;
StopCmd := StopExistInAlarm AND NOT AbortExistInAlarm;
CompleteCmd := CompleteExistInAlarm AND NOT (AbortExistInAlarm OR StopExistInAlarm);
HoldCmd := HoldExistInAlarm AND NOT (AbortExistInAlarm OR StopExistInAlarm OR CompleteExistInAlarm);
SuspendCmd := SuspendCmd AND NOT (AbortExistInAlarm OR StopExistInAlarm OR CompleteExistInAlarm OR HoldExistInAlarm);


</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>25b844c3-bc7e-4b00-a9a0-014cdb5f5203</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_InOpBase" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="Enable">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </inputVars>
                <outputVars>
                  <variable name="InOperation">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="Error">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="ErrorId">
                    <type>
                      <WORD />
                    </type>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="eOperationBase">
                    <type>
                      <derived name="E_InOperationBase" />
                    </type>
                  </variable>
                  <variable name="errorCondition">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">
	A function block of type Enable
	
	Source: www.hevs.ch
	Author: Cedric Lenoir
	Date: 22 August 2024
</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">// Read Input

CASE eOperationBase OF
	E_InOperationBase.Idle 			:
		IF Enable THEN
			eOperationBase := E_InOperationBase.Init;
		END_IF
        
	E_InOperationBase.Init 			:
		IF NOT Enable THEN
			eOperationBase := E_InOperationBase.Idle;
		ELSIF errorCondition THEN
			eOperationBase := E_InOperationBase.Error;
		END_IF
        
	E_InOperationBase.InOp  :
		IF NOT Enable THEN
			eOperationBase := E_InOperationBase.Idle;
		ELSIF errorCondition THEN
			eOperationBase := E_InOperationBase.Error;
		END_IF
        
	E_InOperationBase.Error			:
		IF NOT Enable THEN
			eOperationBase := E_InOperationBase.Idle;
		END_IF
END_CASE

InOperation := eOperationBase = E_InOperationBase.InOp;
			   
Error := (eOperationBase = E_InOperationBase.Error);

// 0 while no ID defined
ErrorId := 0;</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>f8f38993-84e0-4aec-94d9-f4eb583a1dc4</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="PRG_Sandbox" pouType="program">
              <interface>
                <localVars>
                  <variable name="uliLoop">
                    <type>
                      <ULINT />
                    </type>
                  </variable>
                  <variable name="bInit">
                    <type>
                      <BOOL />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Only used to give a basic value to some variables.</xhtml>
                    </documentation>
                  </variable>
                  <variable name="fbInOpBase">
                    <type>
                      <derived name="FB_InOpBase" />
                    </type>
                  </variable>
                  <variable name="fbExecuteDone">
                    <type>
                      <derived name="FB_ExecuteDone" />
                    </type>
                  </variable>
                </localVars>
              </interface>
              <actions>
                <action name="ACT_TestNode">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
    This part is only used to test the communication with Node-RED
*)
IF NOT bInit THEN
    bInit := TRUE;
    GVL_Node.readREAL    := 3.14;
    GVL_Node.readDINT    := 421;
    GVL_Node.readBOOL    := TRUE;
    GVL_Node.readString  := 'Empty';
    GVL_Node.writeREAL   := 0;
    GVL_Node.writeDINT   := 0;
    GVL_Node.writeBOOL   := FALSE;
END_IF

IF GVL_Node.readREAL &gt; 6.28 THEN
    GVL_Node.readREAL := 0;
ELSE
    GVL_Node.readREAL := GVL_Node.readREAL + 0.1; ;
END_IF
    
IF GVL_Node.readDINT &gt; 1000 THEN
    GVL_Node.readDINT := 0;
ELSE
    GVL_Node.readDINT := GVL_Node.readDINT + 1;
END_IF</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>5f7daf80-8355-4df0-a828-03e8f8ac8616</ObjectId>
                    </data>
                  </addData>
                </action>
              </actions>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
    Test base FB
*)
fbInOpBase();
fbExecuteDone();

uliLoop := uliLoop + 1;
(*
    Used to test connection with Node-RED via ADS
*)
ACT_TestNode();

</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>4061fb18-cc46-4ea0-aa14-00c5bbba1682</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="PRG_TestAlarm" pouType="program">
              <interface>
                <localVars>
                  <variable name="BuildUiString">
                    <type>
                      <string />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Tempo var to display an evant in String Format for UI</xhtml>
                    </documentation>
                  </variable>
                  <variable name="fbSetAlarm_0">
                    <type>
                      <derived name="FB_HEVS_SetAlarm" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">
		Test alarms with FB first
	</xhtml>
                    </documentation>
                  </variable>
                  <variable name="fbSetAlarm_1">
                    <type>
                      <derived name="FB_HEVS_SetAlarm" />
                    </type>
                  </variable>
                  <variable name="fbSetAlarm_2">
                    <type>
                      <derived name="FB_HEVS_SetAlarm" />
                    </type>
                  </variable>
                  <variable name="fbSetWarning_0">
                    <type>
                      <derived name="FB_HEVS_SetWarning" />
                    </type>
                  </variable>
                  <variable name="fbSetWarning_1">
                    <type>
                      <derived name="FB_HEVS_SetWarning" />
                    </type>
                  </variable>
                  <variable name="fbSetWarning_2">
                    <type>
                      <derived name="FB_HEVS_SetWarning" />
                    </type>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 29
	
	This program is done to test alarms with a set of
		3 Alarms
		3 Warnings
</xhtml>
                </documentation>
              </interface>
              <actions>
                <action name="ACT_Build_Ui_Strings">
                  <body>
                    <ST>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Send to UI:	First line of Alarms
				First line of Warning
				Stop reason
*)
//PackTag.hevsPackAlarm_UI.uiTextAlarmOne := 'Complete with first Alarm';
BuildUiString := DINT_TO_STRING(PackTag.Admin.Alarm[0].ID);
BuildUiString := CONCAT(BuildUiString, ' ');
BuildUiString := CONCAT(BuildUiString, PackTag.Admin.Alarm[0].Message);
BuildUiString := CONCAT(BuildUiString, ' ');
BuildUiString := CONCAT(BuildUiString, DINT_TO_STRING(PackTag.Admin.Alarm[0].Category));
BuildUiString := CONCAT(BuildUiString, ' ');
BuildUiString := CONCAT(BuildUiString, DT_TO_STRING(PackTag.Admin.Alarm[0].DateTime));
PackTag.hevsPackAlarm_UI.uiTextAlarmOne := BuildUiString; 


BuildUiString := DINT_TO_STRING(PackTag.Admin.Warning[0].ID);
BuildUiString := CONCAT(BuildUiString, ' ');
BuildUiString := CONCAT(BuildUiString, PackTag.Admin.Warning[0].Message);
BuildUiString := CONCAT(BuildUiString, ' ');
BuildUiString := CONCAT(BuildUiString, DINT_TO_STRING(PackTag.Admin.Warning[0].Category));
BuildUiString := CONCAT(BuildUiString, ' ');
BuildUiString := CONCAT(BuildUiString, DT_TO_STRING(PackTag.Admin.Warning[0].DateTime));
PackTag.hevsPackAlarm_UI.uiTextWarningOne := BuildUiString;

BuildUiString := DINT_TO_STRING(PackTag.Admin.StopReason.ID);
BuildUiString := CONCAT(BuildUiString, ' ');
BuildUiString := CONCAT(BuildUiString, PackTag.Admin.StopReason.Message);
BuildUiString := CONCAT(BuildUiString, ' ');
BuildUiString := CONCAT(BuildUiString, DINT_TO_STRING(PackTag.Admin.StopReason.Category));
BuildUiString := CONCAT(BuildUiString, ' ');
BuildUiString := CONCAT(BuildUiString, DT_TO_STRING(PackTag.Admin.StopReason.DateTime));
PackTag.hevsPackAlarm_UI.uiTextStopReason := BuildUiString;

</xhtml>
                    </ST>
                  </body>
                  <addData>
                    <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                      <ObjectId>4d0e9839-f44e-4626-87d2-794d0ab9bc82</ObjectId>
                    </data>
                  </addData>
                </action>
              </actions>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">(*
	Call some alarms for test
*) 
fbSetAlarm_0(// Bit activation of Alarm and Ack
			 bSetAlarm := PackTag.hevsPackAlarm_UI.uiSetAlarm_0,
	         bAckAlarmTrig := PackTag.hevsPackAlarm_UI.uiAckAlarm_0,
			 // Alarm Parameters
			 ID := 5,
	         Value := 35,
	         Message := 'Abort 4, E-Stop',
	         Category := E_EventCategory.Abort,
			 // Reference to plc time from PackTag
			 plcDateTimePack	:= PackTag.Admin.PLCDateTime,
			 // Link to PackTag Admin
	         stAdminAlarm := PackTag.Admin.Alarm,
			 stAdminAlarmHistory := PackTag.Admin.AlarmHistory);
			 
fbSetAlarm_1(bSetAlarm := PackTag.hevsPackAlarm_UI.uiSetAlarm_1,
	         bAckAlarmTrig := PackTag.hevsPackAlarm_UI.uiAckAlarm_1,
			 ID := 6,
	         Value := 36,
	         Message := 'Stop 3, Motor Hot',
	         Category := E_EventCategory.Stop,
			 // Reference to plc time from PackTag
			 plcDateTimePack	:= PackTag.Admin.PLCDateTime,
			 // Link to PackTag Admin
	         stAdminAlarm := PackTag.Admin.Alarm,
			 stAdminAlarmHistory := PackTag.Admin.AlarmHistory);


fbSetAlarm_2(bSetAlarm := PackTag.hevsPackAlarm_UI.uiSetAlarm_2,
	         bAckAlarmTrig := PackTag.hevsPackAlarm_UI.uiAckAlarm_2,
			 ID := 7,
	         Value := 37,
	         Message := 'Hold 2, Gripper not closed',
	         Category := E_EventCategory.Hold,
			 // Reference to plc time from PackTag
			 plcDateTimePack	:= PackTag.Admin.PLCDateTime,
			 // Link to PackTag Admin
	         stAdminAlarm := PackTag.Admin.Alarm,
			 stAdminAlarmHistory := PackTag.Admin.AlarmHistory);	

(*
	Call some warnings for test
*)
fbSetWarning_0(bSetWarning := PackTag.hevsPackAlarm_UI.uiSetWarning_0,
	           bAckWarningTrig := PackTag.hevsPackAlarm_UI.uiAckWarning_0,
			   // Warning Parameters
			   ID := 1,
	           Value := 31,
	           Message := 'Warning 0, Door Open',
	           Category := E_EventCategory.Warning,
			   // Reference to plc time from PackTag
			   plcDateTimePack	:= PackTag.Admin.PLCDateTime,
			   // Link to PackTag Admin
	           stAdminWarning := PackTag.Admin.Warning);
			 
fbSetWarning_1(bSetWarning := PackTag.hevsPackAlarm_UI.uiSetWarning_1,
	           bAckWarningTrig := PackTag.hevsPackAlarm_UI.uiAckWarning_1,
			   // Warning Parameters
			   ID := 2,
	           Value := 32,
	           Message := 'Warning 1, Loaded',
	           Category := E_EventCategory.Warning,
			   // Reference to plc time from PackTag
			   plcDateTimePack	:= PackTag.Admin.PLCDateTime,
			   // Link to PackTag Admin
	           stAdminWarning := PackTag.Admin.Warning);


fbSetWarning_2(bSetWarning := PackTag.hevsPackAlarm_UI.uiSetWarning_2,
	           bAckWarningTrig := PackTag.hevsPackAlarm_UI.uiAckWarning_2,
			   // Warning Parameters
			   ID := 3,
	           Value := 33,
	           Message := 'Warning 3, Finished',
	           Category := E_EventCategory.Warning,
			   // Reference to plc time from PackTag
			   plcDateTimePack	:= PackTag.Admin.PLCDateTime,
			   // Link to PackTag Admin
	           stAdminWarning := PackTag.Admin.Warning);						 

// Display first evant in UI in string format.
// Could add History too.
ACT_Build_Ui_Strings();


			 		 
</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>09683879-db5b-4678-82e2-5b2fac3761e1</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/pou" handleUnknown="implementation">
            <pou name="FB_PackStatistic" pouType="functionBlock">
              <interface>
                <inputVars>
                  <variable name="Enable">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </inputVars>
                <inOutVars>
                  <variable name="plcCurrentTime_s">
                    <type>
                      <UDINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> E.g from PackTag.hevsPackTime.Local_date_time_seconds</xhtml>
                    </documentation>
                  </variable>
                  <variable name="unitCurrentMode">
                    <type>
                      <derived name="E_PackModes" />
                    </type>
                  </variable>
                  <variable name="unitCurrentState">
                    <type>
                      <derived name="E_PackState" />
                    </type>
                  </variable>
                  <variable name="unitAdmin">
                    <type>
                      <derived name="HEVS_PackTag_Admin" />
                    </type>
                  </variable>
                </inOutVars>
                <outputVars>
                  <variable name="Active">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                </outputVars>
                <localVars>
                  <variable name="trigModeTimeCurrent">
                    <type>
                      <derived name="R_TRIG" />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Detext State / Mode change</xhtml>
                    </documentation>
                  </variable>
                  <variable name="trigStateTimeCurrent">
                    <type>
                      <derived name="R_TRIG" />
                    </type>
                  </variable>
                  <variable name="memCurrentMode">
                    <type>
                      <derived name="E_PackModes" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackModes.Invalid" />
                    </initialValue>
                  </variable>
                  <variable name="memCurrentState">
                    <type>
                      <derived name="E_PackState" />
                    </type>
                    <initialValue>
                      <simpleValue value="E_PackState.eUndefined" />
                    </initialValue>
                  </variable>
                  <variable name="timeModeAtTrigger_s">
                    <type>
                      <UDINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Start time at trigger to compute current</xhtml>
                    </documentation>
                  </variable>
                  <variable name="timeStateAtTrigger_s">
                    <type>
                      <UDINT />
                    </type>
                  </variable>
                  <variable name="bProgramStarted">
                    <type>
                      <BOOL />
                    </type>
                  </variable>
                  <variable name="timeProgramStarted_s">
                    <type>
                      <UDINT />
                    </type>
                  </variable>
                  <variable name="getMemCumTimeMode">
                    <type>
                      <DINT />
                    </type>
                    <documentation>
                      <xhtml xmlns="http://www.w3.org/1999/xhtml"> Get Time In CumulativeTime for Mode and or state</xhtml>
                    </documentation>
                  </variable>
                  <variable name="getMemCumTimeModeState">
                    <type>
                      <DINT />
                    </type>
                  </variable>
                </localVars>
                <documentation>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 30
	
	This Function Block compute time statistics
</xhtml>
                </documentation>
              </interface>
              <body>
                <ST>
                  <xhtml xmlns="http://www.w3.org/1999/xhtml">IF Enable THEN
	trigModeTimeCurrent(clk := (unitCurrentMode &lt;&gt; memCurrentMode));
	trigStateTimeCurrent(clk := (unitCurrentState &lt;&gt; memCurrentState));
	
	IF trigModeTimeCurrent.Q THEN
		timeModeAtTrigger_s := plcCurrentTime_s;
		memCurrentMode := unitCurrentMode;
		// Get Stored value to compute new cummulative time.
		getMemCumTimeMode := unitAdmin.CumulativeTime[0].ModeStateTimes[unitCurrentMode].Mode;
	END_IF
	
	IF trigStateTimeCurrent.Q THEN
		timeStateAtTrigger_s := plcCurrentTime_s;
		memCurrentState := unitCurrentState;
	END_IF
	
	// If mode or state changed
	IF trigModeTimeCurrent.Q  OR
	   trigStateTimeCurrent.Q THEN
	   getMemCumTimeModeState := unitAdmin.CumulativeTime[0].ModeStateTimes[unitCurrentMode].State[memCurrentState];
	END_IF
	
	IF NOT bProgramStarted THEN
		bProgramStarted := TRUE;
		timeProgramStarted_s := plcCurrentTime_s;
	END_IF
	
	unitAdmin.ModeTimeCurrent := UDINT_TO_DINT(plcCurrentTime_s - timeModeAtTrigger_s);
	
	unitAdmin.StateTimeCurrent := UDINT_TO_DINT(plcCurrentTime_s - timeStateAtTrigger_s);
	
	// Default for [*] time from start program
	// No retain, that is number of Sec since last restart.
	unitAdmin.CumulativeTime[0].AccTimeSinceReset := UDINT_TO_DINT(plcCurrentTime_s - timeProgramStarted_s);
	
	// Minimum protection in case of unitCurrentMode exceed 
	//	HEVS_PackTag_GVL.C_MAXMODSTATESTIMES
	IF unitCurrentMode &lt;= HEVS_PackTag_GVL.C_MAXMODSTATESTIMES THEN
		// getMemCumTimeMode is set only at trigger change mode
		unitAdmin.CumulativeTime[0].ModeStateTimes[unitCurrentMode].Mode := getMemCumTimeMode + unitAdmin.ModeTimeCurrent;
	END_IF
	
	// Minimum protection in case of unitCurrentMode exceed 
	//	HEVS_PackTag_GVL.C_MAXMODSTATESTIMES
	// 	HEVS_PackTag_GVL.C_MAXSTATES
	IF unitCurrentMode &lt;= HEVS_PackTag_GVL.C_MAXMODSTATESTIMES AND
	   unitCurrentState &lt;= HEVS_PackTag_GVL.C_MAXSTATES        THEN
		// getMemCumTimeModeState is set only at trigger change of mode OR state 
		unitAdmin.CumulativeTime[0].ModeStateTimes[unitCurrentMode].State[unitCurrentState] := getMemCumTimeModeState +  unitAdmin.StateTimeCurrent;
	END_IF
	
	Active	:= FALSE;
ELSE
	
	Active	:= TRUE;
END_IF



</xhtml>
                </ST>
              </body>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>c53a1014-11e2-44bb-99ff-7adc8f32ccbf</ObjectId>
                </data>
              </addData>
            </pou>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/union" handleUnknown="implementation">
            <union name="HEVS_Min_PackTag_Union_Dint_FourBytesArray">
              <variable name="DintAccess">
                <type>
                  <DINT />
                </type>
              </variable>
              <variable name="FourBytesArrayAccess">
                <type>
                  <array>
                    <dimension lower="1" upper="4" />
                    <baseType>
                      <BYTE />
                    </baseType>
                  </array>
                </type>
              </variable>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>7ba07ba7-6982-44af-943b-9da318143d1b</ObjectId>
                </data>
              </addData>
            </union>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/union" handleUnknown="implementation">
            <union name="HEVS_Min_PackTag_Union_Dword_Dint_FourBytesArray">
              <variable name="DwordAccess">
                <type>
                  <DWORD />
                </type>
              </variable>
              <variable name="DintAccess">
                <type>
                  <DINT />
                </type>
              </variable>
              <variable name="FourBytesArrayAccess">
                <type>
                  <array>
                    <dimension lower="1" upper="4" />
                    <baseType>
                      <BYTE />
                    </baseType>
                  </array>
                </type>
              </variable>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>8c82d660-cb2c-4b9d-9829-db398a9d1404</ObjectId>
                </data>
              </addData>
            </union>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/union" handleUnknown="implementation">
            <union name="U_StateBitDword">
              <variable name="dwState">
                <type>
                  <DWORD />
                </type>
              </variable>
              <variable name="boolState">
                <type>
                  <derived name="ST_PackState" />
                </type>
              </variable>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>5714f1a6-9b68-4006-a1cf-1d6f41db9c42</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 29
	
	For bit access fo DWORD States
	States Transitions and Enabled States
</xhtml>
              </documentation>
            </union>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/union" handleUnknown="implementation">
            <union name="U_ModeBitDword">
              <variable name="dwMode">
                <type>
                  <DWORD />
                </type>
              </variable>
              <variable name="boolMode">
                <type>
                  <derived name="ST_PackMode" />
                </type>
              </variable>
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>c9ef1393-9d66-4dd6-a655-1325e14eab74</ObjectId>
                </data>
              </addData>
              <documentation>
                <xhtml xmlns="http://www.w3.org/1999/xhtml">	www.hevs.ch
	Institut Systemes Industriels
	Project: 	HEVS Pack 2022
	Author:		Cedric Lenoir
	Date:		2024 August 29
	
	For bit access fo DWORD Modes
</xhtml>
              </documentation>
            </union>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/libraries" handleUnknown="implementation">
            <Libraries>
              <Library Name="#IecVarAccess" Namespace="IecVarAccessLibrary" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="IecVarAccess, 3.3.1.20 (System)" />
              <Library Name="#CmpLog" Namespace="CmpLog" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="" />
              <Library Name="#BreakpointLogging" Namespace="BPLog" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Breakpoint Logging Functions, * (3S - Smart Software Solutions GmbH)" />
              <Library Name="#SysTimeRtc" Namespace="SysTimeRtc" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="SysTimeRtc, * (System)" />
              <Library Name="#SysTypes" Namespace="SysTypes" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="SysTypes, * (System)" />
              <Library Name="#CXA_DIAGNOSTICS" Namespace="CXAC_Diagnostics" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="false" LinkAllContent="false" DefaultResolution="CXAC_Diagnostics, * (Bosch Rexroth AG)" />
              <Library Name="#IoStandard" Namespace="IoStandard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="true" DefaultResolution="IoStandard, 3.5.17.0 (System)" />
              <Library Name="#CXA_BASE" Namespace="CXAC_Base" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CXAC_Base, 1.18.3.0 (Bosch Rexroth AG)" />
              <Library Name="#CXA_COMMONTYPES" Namespace="CXA_CommonTypes" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CXA_CommonTypes, 1.18.1.0 (Bosch Rexroth AG)" />
              <Library Name="#CXA_UTILITIES" Namespace="CXA_Utilities" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="CXA_Utilities, 1.20.1.0 (Bosch Rexroth AG)" />
              <Library Name="#Standard" Namespace="Standard" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="Standard, 3.5.18.0 (System)" />
              <Library Name="#3SLicense" Namespace="_3S_LICENSE" HideWhenReferencedAsDependency="false" PublishSymbolsInContainer="false" SystemLibrary="true" LinkAllContent="false" DefaultResolution="3SLicense, 0.0.0.0 (3S - Smart Software Solutions GmbH)" ResolverGuid="97c3b452-d9fa-4ac2-9d0c-3d420aa6d95b" />
              <addData>
                <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
                  <ObjectId>f3b983b2-4e8f-4fdd-ac75-e5f58fa2f22b</ObjectId>
                </data>
              </addData>
            </Libraries>
          </data>
          <data name="http://www.3s-software.com/plcopenxml/objectid" handleUnknown="discard">
            <ObjectId>b0264aff-d2a0-4da7-bb5e-931fd83bdeca</ObjectId>
          </data>
        </addData>
      </resource>
    </data>
    <data name="http://www.3s-software.com/plcopenxml/projectstructure" handleUnknown="discard">
      <ProjectStructure>
        <Object Name="Application" ObjectId="b0264aff-d2a0-4da7-bb5e-931fd83bdeca">
          <Object Name="Gestionnaire de bibliothèque" ObjectId="f3b983b2-4e8f-4fdd-ac75-e5f58fa2f22b" />
          <Object Name="MainTask" ObjectId="7f87f880-f708-45a0-b4ca-cc102dabc36b" />
          <Folder Name="HEVS_Pack_2022">
            <Folder Name="HEVS_PackTag">
              <Object Name="HEVS_PackTag_Admin" ObjectId="d108cbab-6e90-4ef9-a391-289fa9a98980" />
              <Object Name="HEVS_PackTag_Command" ObjectId="0b4060a5-ab77-408d-bfc1-5a7cf1bbaac8" />
              <Object Name="HEVS_PackTag_GVL" ObjectId="4085d374-ce51-4e14-9918-b32f4c284545" />
              <Object Name="HEVS_PackTag_Ingredients" ObjectId="82c9fbec-028e-4b74-984e-6e8f1eabba7d" />
              <Object Name="HEVS_PackTag_Status" ObjectId="c49232f3-8d6a-444f-b018-be658dc0e900" />
              <Object Name="HEVS_PackTag_V2022" ObjectId="ede584f4-faea-4edc-ac4f-26e11158079f" />
              <Object Name="HEVS_PackTag_DateTime" ObjectId="75ba484e-dc21-4db8-9603-488e87a6e26f" />
              <Object Name="HEVS_PackTag_Parameter_Real" ObjectId="d2837c06-ebe6-4f26-9245-94edca3e7121" />
              <Object Name="HEVS_PackTag_Parameter_String" ObjectId="009e0116-23d4-45fb-b879-708dea550fd9" />
              <Object Name="HEVS_PackTag_Parameter_Lreal" ObjectId="45d5e6b7-0b56-4e4f-ae34-9664522a836e" />
              <Object Name="HEVS_PackTag_Parameter_Dint" ObjectId="eb334bfc-9e8f-458d-bef5-d6a961676728" />
              <Object Name="HEVS_PackTag_Recipe" ObjectId="b76c5b45-a44a-4a62-8024-a9767004cdf1" />
              <Object Name="HEVS_PackTag_ProductData" ObjectId="a6d48100-70aa-4264-894a-9da5295d973b" />
              <Object Name="HEVS_PackTag_CumulativeTimes" ObjectId="49131235-aab3-4d38-a937-50f47faa23f2" />
              <Object Name="HEVS_PackTag_ModeStateTimes" ObjectId="28770257-7468-46c1-b9e4-d78e8d2c5114" />
              <Object Name="HEVS_PackTag_Process_Variables" ObjectId="9aabf17d-e21a-4f8e-9b32-f667a6c3dbb8" />
              <Object Name="HEVS_PackTag_Event" ObjectId="690ae37f-d77f-4d91-aaf1-6a5d8e6e0795" />
              <Object Name="HEVS_PackTag_Equipment_Interlock" ObjectId="f382b094-734b-4952-b47e-2816cff8d29f" />
              <Object Name="HEVS_Min_PackTag_V2022" ObjectId="faffa4d6-c6bc-457a-9efa-07f65f485ffc" />
              <Object Name="HEVS_Min_PackTag_Admin" ObjectId="a43cddf4-c8a5-44d1-8ba4-9f1f7a937613" />
              <Object Name="HEVS_Min_PackTag_Command" ObjectId="65889f7d-d5e2-4470-999d-f8480f921136" />
              <Object Name="HEVS_Min_PackTag_Status" ObjectId="0d613522-abc4-40b6-a451-6e71583df5e1" />
              <Object Name="HEVS_Min_PackTag_ProductData" ObjectId="7ab4fa7d-1459-4db4-b429-607e425318b0" />
              <Object Name="HEVS_Min_PackTag_Event" ObjectId="e1863f81-df82-4b38-af75-947ee5ffedda" />
              <Object Name="HEVS_Min_PackTag_Union_Dint_FourBytesArray" ObjectId="7ba07ba7-6982-44af-943b-9da318143d1b" />
              <Object Name="HEVS_Min_PackTag_Union_Dword_Dint_FourBytesArray" ObjectId="8c82d660-cb2c-4b9d-9829-db398a9d1404" />
            </Folder>
            <Folder Name="HEVS_DUT_Pack">
              <Object Name="HEVS_PackTag_UI" ObjectId="16b6481b-a00d-4b5c-b59c-fa631f342f7f" />
              <Object Name="E_PackCmd" ObjectId="0201c49d-7c4f-44a5-a3fb-73388760e8e0" />
              <Object Name="E_PackState" ObjectId="00faab18-5d99-44a7-b706-06eacad107ed" />
              <Object Name="ST_PackCmd" ObjectId="ff08f30b-a0ba-4953-a108-b05c11eb97fa" />
              <Object Name="ST_PackState" ObjectId="fb64425a-81bf-45a4-b7ac-34663996dfac" />
              <Object Name="E_PackModes" ObjectId="8fa2b963-faae-404f-b23c-89e5d0dc2df6" />
              <Object Name="E_PackDisabledStates" ObjectId="435efc4c-bc80-4545-b2ec-769cbd1bcfa1" />
              <Object Name="E_PackStopReasonId" ObjectId="f873540b-ef3d-4de7-a6c3-d3658604fe37" />
              <Object Name="U_StateBitDword" ObjectId="5714f1a6-9b68-4006-a1cf-1d6f41db9c42" />
              <Object Name="ST_PackMode" ObjectId="d5af7f8a-b39b-47dd-86ee-b272e7252114" />
              <Object Name="U_ModeBitDword" ObjectId="c9ef1393-9d66-4dd6-a655-1325e14eab74" />
              <Object Name="HEVS_Time" ObjectId="7dc2f57e-8cb2-44c1-a7f1-32d1a629ed5a" />
              <Object Name="HEVS_PackAlarm_UI" ObjectId="b8873650-2c47-4f19-8385-84758d8f612e" />
            </Folder>
            <Folder Name="HEVS_POU_Pack">
              <Object Name="FB_PackStateCmdBoolInterface" ObjectId="18e2dbbf-058a-44fd-ab8d-b7b06a9625c1" />
              <Object Name="PLC_PACK" ObjectId="5c35c50a-157a-4d4c-902b-ae375026ac63">
                <Object Name="ACT_SetDefaultSettings" ObjectId="87b02d6d-71ac-471e-aa2b-ce43d0a30872" />
              </Object>
              <Object Name="FB_PackModeBoolInterface" ObjectId="4f86ac17-014e-4bfb-9159-6b8b7f3e80cf" />
              <Object Name="FB_ModuleTest" ObjectId="601ff330-a649-4e31-80da-fb610f5e1307">
                <Object Name="SC" ObjectId="efa286d9-f5c0-40b3-bb08-a9d6eedea102" />
              </Object>
              <Object Name="FB_PackMasterState" ObjectId="0de1fa31-8e47-4928-9177-469e85c196ac">
                <Object Name="M_SkipDisabledState" ObjectId="2f2f8118-76b4-4f15-9b26-e73c2e248849" />
              </Object>
              <Object Name="FB_GetActualBoolState" ObjectId="6affd389-50f5-4341-b972-670c6d1ab193" />
              <Object Name="FB_PackMasterMode" ObjectId="e6266108-2902-4df5-af45-0b3e6b914fe1" />
              <Object Name="FB_PackStatistic" ObjectId="c53a1014-11e2-44bb-99ff-7adc8f32ccbf" />
            </Folder>
            <Object Name="PackTag" ObjectId="16825ecc-ff12-4bc7-b33f-3c03e1a40b22" />
            <Folder Name="HEVS_Alarm_POU">
              <Object Name="PRG_TestAlarm" ObjectId="09683879-db5b-4678-82e2-5b2fac3761e1">
                <Object Name="ACT_Build_Ui_Strings" ObjectId="4d0e9839-f44e-4626-87d2-794d0ab9bc82" />
              </Object>
              <Object Name="PRG_GetTime_CtrlX" ObjectId="80fdabaa-4283-4d32-ab4e-3a431464d5d7" />
              <Object Name="FB_ExecuteDone" ObjectId="1001b4d1-b93a-4e02-b5f9-07f3fac1f94f" />
              <Object Name="FB_HEVS_SetAlarm" ObjectId="e0c70801-596b-4b02-bab4-4ef280aa3abb" />
              <Object Name="FB_HEVS_SetWarning" ObjectId="0bc69e37-dde3-4ad5-bccc-caaee1e90548" />
              <Object Name="FB_HEVS_StopReason" ObjectId="25b844c3-bc7e-4b00-a9a0-014cdb5f5203" />
              <Object Name="FB_InOpBase" ObjectId="f8f38993-84e0-4aec-94d9-f4eb583a1dc4" />
              <Object Name="PRG_Sandbox" ObjectId="4061fb18-cc46-4ea0-aa14-00c5bbba1682">
                <Object Name="ACT_TestNode" ObjectId="5f7daf80-8355-4df0-a828-03e8f8ac8616" />
              </Object>
            </Folder>
            <Folder Name="HEVS_Alarm_DUTs">
              <Object Name="E_EventCategory" ObjectId="f90ad14e-1baf-4d21-8bd3-5b7969a8b0ab" />
              <Object Name="E_ExecuteDone" ObjectId="a9cfd599-1924-4493-b8e0-4d09e4e1ae3d" />
              <Object Name="E_InOperationBase" ObjectId="adac47c1-6eb2-411d-9a6d-67975f8b3e46" />
            </Folder>
            <Object Name="GVL_Node" ObjectId="396a7b9c-ec2e-4ea3-a276-8f8545127323" />
          </Folder>
        </Object>
      </ProjectStructure>
    </data>
  </addData>
</project>